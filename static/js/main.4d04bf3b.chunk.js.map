{"version":3,"sources":["data/LocalData.js","components/CommonStyle.js","components/DetailCard.js","components/NewContact.js","components/ContactList.js","components/SearchBar.js","components/SideDrawer.js","components/Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["LocalData","id","checked","fullname","about","image","email","phone","company","address","CommonStyle","theme","useTheme","styles","root","display","large","width","spacing","height","marginRight","breakpoints","down","larger","margin","backdrop","zIndex","drawer","color","active","boxShadow","background","heading","marginLeft","transform","searchbar","borderRadius","padding","minWidth","cursor","input","flex","transition","fontWeight","Checkbox","button","maxWidth","textTransform","fontSize","whiteSpace","minHeight","btnAdd","up","paddingLeft","btnEdit","hoverbold","listHeaderItem","textAlign","basicInfo","overflow","textOverflow","overflowSpace","only","contactField","position","top","detailCard","textWhite","bgSilver","bgGradient","appBar","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","flexShrink","drawerOpen","overflowX","drawerClose","border","toolbar","alignItems","justifyContent","mixins","mainContent","removePadding","innerContent","content","flexGrow","makeStyles","useStyles","data","undefined","length","style","overflowWrap","stringToColor","string","hash","i","charCodeAt","toString","substr","nameError","emailError","phoneError","companyError","addressError","aboutError","formError","DetailCard","contact","editable","handleEdit","handleUpdate","setActive","classes","React","useState","state","setState","dropzoneOpen","setDropzoneOpen","handleChangeInput","e","target","name","value","field","test","validateField","useEffect","console","log","Grid","container","item","xs","justify","className","Tooltip","title","IconButton","onClick","ArrowBack","Fab","size","variant","Edit","showPreviewsInDropzone","showPreviews","filesLimit","acceptedFiles","showFileNamesInPreview","showFileNames","open","onClose","onSave","files","URL","createObjectURL","Badge","overlap","invisible","anchorOrigin","vertical","horizontal","badgeContent","left","AddAPhoto","Avatar","src","split","map","n","lineHeight","md","TextField","multiline","type","label","onChange","helperText","error","rowsMax","sm","disabled","Save","Close","NewContact","props","newListItem","newContactField","newContactName","setNewContactName","newContactEmail","setNewContactEmail","setEmailError","setNameError","handleOnChange","trim","found","find","obj","toLowerCase","saveContact","addNewContact","reduce","max","next","Math","ListItem","ListItemAvatar","DoneOutline","ListItemText","primary","align","required","autoFocus","InputProps","startAdornment","InputAdornment","AccountBox","onKeyDown","keyCode","placeholder","Email","handleAdd","ContactList","selectAll","setSelectAll","some","List","disablePadding","arrow","edge","wannaCreateNew","handleSelectAll","IndeterminateCheckBox","AddBox","Hidden","smDown","index","Fragment","key","dense","selected","activeContact","handleContactClick","ListItemIcon","handleCheckedChange","stopPropagation","alt","secondary","mdUp","lgUp","SearchBar","lg","clsx","InputBase","search","aria-label","Search","TransitionComponent","Zoom","Button","fullWidth","Add","handleDelete","Delete","SideDrawer","Drawer","paper","handleDrawerClose","ChevronLeft","handleDrawerOpen","ClearAllRounded","marginTop","PersonOutline","Twitter","GitHub","localData","Wrapper","setOpen","setEditable","setActiveContact","setData","setSearch","setWannaCreateNew","temp","forEach","status","filterData","filter","includes","searchFilter","updatedContact","AppBar","Toolbar","smUp","Backdrop","wrap","Typography","component","xsDown","clickedContact","changedContact","push","mdDown","App","fontFamily","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4d04bf3b.chunk.js","sourcesContent":["\r\nconst LocalData = () => {\r\n    let data = [\r\n        {\r\n            id: 0,\r\n            checked: false,\r\n            fullname: \"Admin User\",\r\n            about: \"I am Admin Of the App\",\r\n            image: \"\",\r\n            email: \"admin@gmail.com\",\r\n            phone: \"1231234567\",\r\n            company: \"Work at Work\",\r\n            address: \"Gotham City\",\r\n        }, {\r\n            id: 1,\r\n            checked: false,\r\n            fullname: \"Karan Parmar\",\r\n            about: \"Intern At Zuru Tech India pvt ltd\",\r\n            image: \"brokenLink.png\",\r\n            email: \"k123parmar@gmail.com\",\r\n            phone: \"+91 8511918322\",\r\n            company: \"ZURU Tech India\",\r\n            address: \"Jivrajpark, Ahmedabad, Gujarat\",\r\n        }, {\r\n            id: 2,\r\n            checked: false,\r\n            fullname: \"Elon Musk\",\r\n            about: \"I build cool stuff\",\r\n            image: \"https://i1.wp.com/smestreet.in/wp-content/uploads/2018/05/Elon-Musk-Tesla.gif?fit=300%2C225&ssl=1\",\r\n            email: \"musk@tesla.com\",\r\n            phone: \"124 421 8055\",\r\n            company: \"Tesla Inc\",\r\n            address: \"Mars nearby Earth\",\r\n        }, {\r\n            id: 3,\r\n            checked: false,\r\n            fullname: \"Jeff Bezos\",\r\n            about: \"I am that rich guy\",\r\n            image: \"https://images.ladbible.com/thumbnail?type=jpeg&url=http://beta.ems.ladbiblegroup.com/s3/content/dceff8665e34a7857ec00b211f98cd9f.png&quality=70&width=720\",\r\n            email: \"bezos@amazon.com\",\r\n            phone: \"\",\r\n            company: \"Amazon Inc\",\r\n            address: \"Washington\",\r\n        }, {\r\n            id: 4,\r\n            checked: false,\r\n            fullname: \"Vrajpal Jhala\",\r\n            about: \"Intern At ZURU Tech India pvt ltd\",\r\n            image: \"\",\r\n            email: \"vrajpaljhala@gmail.com\",\r\n            phone: \"+91 1234512345\",\r\n            company: \"ZURU Tech India\",\r\n            address: \"Navrangpura, Ahmedabad, Gujarat\",\r\n        },\r\n    ];\r\n    return (\r\n        data\r\n    )\r\n}\r\n\r\nexport default LocalData\r\n","import { useTheme, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CommonStyle = () => {\r\n    const theme = useTheme();\r\n    const drawerWidth = 220;\r\n\r\n    const styles =\r\n    {\r\n        root: {\r\n            display: \"flex\",\r\n        },\r\n        large: {\r\n            width: theme.spacing(6),\r\n            height: theme.spacing(6),\r\n            marginRight: theme.spacing(2),\r\n            [theme.breakpoints.down(\"xs\")]: {\r\n                marginRight: 0,\r\n            }\r\n        },\r\n        larger: {\r\n            width: theme.spacing(10),\r\n            height: theme.spacing(10),\r\n            margin: theme.spacing(2)\r\n        },\r\n        backdrop: {\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n                zIndex: theme.zIndex.drawer - 1,\r\n                color: \"black\"\r\n            }\r\n        },\r\n        active: {\r\n            boxShadow: \"inset 5px 0 0 0 white\",\r\n            background: \"rgba(140, 81, 81, 0.15)\",\r\n            color: \"rgba(255,255,255,1)\"\r\n        },\r\n        heading: {\r\n            [theme.breakpoints.down(\"xs\")]: {\r\n                // paddingRight: \"0px\",\r\n                // transform: \"scale(0.8)\"\r\n                //textAlign:\"center\"\r\n                marginLeft: \"50%\",\r\n                transform: \"translate(-50%)\",\r\n            }\r\n        },\r\n\r\n        searchbar: {\r\n            background: \"rgb(230, 230, 230)\",\r\n            display: \"flex\",\r\n            borderRadius: 25,\r\n            padding: \"0 6px 0 12px\",\r\n            minWidth: \"120px\",\r\n            \"& :hover\": {\r\n                cursor: \"help\",\r\n            },\r\n            [theme.breakpoints.down(321)]: {\r\n                transform: \"scale(0.8)\",\r\n            }\r\n\r\n        },\r\n        input: {\r\n            background: \"transparent\",\r\n            marginLeft: theme.spacing(1),\r\n            flex: 1,\r\n            transition: \"all 0.5s linear\",\r\n            \"& :focus\": {\r\n                fontWeight: \"600\",\r\n                cursor: \"text\"\r\n            },\r\n        },\r\n        Checkbox: {\r\n            [theme.breakpoints.down(\"xs\")]: {\r\n                minWidth: \"24px\"\r\n            }\r\n        },\r\n\r\n        button: {\r\n            minWidth: \"80px\",\r\n            maxWidth: \"120px\",\r\n            textTransform: \"none\",\r\n            fontSize: \"110%\",\r\n            whiteSpace: \"nowrap\",\r\n            minHeight: \"48px\",\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n                minWidth: \"44px\",\r\n                maxWidth: \"44px\",\r\n                minHeight: \"44px\",\r\n                borderRadius: \"50%\"\r\n            },\r\n            [theme.breakpoints.down(321)]: {\r\n                transform: \"scale(0.8)\",\r\n            }\r\n        },\r\n        btnAdd: {\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                paddingLeft: \"12px\"\r\n            }\r\n        },\r\n        btnEdit: {\r\n            color: \"black\",\r\n            background: \"white\",\r\n            \"& :hover\": {\r\n                fontWeight: \"600\"\r\n            }\r\n        },\r\n        hoverbold: {\r\n            \"& :hover\": {\r\n                fontWeight: \"bolder\"\r\n            }\r\n        },\r\n        listHeaderItem: {\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                marginLeft: \"24px\",\r\n            },\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n                textAlign: \"center\"\r\n            }\r\n        },\r\n        basicInfo: {\r\n            minWidth: \"23ch\",\r\n            maxWidth: \"23ch\",\r\n            overflow: \"hidden\",\r\n            whiteSpace: \"nowrap\",\r\n            textOverflow: \"ellipsis\",\r\n            overflowSpace:\"break-word\",\r\n            [theme.breakpoints.only(\"md\")]: {\r\n                minWidth: \"28ch\",\r\n                maxWidth: \"32ch\",\r\n            }\r\n        },\r\n        contactField: {\r\n            display: \"flex\",\r\n            background: \"transparent\",\r\n            position: \"relative\",\r\n            top: \"-4px\",\r\n            color: \"black !important\",\r\n            padding: \"0px 3px\"\r\n        },\r\n        detailCard: {\r\n            textAlign: \"left\",\r\n            padding: \"32px\",\r\n            [theme.breakpoints.up(\"lg\")]: {\r\n                marginLeft: \"32px\"\r\n            }\r\n        },\r\n        textWhite: {\r\n            color: \"rgba(255,255,255,0.9)\"\r\n        },\r\n        bgSilver: {\r\n            background: \"rgb(230, 230, 230)\",\r\n            color: \"rgb(128, 128, 128)\"\r\n        },\r\n        bgGradient: {\r\n            background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n            color: \"white\",\r\n            fontWeight: \"bold\",\r\n        },\r\n\r\n        appBar: {\r\n            transition: theme.transitions.create([\"width\", \"margin\"], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen\r\n            }),\r\n            background: \"white\",\r\n\r\n        },\r\n        appBarShift: {\r\n            marginLeft: drawerWidth,\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            transition: theme.transitions.create([\"width\", \"margin\"], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen\r\n            })\r\n        },\r\n        menuButton: {\r\n            marginRight: 29\r\n        },\r\n        hide: {\r\n            display: \"none\"\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: \"nowrap\",\r\n            background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n        },\r\n\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create(\"width\", {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen\r\n            }),\r\n            overflowX: \"hidden\"\r\n        },\r\n        drawerClose: {\r\n            transition: theme.transitions.create(\"width\", {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen\r\n            }),\r\n            overflowX: \"hidden\",\r\n            width: 0,\r\n            border: 0,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: theme.spacing(8) + 1,\r\n            },\r\n\r\n        },\r\n        toolbar: {\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-end\",\r\n            paddingLeft: \"90px\",\r\n            padding: theme.spacing(0, 1),\r\n            ...theme.mixins.toolbar\r\n        },\r\n        mainContent: {\r\n            [theme.breakpoints.down('xs')]: {\r\n                position: \"absolute\"\r\n            }\r\n        },\r\n        removePadding: {\r\n            [theme.breakpoints.down('xs')]: {\r\n                padding: \"20px 0px !important\",\r\n            }\r\n        },\r\n        innerContent: {\r\n            padding: \"auto 0px\",\r\n            [theme.breakpoints.up('sm')]: {\r\n                paddingLeft: \"32px\"\r\n            },\r\n            [theme.breakpoints.down('sm')]: {\r\n                padding: \"auto 0px auto\",\r\n            }\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3),\r\n            margin: \"20px\",\r\n            [theme.breakpoints.down('xs')]: {\r\n                margin: \"0px\"\r\n            },\r\n        }\r\n    };\r\n\r\n\r\n    const useStyles = makeStyles(theme => (styles));\r\n    const classes = useStyles();\r\n\r\n\r\n    return (classes);\r\n};\r\n\r\n\r\nexport default CommonStyle;\r\n","import React from 'react';\r\nimport { Edit, Save, Close, ArrowBack, AddAPhoto } from \"@material-ui/icons\";\r\nimport { Grid, Avatar, Fab, Input, Badge, TextField, IconButton, Tooltip } from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport { DropzoneDialog } from 'material-ui-dropzone';\r\nimport axios from \"axios\";\r\nimport CommonStyle from \"./CommonStyle\";\r\n\r\nfunction display(data) {\r\n    if (data !== undefined) return (data.length > 0)\r\n        ? <span style={{ overflowWrap: \"break-word\",maxWidth:\"29ch\" }}>{data}</span>\r\n        : <span style={{ color: \"dimgray\" }}>Info Not Provided</span>;\r\n}\r\nfunction stringToColor(string) {\r\n    let hash = 0, i = 0, color = \"#\";\r\n    for (i = 0; i < string.length; i += 1) {\r\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    for (i = 0; i < 3; i += 1) {\r\n        const value = (hash >> (i * 8)) & 0xff;\r\n        color += `00${value.toString(16)}`.substr(-2);\r\n    }\r\n    return color;\r\n}\r\nlet nameError = \"\", emailError = \"\", phoneError = \"\", companyError = \"\", addressError = \"\", aboutError = \"\";\r\nlet formError = false;\r\nconst DetailCard = ({ contact, editable, handleEdit, handleUpdate, setActive }) => {\r\n\r\n    const theme = useTheme();\r\n    const classes = CommonStyle(theme);\r\n    const [state, setState] = React.useState(contact);\r\n    let [dropzoneOpen, setDropzoneOpen] = React.useState(false);\r\n\r\n    const validateField = (e) => {\r\n        let value = e.target.value || \"\";\r\n        let field = e.target.name;\r\n\r\n        if (field === \"fullname\") {\r\n            if (value.length) {\r\n                if (value.length > 32) {\r\n                    nameError = \"max 32 chars\";\r\n                }\r\n                else { nameError = \"\"; }\r\n            }\r\n            else {\r\n                nameError = \"fullname is required\"\r\n            }\r\n        }\r\n        if (field === \"email\") {\r\n            if (value.length) {\r\n                if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n                    emailError = \"Invalid email address\";\r\n                }\r\n                else if (value.length > 100) {\r\n                    emailError = \"max 100 chars\";\r\n                }\r\n                else { emailError = \"\"; }\r\n            }\r\n            else {\r\n                emailError = \"email is required\"\r\n            }\r\n        }\r\n        if (field === \"phone\") {\r\n            if (value.length) {\r\n                if (!/^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/.test(value)) {\r\n                    phoneError = \"Invalid phone number\";\r\n                }\r\n                else {\r\n                    phoneError = \"\";\r\n                }\r\n            }\r\n            else {\r\n                phoneError = \"phone is required\"\r\n            }\r\n        }\r\n        if (field === \"company\") {\r\n            if (value.length) {\r\n                companyError = value.length < 2 ? \"atleast 2 chars\" : value.length > 32 ? \"max 32 chars\" : \"\";\r\n            }\r\n            else {\r\n                companyError = \"\";\r\n            }\r\n        }\r\n        if (field === \"address\") {\r\n            if (value.length) {\r\n                addressError = value.length < 4 ? \"atleast 4 chars\" : value.length > 50 ? \"max 50 chars\" : \"\";\r\n            }\r\n            else {\r\n                addressError = \"\";\r\n            }\r\n        }\r\n        if (field === \"about\") {\r\n            if (value.length) {\r\n                aboutError = value.length < 1 ? \"atleast 1 chars\" : value.length > 100 ? \"max 100 chars\" : \"\";\r\n            }\r\n            else {\r\n                aboutError = \"\";\r\n            }\r\n        }\r\n        formError = (nameError + emailError + phoneError + aboutError + companyError + addressError).length > 0;\r\n    };\r\n\r\n    const handleFileSubmit = (files) => {\r\n        console.log(\"submit\")\r\n        setState({\r\n            ...state,\r\n            image: URL.createObjectURL(files[0])\r\n        });\r\n        setDropzoneOpen(false);\r\n    };\r\n\r\n    const handleChangeInput = (e) => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n        validateField(e);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        handleEdit(false);\r\n        setState(contact);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        setState(contact); console.log(\"state : \" + state.fullname);\r\n        nameError = \"\"; emailError = \"\"; phoneError = \"\"; companyError = \"\"; addressError = \"\"; aboutError = \"\"; formError = false;\r\n    }, [contact]\r\n    );\r\n    return (\r\n        contact.id !== undefined && contact.id !== null ?\r\n            <Grid container item xs={12} justify=\"center\" className={`${classes.detailCard} ${classes.bgSilver}`} >\r\n\r\n                <Grid container item xs={12} justify=\"space-between\">\r\n                    <Grid item xs style={{ textAlign: \"left\" }}>\r\n                        <Tooltip title=\"Back\">\r\n                            <IconButton color=\"secondary\" style={{ padding: \"8px 0px\" }} onClick={() => setActive({})}><ArrowBack />  </IconButton>\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Grid item xs style={{ textAlign: \"right\" }}>  {!editable ?\r\n                        <Tooltip title=\"Edit\">\r\n                            <Fab size=\"medium\" variant=\"extended\" className={classes.btnEdit} onClick={() => handleEdit()}><Edit fontSize=\"small\" /> &nbsp;EDIT </Fab>\r\n                        </Tooltip> : <></>}\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container item spacing={editable ? 1 : 3}>\r\n                    <Grid container item xs={12} justify=\"center\">\r\n                        <Grid item>\r\n                            <DropzoneDialog showPreviewsInDropzone={true} showPreviews={false} filesLimit={1} acceptedFiles={[\"image/*\"]} showFileNamesInPreview={true} showFileNames={true}\r\n                                open={dropzoneOpen} onClose={() => setDropzoneOpen(false)} onSave={handleFileSubmit}\r\n                            />\r\n                            <Badge overlap=\"circle\" invisible={!editable}\r\n                                anchorOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                badgeContent=\r\n                                {<IconButton\r\n                                    onClick={() => setDropzoneOpen(true)}\r\n                                    style={{\r\n                                        position: \"relative\", top: \"-5px\", left: \"-5px\", padding: \"4px\", background: \"white\", border: \"3px solid darkgray\"\r\n                                    }}\r\n                                    size=\"medium\">\r\n                                    <AddAPhoto color=\"primary\" />\r\n                                </IconButton>}\r\n                            >\r\n                                <Avatar src={state.image} className={classes.larger} style={{ background: stringToColor(contact.id + contact.fullname) }}>\r\n                                    {contact.fullname.split(\" \").map((n, i) => i < 2 ? n[0] : \"\")}\r\n                                </Avatar>\r\n                            </Badge>\r\n                        </Grid>\r\n                        <Grid container item justify=\"center\" style={{ textAlign: \"center\" }}>\r\n                            <Grid item xs={12}>\r\n                                <h1 style={{ lineHeight: 1, margin: \"10px auto\", color: \"black\", maxWidth: \"100%\", overflowWrap: \"anywhere\", }}>\r\n                                    {contact.fullname}\r\n                                </h1>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8} style={{ minHeight: \"3ch\", maxWidth: \"32ch\" }}>\r\n                                {editable ?\r\n                                    <TextField multiline type=\"text\" label=\"about\" variant=\"filled\" className={classes.contactField}\r\n                                        value={state.about} name=\"about\" onChange={handleChangeInput}\r\n                                        helperText={aboutError || \" \"} error={aboutError.length > 0} rowsMax={3}\r\n                                    />\r\n                                    : display(contact.about)}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container item xs={12}>\r\n                        <Grid item xs={12} sm={4}>Full Name</Grid>\r\n                        <Grid item xs={12} sm={8} className=\"text-black\">\r\n\r\n                            {editable ? <TextField multiline type=\"text\" className={classes.contactField}\r\n                                value={state.fullname} name=\"fullname\" onChange={handleChangeInput}\r\n                                helperText={nameError || \" \"} error={nameError.length > 0}\r\n                            /> : display(contact.fullname)}\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container item xs={12}>\r\n                        <Grid item xs={12} sm={4}>Email</Grid>\r\n                        <Grid item xs={12} sm={8} className=\"text-black\" >\r\n                            {editable ?\r\n                                <TextField multiline type=\"text\" className={classes.contactField}\r\n                                    value={state.email} name=\"email\" onChange={handleChangeInput}\r\n                                    helperText={emailError || \" \"} error={emailError.length > 0}\r\n                                />\r\n                                : display(contact.email)}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container item xs={12}>\r\n                        <Grid item xs={12} sm={4}>Phone</Grid>\r\n                        <Grid item xs={12} sm={8} className=\"text-black\"> {editable ?\r\n                            <TextField multiline type=\"number\" className={classes.contactField}\r\n                                value={state.phone} name=\"phone\" onChange={handleChangeInput}\r\n                                helperText={phoneError || \" \"} error={phoneError.length > 0}\r\n                            />\r\n                            : display(contact.phone)}</Grid>\r\n                    </Grid>\r\n                    <Grid container item xs={12}>\r\n                        <Grid item xs={12} sm={4}>Company</Grid>\r\n                        <Grid item xs={12} sm={8} className=\"text-black\"> {editable ?\r\n                            <TextField multiline type=\"text\" className={classes.contactField}\r\n                                value={state.company} name=\"company\" onChange={handleChangeInput}\r\n                                helperText={companyError || \" \"} error={companyError.length > 0}\r\n                            />\r\n                            : display(contact.company)}</Grid>\r\n                    </Grid>\r\n                    <Grid container item xs={12}>\r\n                        <Grid item xs={12} sm={4}>Address</Grid>\r\n                        <Grid item xs={12} sm={8} className=\"text-black\"> {editable ?\r\n                            <TextField multiline type=\"text\" className={classes.contactField}\r\n                                value={state.address} name=\"address\" onChange={handleChangeInput}\r\n                                helperText={addressError || \" \"} error={addressError.length > 0}\r\n                            />\r\n                            : display(contact.address)}</Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {editable ? <Grid container item justify=\"center\" spacing={1}>\r\n                    <Grid item>\r\n                        <Fab variant=\"extended\" size=\"medium\" color=\"primary\" disabled={formError} onClick={() => { handleUpdate(state); handleEdit(false); setState(contact) }}><Save /> &nbsp;Save </Fab>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Fab variant=\"extended\" size=\"medium\" color=\"secondary\" onClick={handleCancel}><Close /> &nbsp;Cancel </Fab>\r\n                    </Grid>\r\n                </Grid>\r\n                    : <></>}\r\n\r\n\r\n\r\n            </Grid >\r\n            : <></>\r\n        // : <Grid container item xs={12} justify=\"center\" className={`${classes.detailCard} ${classes.bgSilver}`} >\r\n        //     \"Contact Details will be displayed over here\"</Grid>\r\n    )\r\n}\r\n\r\nexport default DetailCard\r\n","import React from 'react'\r\nimport { ListItem, ListItemAvatar, ListItemText, Fab, InputAdornment, TextField, ListItemSecondaryAction } from \"@material-ui/core\";\r\nimport { DoneOutline, Close, AccountBox, Email } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\n\r\nconst NewContact = (props) => {\r\n    const useStyles = makeStyles(theme => ({\r\n        newListItem: {\r\n            [theme.breakpoints.down(\"xs\")]: {\r\n                padding: 0,\r\n            }\r\n        },\r\n        newContactField: {\r\n            width: \"46%\",\r\n            minWidth: \"46%\",\r\n            margin: \"10px 1.5%\",\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n                minWidth: \"96%\",\r\n            }\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const [newContactName, setNewContactName] = React.useState(\"\");\r\n    const [newContactEmail, setNewContactEmail] = React.useState(\"\");\r\n    const [emailError, setEmailError] = React.useState(\"\");\r\n    const [nameError, setNameError] = React.useState(\"\");\r\n\r\n    const handleOnChange = e => {\r\n        let value = e.target.value;\r\n        if (e.target.name === \"fullname\") {\r\n            setNewContactName(value);\r\n            if (value.trim().length) {\r\n                if (value.length > 32) {\r\n                    setNameError(\"max 32 chars\")\r\n                }\r\n                else { setNameError(\"\"); }\r\n            }\r\n            else {\r\n                setNameError(\"name is required\");\r\n            }\r\n\r\n        }\r\n        if (e.target.name === \"email\") {\r\n            value = value.trim();\r\n            setNewContactEmail(value);\r\n            if (value.length) {\r\n                let found = props.data.find(obj => obj.email.toLowerCase() === value.toLowerCase()) || null;\r\n                if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n                    setEmailError(\"Invalid email address\");\r\n                }\r\n                else if(value.length>100){\r\n                    emailError=\"max 100 chars\";\r\n                }\r\n                else if (found !== null) {\r\n                    setEmailError(\"Email already exists\");\r\n                }\r\n                else {\r\n                    setEmailError(\"\");\r\n                }\r\n            } else {\r\n                setEmailError(\"\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleOnKeyDown = (e) => {\r\n        if (e.keyCode === 13 && newContactName.trim().length && !nameError.length && !emailError.length) {\r\n                saveContact();   \r\n        }\r\n    }\r\n\r\n    const saveContact = () => {\r\n        props.addNewContact({\r\n            id: props.data.length ? props.data.reduce((max, next) => Math.max(max, next.id), props.data[0].id) + 1 : 0,\r\n            fullname: newContactName,\r\n            email: newContactEmail,\r\n            checked: false\r\n        });\r\n        setNewContactName(\"\");\r\n        setNewContactEmail(\"\");\r\n    }\r\n\r\n    return (\r\n        <ListItem className={classes.newListItem}>\r\n            <ListItemAvatar>\r\n                <Fab color=\"primary\" size=\"medium\"\r\n                    onClick={saveContact}\r\n                    disabled={!newContactName.length > 0 || nameError.length > 0 || emailError.length > 0}\r\n                >\r\n                    <DoneOutline />\r\n                </Fab>\r\n            </ListItemAvatar>\r\n\r\n            <ListItemText primary={\r\n                <form align=\"center\">\r\n                    <TextField required autoFocus multiline\r\n                        value={newContactName}\r\n                        label=\" FullName\" name=\"fullname\"\r\n                        InputProps={{\r\n                            startAdornment: (<InputAdornment position=\"start\">\r\n                                <AccountBox /> </InputAdornment>\r\n                            )\r\n                        }}\r\n                        error={nameError.length > 0}\r\n                        helperText={nameError}\r\n                        onChange={handleOnChange}\r\n                        onKeyDown={handleOnKeyDown}\r\n                        placeholder=\"Peter Parker\"\r\n                        className={classes.newContactField}\r\n                    />\r\n                    <TextField multiline value={newContactEmail}\r\n                        placeholder=\"abc@xyz.com\"\r\n                        label=\"Email\" name=\"email\"\r\n                        InputProps={{\r\n                            startAdornment: (<InputAdornment position=\"start\">\r\n                                <Email /> </InputAdornment>\r\n                            )\r\n                        }}\r\n                        error={emailError.length > 0}\r\n                        helperText={emailError}\r\n                        onChange={handleOnChange}\r\n                        // onKeyDown={handleOnKeyDown}\r\n                        className={classes.newContactField}\r\n                    />\r\n                </form>\r\n            } />\r\n            <ListItemAvatar style={{ textAlign: \"right\" }}>\r\n                <Fab color=\"secondary\" size=\"medium\"\r\n                    onClick={() => {\r\n                        props.handleAdd(false); setNewContactName(\"\"); setNewContactEmail(\"\"); setNameError(\"\"); setEmailError(\"\");\r\n                    }}>\r\n                    <Close />\r\n                </Fab>\r\n            </ListItemAvatar>\r\n        </ListItem>\r\n\r\n    )\r\n}\r\n\r\nexport default NewContact\r\n","import React from 'react';\r\nimport {\r\n    List, ListItem, ListItemIcon, ListItemText, ListItemAvatar,\r\n    Checkbox, Hidden, IconButton, Fab, Avatar, Tooltip\r\n} from '@material-ui/core';\r\n\r\nimport { AddBox, IndeterminateCheckBox } from \"@material-ui/icons\";\r\nimport CommonStyle from \"./CommonStyle\";\r\nimport NewContact from \"./NewContact\";\r\nimport DetailCard from \"./DetailCard\"\r\n\r\nfunction stringToColor(string) {\r\n    let hash = 0, i = 0, color = \"#\";\r\n    for (i = 0; i < string.length; i += 1) {\r\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    for (i = 0; i < 3; i += 1) {\r\n        const value = (hash >> (i * 8)) & 0xff;\r\n        color += `00${value.toString(16)}`.substr(-2);\r\n    }\r\n    return color;\r\n}\r\nconst ContactList = (props) => {\r\n    const classes = CommonStyle();\r\n    const [selectAll, setSelectAll] = React.useState(false);\r\n\r\n\r\n    React.useEffect(() => { setSelectAll(props.data.some(contact => contact.checked)); });\r\n    return (\r\n        <List style={{ flexGrow: 1 }} disablePadding={true}>\r\n            <ListItem className=\"bg-silver\" style={{ padding: \"1px 12px\" }}>\r\n                <Tooltip title={selectAll ? \"DeSelectAll\" : \"SelectAll\"} arrow><span>\r\n                    <IconButton edge=\"start\" disabled={props.wannaCreateNew || props.data.length < 1}\r\n                        onClick={() => { props.handleSelectAll(!selectAll); setSelectAll(!selectAll); }} >\r\n                        {selectAll ? <IndeterminateCheckBox /> : <AddBox />}\r\n                    </IconButton></span>\r\n                </Tooltip>\r\n                <ListItemText primary=\"Basic Info\" className={classes.listHeaderItem} />\r\n                <Hidden smDown> <ListItemText primary=\"Email\" className={classes.listHeaderItem} /> </Hidden>\r\n            </ListItem>\r\n            {\r\n                props.wannaCreateNew ?\r\n                    <NewContact data={props.data} handleAdd={props.handleAdd} addNewContact={props.addNewContact} />\r\n                    : <></>\r\n            }\r\n            {\r\n                props.data.length ?\r\n                    props.data.map((contact, index) =>\r\n                        <React.Fragment key={index}>\r\n                            <ListItem dense selected={props.activeContact.id === contact.id} disabled={props.wannaCreateNew}\r\n                                button onClick={() => { props.handleContactClick(contact); }} key={index}\r\n                                style={{ padding: \"6px 16px\" }}>\r\n                                <ListItemIcon className={classes.Checkbox}>\r\n                                    <Checkbox\r\n                                        edge=\"start\"\r\n                                        // disableRipple\r\n                                        color=\"primary\"\r\n                                        checked={contact.checked}\r\n                                        onClick={(e) => { props.handleCheckedChange(contact); e.stopPropagation(); }}\r\n                                    />\r\n                                </ListItemIcon>\r\n                                <ListItemAvatar>\r\n                                    <Avatar src={contact.image} alt={contact.fullname} className={classes.large} style={{ background: stringToColor(contact.id + contact.fullname) }}>\r\n                                        {contact.fullname.split(\" \").map((n, i) => i < 2 ? n[0] : \"\")}\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primary={<h3 style={{ minWidth: \"17ch\", maxWidth: \"17ch\", whiteSpace: \"normal\", lineHeight: \"1\", margin: \"6px 0px 4px\", fontSize: \"120%\" }}>{contact.fullname}</h3>}\r\n                                    secondary={<Hidden mdUp>{contact.email ? <small style={{ fontWeight: \"600\" }}>{contact.email}</small> : <small>&nbsp;</small>}</Hidden>}\r\n                                    className={classes.basicInfo}\r\n                                />\r\n                                <Hidden smDown>\r\n                                    <ListItemText className={classes.basicInfo}\r\n                                        primary={contact.email ?\r\n                                            <h4 style={{ minWidth: \"18ch\", maxWidth: '18ch', overflow: \"hidden\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\" }}>\r\n                                                {contact.email}</h4> : <h4>&nbsp;</h4>} />\r\n                                </Hidden>\r\n\r\n                            </ListItem>\r\n\r\n                            {(props.activeContact.id === contact.id) ?\r\n                                <Hidden lgUp>\r\n                                    <DetailCard contact={props.activeContact} editable={props.editable} setActive={props.setActive} handleEdit={props.handleEdit} handleUpdate={props.handleUpdate} />\r\n                                </Hidden> : <></>\r\n                            }\r\n\r\n                        </React.Fragment>\r\n\r\n                    )\r\n                    : <h3 style={{ color: \"red\", fontWeight: \"normal\" }}>NO CONTACTS !</h3>\r\n            }\r\n\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default ContactList\r\n","import React from 'react';\r\nimport clsx from \"clsx\";\r\nimport { Grid, InputBase, Button, IconButton, Hidden, Tooltip, Zoom } from \"@material-ui/core\";\r\nimport { Add, Delete, Search } from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport CommonStyle from \"./CommonStyle\";\r\n\r\nconst SearchBar = (props) => {\r\n    const theme = useTheme();\r\n    const classes = CommonStyle(theme);\r\n\r\n    return (\r\n        <Grid container item xs={12} lg={6} style={{ textAlign: \"right\" }} className={clsx(classes.removePadding)}>\r\n            <Grid item xs={8} lg={6} style={{ textAlign: \"left\" }} >\r\n                <div className={classes.searchbar}>\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        type=\"search\"\r\n                        value={props.search}\r\n                        placeholder=\"Search Contacts\"\r\n                        onChange={props.onChange}\r\n                        disabled={props.wannaCreateNew}\r\n                        style={!props.data.length ? { color: \"red\" } : {}}\r\n                    />\r\n                    <IconButton type=\"submit\" disabled aria-label=\"search\">\r\n                        <Search />\r\n                    </IconButton>\r\n                </div>\r\n            </Grid>\r\n            <Grid item xs={2} lg={3} >\r\n                <Tooltip title=\"Add Contact\" arrow TransitionComponent={Zoom}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        className={clsx(classes.button, classes.bgGradient,classes.btnAdd)}\r\n                        size=\"large\"\r\n                        fullWidth\r\n                        disabled={props.wannaCreateNew}\r\n                        onClick={() => props.handleAdd(true)}\r\n                    ><Add /><Hidden smDown> &nbsp;Add </Hidden></Button></Tooltip>\r\n            </Grid>\r\n            <Grid item xs={2} lg={3}>\r\n                <Tooltip title=\"Delete Selected\" arrow TransitionComponent={Zoom}>\r\n                    <div><Button\r\n                        variant=\"contained\"\r\n                        className={clsx(classes.button, classes.bgGradient)}\r\n                        size=\"large\"\r\n                        fullWidth\r\n                        onClick={props.handleDelete}\r\n                        disabled={!props.data.some(item => item.checked) || props.wannaCreateNew}\r\n                    > <Delete /><Hidden smDown> &nbsp;Delete &nbsp; </Hidden>\r\n                    </Button>\r\n                    </div>\r\n                </Tooltip>\r\n            </Grid>\r\n        </Grid >\r\n\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import React from 'react';\nimport clsx from \"clsx\";\nimport {\n    List, ListItem, ListItemIcon, ListItemText, IconButton, Drawer,\n} from '@material-ui/core';\n\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { Twitter, GitHub, PersonOutline, ClearAllRounded, ChevronLeft } from \"@material-ui/icons\";\nimport CommonStyle from \"./CommonStyle\";\n\nconst SideDrawer = (props) => {\n    let open = props.open;\n    const theme = useTheme();\n    const classes = CommonStyle(theme);\n    return (\n        <Drawer\n            variant=\"permanent\"\n            className={clsx(classes.drawer, {\n                [classes.drawerOpen]: open,\n                [classes.drawerClose]: !open\n            })}\n            classes={{\n                paper: clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open\n                })\n            }}\n        >\n            <div className={classes.toolbar}>\n                <IconButton onClick={props.handleDrawerClose}>\n                    <ChevronLeft fontSize=\"large\" />\n                </IconButton>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    onClick={props.handleDrawerOpen}\n                    edge=\"start\"\n                    className={clsx(classes.menuButton, classes.textWhite, {\n                        [classes.hide]: open\n                    })}\n                >\n                    <ClearAllRounded fontSize=\"large\" />\n                </IconButton>\n            </div>\n\n            <List className={classes.textWhite} style={{marginTop:\"40px\"}}>\n                <ListItem button className={classes.active} >\n                    <ListItemIcon className={classes.textWhite}>\n                        <PersonOutline fontSize=\"large\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Local\" />\n                </ListItem>\n                <ListItem button >\n                    <ListItemIcon className={classes.textWhite}>\n                        <Twitter fontSize=\"large\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Twitter\" />\n                </ListItem>\n\n                <ListItem button>\n                    <ListItemIcon className={classes.textWhite}>\n                        <GitHub fontSize=\"large\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"GitHub\" />\n                </ListItem>\n            </List>\n        </Drawer>\n\n    )\n}\n\nexport default SideDrawer\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport \"font-awesome/css/font-awesome.min.css\"\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n  Backdrop, IconButton, Grid, Hidden, AppBar, Toolbar, Typography\r\n} from \"@material-ui/core\";\r\n\r\nimport { ClearAllRounded } from \"@material-ui/icons\";\r\nimport LocalData from \"../data/LocalData\";\r\nimport DetailCard from \"./DetailCard\";\r\nimport ContactList from \"./ContactList\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport CommonStyle from \"./CommonStyle\";\r\n\r\nlet localData = LocalData();\r\n\r\nexport default function Wrapper() {\r\n\r\n  const theme = useTheme();\r\n  const classes = CommonStyle(theme);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [editable, setEditable] = React.useState(false);\r\n  const [activeContact, setActiveContact] = React.useState({});\r\n  const [data, setData] = React.useState(localData);\r\n  const [search, setSearch] = React.useState(\"\");\r\n  const [wannaCreateNew, setWannaCreateNew] = React.useState(false);\r\n  const searchFilter = search => item => item.fullname.toLowerCase().includes(search.toLowerCase())\r\n\r\n  const handleDrawerOpen = () => setOpen(true);\r\n\r\n  const handleDrawerClose = () => setOpen(false);\r\n\r\n  const setActive = (contact) => setActiveContact(contact);\r\n\r\n  const handleEdit = (editable = true) => setEditable(editable);\r\n  \r\n  const handleCheckedChange = (changedContact) => {\r\n    let temp = data;\r\n    temp.forEach(item => {\r\n      item.checked = (item.id === changedContact.id) ? !changedContact.checked : item.checked;\r\n    });\r\n    setData([...temp]);\r\n  }\r\n\r\n  const handleSelectAll = (selectAll) => {\r\n    let temp = data;\r\n    temp.forEach(contact => {\r\n      contact.checked = selectAll\r\n    })\r\n    setData([...temp]);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    localData = localData.filter(item => !item.checked);\r\n    setData([...localData]);\r\n    if (activeContact.checked) { setActiveContact({}) }\r\n    setSearch(\"\");\r\n  }\r\n\r\n  const handleAdd = (status = true) => {\r\n    setActiveContact({});\r\n    handleSelectAll(false);\r\n    setSearch(\"\");\r\n    filterData(\"\");\r\n    setWannaCreateNew(status);\r\n  }\r\n\r\n  const addNewContact = (contact) => {\r\n    localData.push(contact);\r\n    setData([...localData]);\r\n    setWannaCreateNew(false);\r\n    setActiveContact(contact);\r\n  }\r\n\r\n  const handleContactClick = (clickedContact) => {\r\n    setActiveContact(clickedContact);\r\n    setEditable((editable) ? clickedContact.id === activeContact.id : false);\r\n  }\r\n\r\n  const filterData = (value) => {\r\n    setData([...localData.filter(searchFilter(value))]);\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setActiveContact({});\r\n    filterData(e.target.value);\r\n    setSearch(e.target.value);\r\n  }\r\n\r\n  const handleUpdate = (updatedContact) => {\r\n    localData.forEach((item, index) => {\r\n      if (item.id === updatedContact.id) {\r\n        localData[index] = updatedContact;\r\n      }\r\n    });\r\n    setData([...localData]);\r\n    setActiveContact(updatedContact);\r\n\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    console.log(\"Rendered\");\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <CssBaseline /> */}\r\n      <SideDrawer open={open} handleDrawerOpen={handleDrawerOpen} handleDrawerClose={handleDrawerClose} />\r\n      }\r\n\r\n      <AppBar className={clsx(classes.appBar, { [classes.appBarShift]: open })}>\r\n        <Toolbar>\r\n          <IconButton\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <ClearAllRounded fontSize=\"large\" />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Hidden smUp>\r\n        <Backdrop className={classes.backdrop} open={open} onClick={() => setOpen(false)} />\r\n      </Hidden>\r\n\r\n      <main className={clsx({ [classes.mainContent]: open }, classes.content)}>\r\n        <div className={classes.toolbar} />\r\n        <Grid container spacing={5}>\r\n          {/* Heading-Contact starts here */}\r\n          <Grid container item xs={12} wrap=\"nowrap\" alignItems=\"center\" className={classes.heading} >\r\n            <Grid item xs style={{ maxWidth: \"48px\", marginRight: \"16px\" }}>\r\n              <i className=\"fa fa-address-book fa-flip-horizontal fa-3x icon-gradient\" ></i>\r\n            </Grid>\r\n            <Grid item xs className=\"text-left\" >\r\n              <Grid item xs>\r\n                <Typography variant=\"h4\" component=\"span\">\r\n                  Contacts </Typography>\r\n              </Grid>\r\n              <Hidden xsDown>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"subtitle1\" component=\"span\" className=\"text-silver\"> Welcome to InstaConnect</Typography>\r\n                </Grid>\r\n              </Hidden>\r\n            </Grid>\r\n\r\n          </Grid>\r\n          {/* Heading-Contact Ends here */}\r\n          <Grid container item xs={12} justify=\"center\">\r\n            {/* MAIN CONTENT SEARCHBAR AND LIST STARTS HERE */}\r\n            <Grid container item xs={12} spacing={6} className={classes.innerContent} >\r\n\r\n              {/* SearchBar */}\r\n              <SearchBar data={data} search={search} onChange={onChange} handleDelete={handleDelete} handleAdd={handleAdd} wannaCreateNew={wannaCreateNew} />\r\n              {/* SearchBar Ends ; Wrapper for List starts here*/}\r\n\r\n              <Grid container item xs={12} className={clsx(classes.removePadding)}>\r\n                <Grid item xs={12} lg >\r\n\r\n                  <ContactList data={data} activeContact={activeContact} editable={editable} setActive={setActive}\r\n                    handleContactClick={handleContactClick} handleCheckedChange={handleCheckedChange}\r\n                    handleSelectAll={handleSelectAll} handleAdd={handleAdd} handleEdit={handleEdit} handleUpdate={handleUpdate}\r\n                    wannaCreateNew={wannaCreateNew} addNewContact={addNewContact}\r\n                  />\r\n                </Grid>\r\n                <Hidden mdDown>\r\n                  <Grid container item xs={12} lg>\r\n\r\n                    <DetailCard contact={activeContact} setActive={setActive} editable={editable} handleEdit={handleEdit} handleUpdate={handleUpdate}\r\n                    />\r\n                  </Grid>\r\n                </Hidden>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </main>\r\n    </div >\r\n  );\r\n}\r\n","import React from 'react';\nimport Wrapper from './components/Wrapper'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{fontFamily:`\"Lucida Sans Unicode\", \"Lucida Grande\", \"sans-serif\"`}}>\n      <Wrapper />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}