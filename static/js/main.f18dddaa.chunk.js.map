{"version":3,"sources":["components/CommonStyle.js","components/SideDrawer.js","components/Heading.js","components/SearchBar.js","components/ActionBar.js","components/NewContact.js","components/DetailCard.js","components/ContactList.js","components/MainContent.js","components/MyContacts.js","data/LocalData.js","components/MyLoader.js","components/MainContentWrapper.js","components/MyApiWrapper.js","components/Jobs.js","components/Covid.js","components/Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["CommonStyle","theme","useTheme","styles","root","display","large","width","spacing","height","marginRight","breakpoints","down","larger","margin","backdrop","zIndex","drawer","color","active","boxShadow","background","drawerLink","textDecoration","heading","transition","transform","whiteSpace","maxWidth","only","actionbar","textAlign","paddingRight","searchWrapper","borderRadius","cursor","searchbar","padding","minWidth","input","marginLeft","flex","fontWeight","Checkbox","button","textTransform","fontSize","minHeight","cursorDisabled","btn","paddingTop","paddingBottom","btnAdd","up","paddingLeft","btnAdding","btnDelete","btnEdit","hoverbold","contactList","flexGrow","listItemHeader","listItemHeaderText","renderedRecords","overflowY","listItem","basicInfo","overflowSpace","aboutGrid","lineHeight","overflowWrap","fieldGrid","contactField","position","top","detailCard","textWhite","bgSilver","bgGradient","appBar","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","invisible","visibility","hide","flexShrink","drawerOpen","overflowX","drawerClose","border","toolbar","alignItems","justifyContent","mixins","removePadding","absoluteAtSmall","left","innerContent","content","marginTop","makeStyles","useStyles","SideDrawer","props","open","classes","Fragment","Drawer","variant","className","clsx","paper","IconButton","onClick","handleDrawerClose","ChevronLeft","aria-label","handleDrawerOpen","edge","ClearAllRounded","List","style","exact","activeClassName","to","ListItem","Tooltip","title","placement","arrow","ListItemIcon","PersonOutline","ListItemText","primary","BugReport","Work","Hidden","mdUp","Backdrop","Heading","headerStyle","Grid","container","item","xs","wrap","icon","xsDown","subtitle","SearchBar","disableFocusListener","InputBase","type","value","search","slice","placeholder","keyword","onChange","disabled","wannaCreateNew","data","length","Search","error","ActionBar","someSelected","some","checked","lg","setActive","filterData","TransitionComponent","Zoom","Button","size","fullWidth","handleAdd","Add","smDown","handleDelete","Delete","NewContact","titleField","uniqueField","console","log","newListItem","newContactField","React","useState","newContactName","setNewContactName","newContactEmail","setNewContactEmail","emailError","setEmailError","nameError","setNameError","timeoutId","handleOnChange","e","target","name","fieldname","max","min","label","required","trim","clearTimeout","setTimeout","found","find","obj","toLowerCase","test","saveContact","addNewContact","id","uuidv4","gotoLastPage","ListItemAvatar","Fab","DoneOutline","align","TextField","autoFocus","multiline","InputProps","startAdornment","InputAdornment","AccountBox","helperText","onKeyDown","keyCode","Email","Close","stringToColor","string","hash","i","charCodeAt","toString","substr","DetailCard","contact","editable","handleEdit","handleUpdate","objRule","imgField","descriptionField","state","setState","formError","setFormError","dropzoneOpen","setDropzoneOpen","setCurrentError","validateForm","Object","entries","reduce","sum","next","setValue","field","handleChangeInput","invalidPhone","invalidEmail","invalidId","validateField","useEffect","forEach","undefined","justify","ArrowBack","Edit","showPreviewsInDropzone","showPreviews","filesLimit","acceptedFiles","showFileNamesInPreview","showFileNames","onClose","onSave","files","image","URL","createObjectURL","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","AddAPhoto","Avatar","src","split","map","n","md","rowsMax","keyValuePair","index","includes","key","concat","Select","autoWidth","selectEmpty","MenuItem","Fade","in","Save","ContactList","selectAll","setSelectAll","page","setPage","per_page","setPerPage","disablePadding","dense","handleSelectAll","IndeterminateCheckBox","AddBox","Math","ceil","selected","activeContact","handleContactClick","handleCheckedChange","stopPropagation","alt","Typography","secondary","component","noWrap","overflow","textOverflow","lgUp","Divider","Pagination","count","event","showFirstButton","showLastButton","totalRecords","ListItemSecondaryAction","MainContent","localData","setData","setLocalData","setEditable","setActiveContact","setSearch","setWannaCreateNew","keyvalue","unique","temp","status","updatedContact","filter","searchFilter","searchError","setSearchError","AppBar","Toolbar","message","clickedContact","changedContact","push","mdDown","fullname","about","email","phone","company","address","LocalData","MyContacts","records","MyLoader","sm","speed","viewBox","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","MainContentWrapper","MyApiWrapper","apiData","query","Jobs","loading","setLoading","fetchApiData","uri","a","apolloFetch","createApolloFetch","res","jobs","job","logoUrl","fetchData","userEmail","locationNames","isFeatured","applyUrl","Covid","axios","get","then","response","catch","Countries","country","Country","CountryCode","NewConfirmed","TotalConfirmed","TotalDeaths","TotalRecovered","Date","Wrapper","setOpen","handleDrawerToggle","path","App","fontFamily","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f18dddaa.chunk.js","sourcesContent":["import { useTheme, makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nconst CommonStyle = () => {\r\n    const theme = useTheme();\r\n    const drawerWidth = 220;\r\n    const styles =\r\n    {\r\n        root: {\r\n            display: \"flex\",\r\n        },\r\n        large: {\r\n            width: theme.spacing(6),\r\n            height: theme.spacing(6),\r\n            marginRight: theme.spacing(2),\r\n            [theme.breakpoints.down(\"xs\")]: {\r\n                marginRight: 0,\r\n            }\r\n        },\r\n        larger: {\r\n            width: theme.spacing(10),\r\n            height: theme.spacing(10),\r\n            margin: theme.spacing(2)\r\n        },\r\n        backdrop: {\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n                zIndex: theme.zIndex.drawer - 1,\r\n                color: \"black\"\r\n            }\r\n        },\r\n\r\n        active: {\r\n            \"& > div\": {\r\n                boxShadow: \"inset 4px 0 0 0 white\",\r\n                background: \"rgba(140, 81, 81, 0.15)\",\r\n            }\r\n        },\r\n        drawerLink: {\r\n            textDecoration: \"none\", color: \"white\"\r\n        },\r\n        heading: {\r\n            transition: 'all 0.5s linear',\r\n            transform: \"scale(0.9)\",\r\n            margin: \"8px 0px\",\r\n            whiteSpace: \"nowrap\",\r\n            maxWidth: \"fit-content\",\r\n\r\n            [theme.breakpoints.only(\"sm\")]: {\r\n                margin: \"auto\",\r\n            },\r\n            [theme.breakpoints.down(\"xs\")]: {\r\n                margin: \"auto\",\r\n                transform: \"scale(0.8) translateX(-16px)\"\r\n            }\r\n        },\r\n        actionbar: {\r\n            textAlign: \"right\",\r\n            [theme.breakpoints.only('lg')]: { paddingRight: \"0px !important\" },\r\n        },\r\n        searchWrapper: {\r\n            transition: \"all 0.3s linear\",\r\n            boxShadow: \"none\",\r\n            borderRadius: 25,\r\n            background: \"rgb(230, 230, 230)\",\r\n\r\n            \"& :hover\": {\r\n\r\n                boxShadow: \"0px 1px 6px 0px rgba(0, 0, 0, 0.7) !important\",\r\n                cursor: \"help\",\r\n                background: \"white\",\r\n                \"& *\": {\r\n                    color: \"black\",\r\n                    boxShadow: \"none !important\",\r\n                }\r\n            },\r\n\r\n        },\r\n        searchbar: {\r\n            // transition: \"all 0.3s linear\",\r\n            background: \"rgb(230, 230, 230)\",\r\n            display: \"flex\",\r\n            borderRadius: 25,\r\n            padding: \"0 6px 0 12px\",\r\n            minWidth: \"120px\",\r\n            \"& :hover\": {\r\n                cursor: \"help\",\r\n            },\r\n\r\n\r\n        },\r\n\r\n\r\n        input: {\r\n            borderRadius: 5,\r\n            background: \"transparent\",\r\n            marginLeft: theme.spacing(1),\r\n            flex: 1,\r\n            transition: \"color 0.3s linear\",\r\n            \"& :focus\": {\r\n                fontWeight: \"600\",\r\n                cursor: \"text\"\r\n            },\r\n            \"& input\": { padding: \"6px 0px 6px\", },\r\n        },\r\n        Checkbox: {\r\n            minWidth: \"50px\",\r\n            [theme.breakpoints.down(\"xs\")]: {\r\n                minWidth: \"24px\"\r\n            }\r\n        },\r\n\r\n        button: {\r\n            transition: \"all 0.3s ease-in\",\r\n            minWidth: \"80px\",\r\n            maxWidth: \"120px\",\r\n            textTransform: \"none\",\r\n            fontSize: \"110%\",\r\n            whiteSpace: \"nowrap\",\r\n            minHeight: \"48px\",\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n                minWidth: \"44px\",\r\n                maxWidth: \"44px\",\r\n                minHeight: \"44px\",\r\n                borderRadius: \"50%\"\r\n            },\r\n            [theme.breakpoints.down(321)]: {\r\n                transform: \"scale(0.9)\",\r\n            }\r\n        },\r\n        cursorDisabled: {\r\n            \"&:hover\": {\r\n                cursor: \"not-allowed\",\r\n            }\r\n        },\r\n        btn: {\r\n            \"&:hover\": {\r\n                \"& button\": {\r\n                    color: \"rgba(213, 213, 213, 0.85);\",\r\n                    boxShadow: \"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12);\"\r\n                },\r\n            },\r\n            paddingTop: \"12px\",\r\n            paddingBottom: \"12px\"\r\n        },\r\n\r\n        btnAdd: {\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                paddingLeft: \"12px\"\r\n            }\r\n        },\r\n        btnAdding: {\r\n            cursor: \"not-allowed !important\",\r\n            \"& button\": {\r\n                boxShadow: \"none\",\r\n            }\r\n        },\r\n        btnDelete: {\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                paddingRight: \"20px\"\r\n            },\r\n        },\r\n        btnEdit: {\r\n            color: \"black\",\r\n            background: \"white\",\r\n            \"& :hover\": {\r\n                fontWeight: \"600\"\r\n            }\r\n        },\r\n        hoverbold: {\r\n            \"& :hover\": {\r\n                fontWeight: \"bolder\"\r\n            }\r\n        },\r\n        contactList: {\r\n            flexGrow: 1,\r\n            boxShadow: \"0px 1px 6px 0px rgba(0,0,0,0.7)\",\r\n            [theme.breakpoints.down(\"xs\")]: {\r\n                boxShadow: \"none\",\r\n            },\r\n\r\n        },\r\n        listItemHeader: {\r\n            background: \"rgb(230, 230, 230)\",\r\n            color: \"rgb(128, 128, 128)\",\r\n            padding: \"4px 12px\",\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                paddingLeft: \"28px\",\r\n            },\r\n            [theme.breakpoints.only(\"sm\")]: {\r\n                paddingLeft: \"22px\",\r\n            }\r\n        },\r\n        listItemHeaderText: {\r\n            transition: \"all 0.3s linear\",\r\n            maxWidth: \"40ch\",\r\n            [theme.breakpoints.up(\"lg\")]: {\r\n                marginLeft: \"18px\",\r\n                maxWidth: \"25ch\",\r\n            },\r\n            [theme.breakpoints.only(\"md\")]: {\r\n                marginLeft: \"18px\",\r\n                minWidth: \"36ch\",\r\n                maxWidth: \"39ch\",\r\n            },\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n                textAlign: \"center\"\r\n            }\r\n        },\r\n        renderedRecords: {\r\n            overflowY: \"auto\",\r\n            [theme.breakpoints.up(\"lg\")]: {\r\n                height: \"60vh\",\r\n            }\r\n        },\r\n        listItem: {\r\n            padding: \"8px 16px\",\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                paddingLeft: \"30px\",\r\n            },\r\n            [theme.breakpoints.only(\"sm\")]: {\r\n                paddingLeft: \"24px\",\r\n            }\r\n\r\n        },\r\n        basicInfo: {\r\n            transition: \"all 0.3s linear\",\r\n            margin: \"0 8px 0 0\",\r\n            overflowSpace: \"break-word\",\r\n            // overflow: \"hidden\",\r\n            // whiteSpace: \"nowrap\",\r\n            // textOverflow: \"ellipsis\",\r\n            [theme.breakpoints.up(\"lg\")]: {\r\n                minWidth: \"18ch\",\r\n                maxWidth: \"18ch\",\r\n            },\r\n            [theme.breakpoints.only(\"md\")]: {\r\n                minWidth: \"32ch\",\r\n                maxWidth: \"32ch\",\r\n            },\r\n\r\n            [theme.breakpoints.only(\"sm\")]: {\r\n                minWidth: \"24ch\",\r\n                maxWidth: \"32ch\",\r\n                padding: \"8px\"\r\n            },\r\n            [theme.breakpoints.down(\"xs\")]: {\r\n                minWidth: \"16ch\",\r\n                maxWidth: \"16ch\",\r\n                padding: \"4px 0px\",\r\n            },\r\n\r\n            // [theme.breakpoints.down(321)]: {\r\n            //     minWidth: \"24ch\",\r\n            //     maxWidth: \"24ch\",\r\n            // },\r\n\r\n        },\r\n        aboutGrid: {\r\n            minHeight: \"3ch\",\r\n            maxWidth: \"36ch\",\r\n            lineHeight: \"1.2\",\r\n            overflowWrap: \"break-word\",\r\n            [theme.breakpoints.down(\"xs\")]: {\r\n                maxWidth: \"24ch\"\r\n            },\r\n        },\r\n        fieldGrid: {\r\n            color: \"black\",\r\n            transition: \"all 0.5s linear\",\r\n            overflowWrap: \"break-word\",\r\n            lineHeight: \"1.2\",\r\n            // maxWidth: \"40ch\",\r\n            [theme.breakpoints.up(\"lg\")]: {\r\n                maxWidth: \"25ch\"\r\n            },\r\n            [theme.breakpoints.only(\"md\")]: {\r\n                minWidth: \"40ch\",\r\n                maxWidth: \"50ch\"\r\n            },\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n                minWidth: \"32ch\",\r\n                maxWidth: \"40ch\"\r\n            },\r\n            [theme.breakpoints.down(\"xs\")]: {\r\n                minWidth: \"20ch\",\r\n                maxWidth: \"24ch\"\r\n            },\r\n\r\n        },\r\n        contactField: {\r\n            display: \"flex\",\r\n            background: \"transparent\",\r\n            position: \"relative\",\r\n            top: \"-4px\",\r\n            color: \"black !important\",\r\n            padding: \"0px 3px\"\r\n        },\r\n        detailCard: {\r\n            textAlign: \"left\",\r\n            padding: \"32px\",\r\n            [theme.breakpoints.up(\"lg\")]: {\r\n                marginLeft: \"32px\"\r\n            }\r\n        },\r\n        textWhite: {\r\n            color: \"rgba(255,255,255,0.9)\"\r\n        },\r\n        bgSilver: {\r\n            background: \"rgb(230, 230, 230)\",\r\n            color: \"rgb(128, 128, 128)\"\r\n        },\r\n        bgGradient: {\r\n            background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n            color: \"white\",\r\n            fontWeight: \"bold\",\r\n        },\r\n\r\n        appBar: {\r\n            transition: theme.transitions.create([\"width\", \"margin\"], {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen\r\n            }),\r\n            background: \"white\",\r\n\r\n        },\r\n        appBarShift: {\r\n            [theme.breakpoints.up(\"sm\")]: {\r\n                marginLeft: drawerWidth,\r\n                width: `calc(100% - ${drawerWidth}px)`,\r\n                transition: theme.transitions.create([\"width\", \"margin\"], {\r\n                    easing: theme.transitions.easing.sharp,\r\n                    duration: theme.transitions.duration.enteringScreen\r\n                })\r\n            },\r\n        },\r\n        menuButton: {\r\n            marginRight: 29,\r\n        },\r\n        invisible: {\r\n            visibility: \"hidden\",\r\n            // [theme.breakpoints.down(\"sm\")]: { display: \"none\" },\r\n        },\r\n        hide: {\r\n            display: \"none\",\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            whiteSpace: \"nowrap\",\r\n            background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n        },\r\n\r\n        drawerOpen: {\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create(\"width\", {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.enteringScreen\r\n            }),\r\n            overflowX: \"hidden\"\r\n        },\r\n        drawerClose: {\r\n            transition: theme.transitions.create(\"width\", {\r\n                easing: theme.transitions.easing.sharp,\r\n                duration: theme.transitions.duration.leavingScreen\r\n            }),\r\n            overflowX: \"hidden\",\r\n            width: 0,\r\n            border: 0,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: theme.spacing(8) + 1,\r\n            },\r\n\r\n        },\r\n        toolbar: {\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"flex-end\",\r\n            paddingLeft: \"90px\",\r\n            padding: theme.spacing(0, 1),\r\n            ...theme.mixins.toolbar\r\n        },\r\n        removePadding: {\r\n            [theme.breakpoints.down('xs')]: {\r\n                padding: \"20px 0px !important\",\r\n            }\r\n        },\r\n        absoluteAtSmall: {\r\n            [theme.breakpoints.only('sm')]: { left: \"65px\", },\r\n            [theme.breakpoints.down('sm')]: {\r\n                position: \"absolute\",\r\n\r\n                // top: \"0\",\r\n            }\r\n        },\r\n        innerContent: {\r\n            padding: \"auto 0px\",\r\n            // [theme.breakpoints.up('md')]: {\r\n            //     paddingLeft: \"32px\"\r\n            // },\r\n            [theme.breakpoints.down('sm')]: {\r\n                padding: \"auto 0px auto\",\r\n            },\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3),\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                margin: \"20px\",\r\n            },\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n                margin: \"0px\",\r\n                marginTop: \"20px\",\r\n            },\r\n        },\r\n    };\r\n\r\n\r\n    const useStyles = makeStyles(theme => (styles));\r\n    const classes = useStyles();\r\n\r\n\r\n    return (classes);\r\n};\r\n\r\n\r\nexport default CommonStyle;\r\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport {\n    List, ListItem, ListItemIcon, ListItemText, IconButton, Drawer, Tooltip\n} from '@material-ui/core';\n\nimport { Backdrop, Hidden } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { Work, BugReport, PersonOutline, ClearAllRounded, ChevronLeft } from \"@material-ui/icons\";\nimport CommonStyle from \"./CommonStyle\";\n\nconst SideDrawer = (props) => {\n    const { open } = props;\n    const theme = useTheme();\n    const classes = CommonStyle(theme);\n    return (\n        <React.Fragment>\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open\n                })}\n                classes={{\n                    paper: clsx(classes.drawer, {\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open\n                    })\n                }}\n                // style={{overflow:\"hidden\"}}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={props.handleDrawerClose}>\n                        <ChevronLeft fontSize=\"large\" />\n                    </IconButton>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={props.handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, classes.textWhite, {\n                            [classes.hide]: open\n                        })}\n                    >\n                        <ClearAllRounded fontSize=\"large\" />\n                    </IconButton>\n                </div>\n\n                <List className={classes.textWhite} style={{ marginTop: \"40px\" }}>\n\n                    <NavLink exact activeClassName={classes.active} className=\"link\" to={\"/contact-app\"} >\n                        <ListItem button>\n                            <Tooltip title={!open ? \"Local\" : \"\"} placement=\"right\" arrow>\n                                <ListItemIcon className={classes.textWhite}>\n                                    <PersonOutline fontSize=\"large\" />\n                                </ListItemIcon>\n                            </Tooltip>\n\n                            <ListItemText primary=\"Local\" />\n                        </ListItem>\n                    </NavLink>\n\n                    <NavLink activeClassName={classes.active} className=\"link\" to=\"/contact-app/covid19\">\n                        <ListItem button>\n                            <Tooltip title={!open ? \"Covid19\" : \"\"} placement=\"right\" arrow>\n                                <ListItemIcon className={classes.textWhite}>\n                                    <BugReport fontSize=\"large\" />\n                                </ListItemIcon>\n                            </Tooltip>\n                            <ListItemText primary=\"Covid19\" />\n                        </ListItem>\n                    </NavLink>\n\n                    <NavLink exact activeClassName={classes.active} className=\"link\" to=\"/contact-app/jobs\">\n                        <ListItem button>\n                            <Tooltip title={!open ? \"Jobs\" : \"\"} placement=\"right\" arrow>\n                                <ListItemIcon className={classes.textWhite}>\n                                    <Work fontSize=\"large\" />\n                                </ListItemIcon>\n                            </Tooltip>\n                            <ListItemText primary=\"Jobs\" />\n                        </ListItem>\n                    </NavLink>\n\n                </List>\n            </Drawer>\n            <Hidden mdUp>\n                <Backdrop className={classes.backdrop} open={open} onClick={props.handleDrawerClose} />\n            </Hidden>\n        </React.Fragment>\n    )\n}\n\nexport default SideDrawer;\n","import React from 'react';\r\nimport { Grid, Typography, Hidden } from \"@material-ui/core\";\r\n\r\nconst Heading = ({ heading, headerStyle }) => {\r\n    return (\r\n        <Grid container item xs={12} wrap=\"nowrap\" alignItems=\"center\" className={headerStyle} >\r\n            <Grid item xs style={{ maxWidth: \"48px\", marginRight: \"16px\" }}>\r\n                <i className={heading.icon} ></i>\r\n            </Grid>\r\n            <Grid item xs className=\"text-left text-black\" >\r\n                <Grid item xs>\r\n                    {/* <Typography variant=\"h4\" component=\"span\"> */}\r\n                    <h1 style={{ display: \"inline\", margin: \"0\", lineHeight: 1.1, color: \"black\" }}>\r\n                        {heading.title}\r\n                    </h1>\r\n                    {/* </Typography> */}\r\n\r\n                    <Hidden xsDown>\r\n                        {/* <Grid item xs={12}> */}\r\n                        <p className=\"text-silver\" style={{ margin: 0, lineHeight: 1 }}>\r\n                            {heading.subtitle}\r\n                        </p>\r\n                        {/* <Typography variant=\"span\" wrap=\"nowrap\" component=\"span\" className=\"text-silver\">{heading.subtitle}</Typography> */}\r\n                        {/* </Grid> */}\r\n                    </Hidden>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Heading;\r\n","import React from \"react\";\r\nimport { InputBase, IconButton, Tooltip } from \"@material-ui/core\";\r\nimport { Search } from \"@material-ui/icons\";\r\n\r\nconst SearchBar = (props) => {\r\n\r\n    return (\r\n        <Tooltip title=\"Search\" arrow disableFocusListener >\r\n            <div>\r\n                <div className={props.classes.searchWrapper}>\r\n                    <div className={props.classes.searchbar}>\r\n                        <InputBase\r\n                            className={props.classes.input}\r\n                            type=\"search\"\r\n                            value={props.search.slice(0, 32)}\r\n                            placeholder={`Search ${props.keyword}`}\r\n                            onChange={props.onChange}\r\n                            disabled={props.wannaCreateNew}\r\n                            style={!props.data.length ? { color: \"red\" } : {}}\r\n                        />\r\n                        <IconButton type=\"submit\" disabled aria-label=\"search\">\r\n                            <Search />\r\n                        </IconButton>\r\n                    </div>\r\n\r\n                </div>\r\n                {props.error.length > 0 ?\r\n                    <span>\r\n                        <small style={{ color: \"red\", position:\"absolute\",paddingLeft: \"16px\", paddingTop: \"4px\" }}>{props.error}</small>\r\n                    </span>\r\n                    : props.search.length > 0 ?\r\n                        <small style={{ position:\"absolute\",paddingLeft: \"20px\", paddingTop: \"4px\" }}> Found: {props.data.length} record(s) </small>\r\n                        : \"\"\r\n                }\r\n            </div>\r\n        </Tooltip >\r\n    );\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport clsx from \"clsx\";\r\nimport { Grid, Button, Hidden, Tooltip, Zoom } from \"@material-ui/core\";\r\nimport { Add, Delete } from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport CommonStyle from \"./CommonStyle\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nconst ActionBar = (props) => {\r\n    const theme = useTheme();\r\n    const { keyword } = props;\r\n    let someSelected = props.data.some(item => item.checked); //props.someSelected; \r\n    const classes = CommonStyle(theme);\r\n    return (\r\n        <Grid container item xs={12} lg={6} className={clsx(classes.actionbar, classes.removePadding)}>\r\n            <Grid item xs={8} lg={6} style={{ textAlign: \"left\" }} >\r\n                <SearchBar classes={classes} search={props.search} error={props.error} data={props.data} onChange={props.onChange} setActive={props.setActive} filterData={props.filterData}\r\n                    wannaCreateNew={props.wannaCreateNew} keyword={keyword} />\r\n            </Grid>\r\n            <Grid item xs={2} lg={3}>\r\n                <Tooltip title={props.wannaCreateNew ? \"Adding...\" : `Add ${keyword}`} arrow TransitionComponent={Zoom}>\r\n                    <span className={clsx(classes.btn, { [classes.btnAdding]: props.wannaCreateNew })}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            className={clsx(classes.button, classes.bgGradient, classes.btnAdd)}\r\n                            size=\"large\"\r\n                            fullWidth\r\n                            disabled={props.wannaCreateNew}\r\n                            onClick={() => props.handleAdd(true)} >\r\n                            <Add /> <Hidden smDown>Add{props.wannaCreateNew && \"ing\"}</Hidden>\r\n\r\n                        </Button> </span>\r\n                </Tooltip>\r\n            </Grid>\r\n            <Grid item xs={2} lg={3}>\r\n                <Tooltip title={someSelected ? `Delete ${keyword}` : `Select ${keyword} to Delete`} arrow TransitionComponent={Zoom}>\r\n                    <span className={clsx(classes.btn, { [classes.cursorDisabled]: !someSelected })}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            // style={{paddingRight:\"16px\"}}\r\n                            className={clsx(classes.button, classes.bgGradient, classes.btnDelete)}\r\n                            size=\"large\"\r\n                            fullWidth\r\n                            onClick={props.handleDelete}\r\n                            disabled={!someSelected || props.wannaCreateNew}\r\n                        > <Delete /> <Hidden smDown>Delete&nbsp;</Hidden>\r\n                        </Button>\r\n                    </span>\r\n                </Tooltip>\r\n            </Grid>\r\n        </Grid >\r\n\r\n    )\r\n}\r\n\r\nexport default ActionBar;\r\n","import React from 'react'\r\nimport clsx from 'clsx';\r\nimport { ListItem, ListItemAvatar, ListItemText, Fab, InputAdornment, TextField, Tooltip } from \"@material-ui/core\";\r\nimport { DoneOutline, Close, AccountBox, Email } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NewContact = (props) => {\r\n    let { titleField, uniqueField } = props;\r\n    console.log(\"New Contact Rendered.\");\r\n    const useStyles = makeStyles(theme => ({\r\n        newListItem: {\r\n            [theme.breakpoints.down(\"xs\")]: {\r\n                padding: 0,\r\n            }\r\n        },\r\n        newContactField: {\r\n            width: \"46%\",\r\n            minWidth: \"46%\",\r\n            margin: \"10px 1.5%\",\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n                minWidth: \"96%\",\r\n            }\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const [newContactName, setNewContactName] = React.useState(\"\");\r\n    const [newContactEmail, setNewContactEmail] = React.useState(\"\");\r\n    const [emailError, setEmailError] = React.useState(\"\");\r\n    const [nameError, setNameError] = React.useState(\"\");\r\n    let timeoutId = newContactName;\r\n    const handleOnChange = e => {\r\n        let value = e.target.value;\r\n        if (e.target.name === titleField.fieldname) {\r\n            let { fieldname, max, min, required, type, label } = titleField;\r\n            if (value.trim().length) {\r\n                if (value.length > max) {\r\n                    if (timeoutId) clearTimeout(timeoutId);\r\n                    timeoutId = setTimeout(() => {\r\n                        setNameError(\"\");\r\n                    }, 1500);\r\n                    setNameError(\"You can enter max\" + max + \" chars\");\r\n                }\r\n                else if (value.length < min) {\r\n                    setNameError(\"Enter atleast \" + min + \" chars\");\r\n                    setNewContactName(value);\r\n                }\r\n                else {\r\n                    setNameError(\"\");\r\n                    setNewContactName(value);\r\n                }\r\n            }\r\n            else {\r\n                setNameError(label + \" is required\");\r\n                setNewContactName(value);\r\n            }\r\n\r\n        }\r\n        if (e.target.name === uniqueField.fieldname) {\r\n            let { fieldname, max, min, type, required, label } = uniqueField;\r\n            let value = e.target.value.trim();\r\n            if (value.length) {\r\n                let found = props.data.find(obj => (obj[fieldname]) ? obj[fieldname].toLowerCase() === value.toLowerCase() : false);\r\n                if (type === \"email\" && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n                    setEmailError(\"Invalid \" + label);\r\n                    setNewContactEmail(value);\r\n                }\r\n                else if (value.length < min) {\r\n                    setEmailError(\"min \" + min + \" chars\");\r\n                    setNewContactEmail(value);\r\n                }\r\n                else if (value.length > max) {\r\n                    if (timeoutId) clearTimeout(timeoutId);\r\n                    timeoutId = setTimeout(() => {\r\n                        setEmailError(\"\");\r\n                    }, 1500);\r\n                    setEmailError(\"max \" + max + \" chars\");\r\n                }\r\n                else if (found) {\r\n                    setEmailError(label + \" already exists\");\r\n                    setNewContactEmail(value);\r\n                }\r\n                else {\r\n                    setEmailError(\"\");\r\n                    setNewContactEmail(value);\r\n                }\r\n            } else {\r\n                setNewContactEmail(value);\r\n                setEmailError(uniqueField.required ? label + \" is required\" : \"\"); //fieldname===\"id\"?setEmailError(label+\" is required\"):setEmailError(\"\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleOnKeyDown = (e) => {\r\n        if (e.keyCode === 13 && newContactName.trim().length && !nameError.length && !emailError.length) {\r\n            saveContact();\r\n        }\r\n    }\r\n\r\n    const saveContact = () => {\r\n        props.addNewContact({\r\n            id: uuidv4(), //props.data.length ? props.data.reduce((max, next) => Math.max(max, next.id), props.data[0].id) + 1 : 0,\r\n            [props.titleField.fieldname]: newContactName,\r\n            [props.uniqueField.fieldname]: newContactEmail,\r\n            checked: false\r\n        });\r\n        setNewContactName(\"\");\r\n        setNewContactEmail(\"\");\r\n        props.gotoLastPage();\r\n    }\r\n\r\n    return (\r\n        <ListItem className={clsx(classes.newListItem)}>\r\n\r\n            <ListItemAvatar>\r\n                <Tooltip title=\"Save New Contact\" arrow><span>\r\n                    <Fab color=\"primary\" size=\"medium\"\r\n                        onClick={saveContact}\r\n                        disabled={(!newContactName.length > 0 || nameError.length > 0 || emailError.length > 0) || (uniqueField.fieldname === \"CountryCode\" ? !newContactEmail.length > 0 : false)}\r\n                    >\r\n                        <DoneOutline />\r\n                    </Fab>\r\n                </span></Tooltip>\r\n            </ListItemAvatar>\r\n\r\n\r\n            <ListItemText primary={\r\n                <form align=\"center\">\r\n                    <TextField required autoFocus multiline\r\n                        value={newContactName}\r\n                        label=\" FullName\" name={titleField.fieldname}\r\n                        InputProps={{\r\n                            startAdornment: (<InputAdornment position=\"start\">\r\n                                <AccountBox /> </InputAdornment>\r\n                            )\r\n                        }}\r\n                        error={nameError.length > 0}\r\n                        helperText={nameError}\r\n                        onChange={handleOnChange}\r\n                        onKeyDown={handleOnKeyDown}\r\n                        placeholder=\"Peter Parker\"\r\n                        className={classes.newContactField}\r\n                    />\r\n                    <TextField multiline value={newContactEmail}\r\n                        placeholder={uniqueField.placeholder}\r\n                        label={uniqueField.label} name={uniqueField.fieldname}\r\n                        InputProps={{\r\n                            startAdornment: (<InputAdornment position=\"start\">\r\n                                <Email /> </InputAdornment>\r\n                            )\r\n                        }}\r\n                        error={emailError.length > 0}\r\n                        helperText={emailError}\r\n                        onChange={handleOnChange}\r\n                        // onKeyDown={handleOnKeyDown}\r\n                        className={classes.newContactField}\r\n                    />\r\n                </form>\r\n            } />\r\n\r\n            <ListItemAvatar style={{ textAlign: \"right\" }}>\r\n                <Tooltip title=\"Cancel\" arrow>\r\n                    <Fab color=\"secondary\" size=\"medium\"\r\n                        onClick={() => {\r\n                            props.handleAdd(false); setNewContactName(\"\"); setNewContactEmail(\"\");\r\n                            setNameError(\"\"); setEmailError(\"\");\r\n                        }}>\r\n                        <Close />\r\n                    </Fab>\r\n                </Tooltip>\r\n            </ListItemAvatar>\r\n        </ListItem>\r\n\r\n    )\r\n}\r\n\r\nexport default NewContact\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { Edit, Save, Close, ArrowBack, AddAPhoto } from \"@material-ui/icons\";\r\nimport { Grid, Avatar, Fab, Badge, TextField, Select, MenuItem, IconButton, Tooltip, Fade } from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport { DropzoneDialog } from 'material-ui-dropzone';\r\nimport CommonStyle from \"./CommonStyle\";\r\n\r\nfunction display(data) {\r\n    // console.log(data)\r\n    return (data) ? data\r\n        : <span style={{ color: \"dimgray\" }}>Info Not Provided</span>;\r\n}\r\nfunction stringToColor(string) {\r\n    let hash = 0, i = 0, color = \"#\";\r\n    for (i = 0; i < string.length; i += 1) {\r\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    for (i = 0; i < 3; i += 1) {\r\n        const value = (hash >> (i * 8)) & 0xff;\r\n        color += `00${value.toString(16)}`.substr(-2);\r\n    }\r\n    return color;\r\n}\r\nlet timeoutId = 111, fieldTimer = 99;\r\nconst DetailCard = ({ contact, editable, handleEdit, handleUpdate, setActive, objRule, imgField, titleField, uniqueField, descriptionField }) => {\r\n    let id = uniqueField.fieldname;\r\n    const theme = useTheme();\r\n    const classes = CommonStyle(theme);\r\n    const [state, setState] = React.useState(contact);\r\n    const [formError, setFormError] = React.useState(false);\r\n    const [dropzoneOpen, setDropzoneOpen] = React.useState(false);\r\n    const [currentError, setCurrentError] = React.useState(false);\r\n\r\n    const validateForm = () => {\r\n        setFormError(Object.entries(objRule).reduce((sum, next) => sum + next[1].error, \"\").length > 0);\r\n    };\r\n\r\n    const setValue = (field, value) => {\r\n        // if (fieldTimer) clearTimeout(fieldTimer);\r\n        //fieldTimer = setTimeout(() =>\r\n        setState({\r\n            ...state,\r\n            [field]: value,\r\n        })\r\n        //     , 500);\r\n    };\r\n\r\n    const validateField = (e, field) => {\r\n        let value = e.target.value || \"\";\r\n        const { fieldname, type, label, required, min, max } = field;\r\n        if (value.length) {\r\n            if (type === \"phone\") {\r\n                let invalidPhone = !/^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/.test(value);\r\n                setValue(field.fieldname, value);\r\n                objRule[fieldname].error = invalidPhone ? \"Invalid Phone number\" : \"\";\r\n            }\r\n\r\n            else if (type === \"email\") {\r\n                let invalidEmail = !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value);\r\n                if (invalidEmail && value.length <= max) {\r\n                    objRule[fieldname].error = \"Invalid Email address\";\r\n                    setValue(field.fieldname, value);\r\n                }\r\n                else if (value.length > max) {\r\n                    if (timeoutId) clearTimeout(timeoutId);\r\n                    timeoutId = setTimeout(() => {\r\n                        objRule[fieldname].error = invalidEmail ? \"Invalid Email address\" : \"\";\r\n                        setCurrentError(false);\r\n                        validateForm();\r\n                    }, 1500);\r\n                    objRule[fieldname].error = \"You can enter max \" + max + \" chars\";\r\n                    setCurrentError(true);\r\n                }\r\n                else {\r\n                    objRule[fieldname].error = \"\";\r\n                    setValue(field.fieldname, value);\r\n                }\r\n            }\r\n            else {\r\n                let invalidId = (!/^([a-zA-Z])[a-zA-Z0-9-]*$/i.test(value));\r\n                if (field.fieldname === \"id\" && invalidId) {\r\n                    if (timeoutId) clearTimeout(timeoutId);\r\n                    timeoutId = setTimeout(() => {\r\n                        objRule[fieldname].error = \"Enter AlphaNumeric with \\\"-\\\"\";\r\n                        setCurrentError(false);\r\n                        validateForm();\r\n                    }, 1000);\r\n                    objRule[fieldname].error = \"Invalid \" + label;\r\n                    setValue(field.fieldname, value);\r\n                    setCurrentError(true);\r\n                }\r\n                else if (value.length < min) {\r\n                    objRule[fieldname].error = \"Enter ateleast \" + min + \" chars\";\r\n                    setValue(field.fieldname, value);\r\n                }\r\n                else if (value.length > max) {\r\n                    if (timeoutId) clearTimeout(timeoutId);\r\n                    timeoutId = setTimeout(() => {\r\n                        objRule[fieldname].error = \"\";\r\n                        setCurrentError(false);\r\n                        validateForm();\r\n                    }, 1500);\r\n                    objRule[fieldname].error = \"You can enter max \" + max + \"  chars\";\r\n                    setCurrentError(true);\r\n                }\r\n                else {\r\n                    objRule[fieldname].error = \"\"\r\n                    setValue(fieldname, value);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            objRule[fieldname].error = required ? (label + \" is required\") : \"\";\r\n            setValue(fieldname, value);\r\n        }\r\n        validateForm();\r\n    };\r\n\r\n    const handleFileSubmit = (files) => {\r\n        console.log(\"submit\")\r\n        setState({\r\n            ...state,\r\n            image: URL.createObjectURL(files[0])\r\n        });\r\n        setDropzoneOpen(false);\r\n    };\r\n\r\n    const handleChangeInput = (e, field) => { validateField(e, field); };\r\n\r\n    const handleCancel = () => {\r\n        handleEdit(false);\r\n        setState(contact);\r\n        Object.entries(objRule).forEach(obj => obj[1].error = \"\");\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        setState(contact);\r\n        Object.entries(objRule).forEach(obj => obj[1].error = \"\");\r\n        setFormError(false);\r\n    }, [contact, objRule]);\r\n\r\n\r\n\r\n    return (\r\n        contact.id !== undefined && contact.id !== null ?\r\n            <Grid container item xs={12} justify=\"center\" className={`${classes.detailCard} ${classes.bgSilver}`} >\r\n                {/* BACK - EDIT BUTTONS */}\r\n                <Grid container item xs={12} justify=\"space-between\">\r\n                    <Grid item xs style={{ textAlign: \"left\" }}>\r\n                        <Tooltip title=\"Back\">\r\n                            <IconButton color=\"secondary\" style={{ padding: \"8px 0px\" }} onClick={() => setActive({})}><ArrowBack />  </IconButton>\r\n                        </Tooltip>\r\n                    </Grid>\r\n                    <Grid item xs style={{ textAlign: \"right\" }}>  {!editable ?\r\n                        <Tooltip title=\"Edit\">\r\n                            <Fab size=\"medium\" variant=\"extended\" className={classes.btnEdit} onClick={() => handleEdit()}><Edit fontSize=\"small\" /> &nbsp;EDIT </Fab>\r\n                        </Tooltip> : <></>}\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/* DETAILS */}\r\n                <Grid container item spacing={editable ? 1 : 3}>\r\n                    {/* Image, Title, Subtitle/Description Text */}\r\n                    < Grid container item xs={12} justify=\"center\" >\r\n                        <Grid item>\r\n                            <DropzoneDialog showPreviewsInDropzone={true} showPreviews={false} filesLimit={1} acceptedFiles={[\"image/*\"]} showFileNamesInPreview={true} showFileNames={true}\r\n                                open={dropzoneOpen} onClose={() => setDropzoneOpen(false)} onSave={handleFileSubmit}\r\n                            />\r\n                            <Badge overlap=\"circle\" invisible={!editable}\r\n                                anchorOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                badgeContent=\r\n                                {<Tooltip title=\"Upload Photo\" arrow><span><IconButton\r\n                                    onClick={() => setDropzoneOpen(true)}\r\n                                    style={{\r\n                                        position: \"relative\", top: \"-5px\", left: \"-5px\", padding: \"4px\", background: \"white\", border: \"3px solid darkgray\"\r\n                                    }}\r\n                                    disabled={!editable}\r\n                                    size=\"medium\">\r\n                                    <AddAPhoto color=\"primary\" />\r\n                                </IconButton></span></Tooltip>}\r\n                            >\r\n                                <Avatar src={state[imgField.fieldname]} className={classes.larger} style={{ background: stringToColor(contact.id) }}>\r\n                                    {contact[titleField.fieldname].split(\" \").map((n, i) => i < 2 ? n[0] : \"\")}\r\n                                </Avatar>\r\n                            </Badge>\r\n                        </Grid>\r\n\r\n                        <Grid container item justify=\"center\" style={{ textAlign: \"center\" }}>\r\n                            <Grid item xs={12}>\r\n                                <h1 style={{ lineHeight: 1, margin: \"10px auto\", color: \"black\", maxWidth: \"100%\", overflowWrap: \"anywhere\", }}>\r\n                                    {contact[titleField.fieldname]}\r\n                                </h1>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={8} className={classes.aboutGrid}>\r\n                                {editable ?\r\n                                    <TextField multiline type=\"text\" label={descriptionField.label} variant=\"filled\" className={classes.contactField}\r\n                                        value={state[descriptionField.fieldname]} name={descriptionField.fieldname} onChange={(e) => handleChangeInput(e, descriptionField)} autoFocus\r\n                                        helperText={descriptionField.error || \" \" /*  OR \" \" is used cuz want to display blank so it takes space */} error={descriptionField.error.length > 0} rowsMax={3}\r\n                                    /> : contact[descriptionField.fieldname]}\r\n                                {/* : display(contact[descriptionField.fieldname])} */}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {\r\n                        Object.entries(objRule).map((keyValuePair, index) => {\r\n                            //keyValuePair has-> [0] as fieldname(as Key) and [1] as Value of Single Field, i.e., fullname:\"karan paramar\"\r\n                            let fieldname = keyValuePair[0];\r\n                            let field = objRule[fieldname];  //Getting rule of field ,objRule is passed from props\r\n\r\n                            return !([\"image\", \"description\"].includes(field.type)) &&\r\n\r\n                                <Grid container item xs={12} key={index}>\r\n                                    <Grid item xs={12} md={4}>{field.label.concat((editable && field.required) ? \"*\" : \"\")}</Grid>\r\n                                    <Grid item xs={12} md={8} className={classes.fieldGrid} >\r\n                                        {\r\n                                            field.type === \"boolean\" ?\r\n                                                (editable ?\r\n                                                    <Select\r\n                                                        value={state[fieldname] || \"NO\"}\r\n                                                        onChange={(e) => handleChangeInput(e, field)}\r\n                                                        autoWidth\r\n                                                        className={classes.selectEmpty}>\r\n                                                        <MenuItem value={\"YES\"}>Yes</MenuItem>\r\n                                                        <MenuItem value={\"NO\"}>No</MenuItem>\r\n                                                    </Select>\r\n                                                    : display(contact[fieldname] ? contact[fieldname] : \"NO\"))\r\n                                                : (editable ? <TextField multiline type=\"text\" className={classes.contactField}\r\n                                                    value={state[fieldname]} name={fieldname} placeholder={field.placeholder} onChange={(e) => handleChangeInput(e, field)}\r\n                                                    helperText={objRule[fieldname].error || \" \"} error={objRule[fieldname].error.length > 0}\r\n                                                />\r\n                                                    // field.error not used but accessing objRule[fieldname].error cuz objRule is global and is modified in validation fxn\r\n                                                    //If I am making TextField Uncontrolled i.e. removing value attr, maxLength prob.\r\n                                                    : display(contact[fieldname]))\r\n                                        }\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                        }\r\n                        )\r\n                    }\r\n\r\n                </Grid>\r\n\r\n                {/* SAVE - CANCEL BUTTONS */}\r\n                <Fade in={editable}>\r\n                    <Grid container item justify=\"center\" spacing={1}>\r\n                        <Grid item>\r\n                            <Tooltip title={formError ? \"Saving requires valid values\" : \"Save\"} arrow>\r\n                                <div className={clsx({ [classes.cursorDisabled]: formError })}>\r\n                                    <Fab variant=\"extended\" size=\"medium\" color=\"primary\" disabled={formError} onClick={() => { handleUpdate(state); handleEdit(false); setState(contact) }}><Save /> &nbsp;Save </Fab>\r\n                                </div>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Tooltip title=\"Cancel\" arrow>\r\n                                <Fab variant=\"extended\" size=\"medium\" color=\"secondary\" onClick={handleCancel}><Close /> &nbsp;Cancel </Fab>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Fade>\r\n\r\n\r\n\r\n            </Grid >\r\n            : <></>\r\n        // : <Grid container item xs={12} justify=\"center\" className={`${classes.detailCard} ${classes.bgSilver}`} >\r\n        //     \"Contact Details will be displayed over here\"</Grid>\r\n    )\r\n}\r\n\r\nexport default DetailCard;","import React from 'react';\r\nimport clsx from \"clsx\";\r\nimport {\r\n    List, ListItem, ListItemIcon, ListItemText, ListItemAvatar, ListItemSecondaryAction,\r\n    Checkbox, Hidden, IconButton, Avatar, Tooltip, Typography,\r\n    Select, MenuItem, Divider,\r\n} from '@material-ui/core';\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { AddBox, IndeterminateCheckBox } from \"@material-ui/icons\";\r\nimport CommonStyle from \"./CommonStyle\";\r\nimport NewContact from \"./NewContact\";\r\nimport DetailCard from \"./DetailCard\";\r\n\r\nfunction stringToColor(string) {\r\n    let hash = 0, i = 0, color = \"#\";\r\n    for (i = 0; i < string.length; i += 1) {\r\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    for (i = 0; i < 3; i += 1) {\r\n        const value = (hash >> (i * 8)) & 0xff;\r\n        color += `00${value.toString(16)}`.substr(-2);\r\n    }\r\n    return color;\r\n}\r\nconst ContactList = (props) => {\r\n    const classes = CommonStyle();\r\n    const [selectAll, setSelectAll] = React.useState(false);\r\n    const [page, setPage] = React.useState(1);\r\n    const [per_page, setPerPage] = React.useState(5);\r\n    const { imgField, titleField, uniqueField, descriptionField } = props;\r\n\r\n    const handlePageChange = (event, value) => { setPage(value); props.setActive({}); }\r\n    const gotoLastPage = () => { setPage(Math.ceil((props.data.length + 1) / per_page)) }\r\n\r\n    React.useEffect(() => { setSelectAll(props.data.some(contact => contact.checked)); }, [props.data]);\r\n    return (<>\r\n        <List className={classes.contactList} disablePadding={true} >\r\n\r\n            <ListItem dense className={classes.listItemHeader}>\r\n                <Tooltip title={selectAll ? \"DeSelectAll\" : \"SelectAll\"} arrow><span>\r\n                    <IconButton edge=\"start\" disabled={props.wannaCreateNew || props.data.length < 1}\r\n                        onClick={() => { props.handleSelectAll(!selectAll); setSelectAll(!selectAll); }} >\r\n                        {selectAll ? <IndeterminateCheckBox /> : <AddBox />}\r\n                    </IconButton></span>\r\n                </Tooltip>\r\n                <ListItemText primary=\"Basic Info\" className={classes.listItemHeaderText} />\r\n                <Hidden smDown> <ListItemText primary={uniqueField.label} /> </Hidden>\r\n            </ListItem>\r\n            {\r\n                props.wannaCreateNew ?\r\n                    <NewContact data={props.data} handleAdd={props.handleAdd} gotoLastPage={gotoLastPage} titleField={titleField} uniqueField={uniqueField} addNewContact={props.addNewContact} />\r\n                    : <></>\r\n            }\r\n            {\r\n                props.data.length ?\r\n                    <div className={clsx({ [classes.renderedRecords]: per_page > 5 })}>\r\n                        {props.data.map((contact, index) =>\r\n                            (index >= page * per_page - per_page) && (index < page * per_page) &&\r\n                            (<React.Fragment key={index}>\r\n                                <ListItem dense selected={props.activeContact.id === contact.id} disabled={props.wannaCreateNew}\r\n                                    button onClick={() => { props.handleContactClick(contact); }} key={index}\r\n                                    className={classes.listItem}>\r\n                                    <ListItemIcon className={classes.Checkbox}>\r\n                                        <Tooltip title={contact.checked ? `DeSelect ${props.keyword}` : `Select ${props.keyword}`} arrow>\r\n                                            <Checkbox\r\n                                                edge=\"start\"\r\n                                                // disableRipple\r\n                                                color=\"primary\"\r\n                                                checked={contact.checked}\r\n                                                onClick={(e) => { props.handleCheckedChange(contact); e.stopPropagation(); }}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </ListItemIcon>\r\n\r\n                                    <ListItemAvatar>\r\n                                        <Avatar src={contact[imgField.fieldname]} alt={contact[titleField.fieldname]} className={classes.large} style={{ background: stringToColor(contact.id) }}>\r\n                                            {contact[titleField.fieldname].split(\" \").map((n, i) => i < 2 ? n[0] : \"\")}\r\n                                        </Avatar>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary={<Tooltip title={titleField.label} arrow>\r\n                                            <Typography variant=\"h6\" style={{ overflowWrap: \"break-word\", lineHeight: \"1\", fontSize: \"1.2rem\" }}>{contact[titleField.fieldname]}</Typography>\r\n                                        </Tooltip>}\r\n                                        secondary={<Hidden mdUp>{contact[uniqueField.fieldname] ?\r\n                                            <Tooltip title={uniqueField.label} arrow>\r\n                                                <Typography component=\"span\" noWrap={true} style={{ fontWeight: \"600\", display: \"block\" }}>{contact[uniqueField.fieldname]} </Typography>\r\n                                            </Tooltip>\r\n                                            : <small>&nbsp;</small>}</Hidden>}\r\n                                        className={classes.basicInfo}\r\n                                    />\r\n                                    <Hidden smDown>\r\n                                        <ListItemText /*className={classes.basicInfo}*/ style={{ maxWidth: \"fit-content\" }}\r\n                                            primary={contact[uniqueField.fieldname] ?\r\n                                                <Tooltip title={uniqueField.label} arrow>\r\n                                                    <h4 style={{ maxWidth: \"24ch\", overflow: \"hidden\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\" }}>\r\n                                                        {contact[uniqueField.fieldname]}</h4>\r\n                                                </Tooltip> : <h4>&nbsp;</h4>} />\r\n                                    </Hidden>\r\n\r\n                                </ListItem>\r\n\r\n                                {(props.activeContact.id === contact.id) ?\r\n                                    <Hidden lgUp>\r\n                                        <DetailCard contact={props.activeContact} objRule={props.objRule}\r\n                                            titleField={titleField} imgField={imgField} uniqueField={uniqueField} descriptionField={descriptionField}\r\n                                            editable={props.editable} setActive={props.setActive} handleEdit={props.handleEdit} handleUpdate={props.handleUpdate} keyword={props.keyword} />\r\n                                    </Hidden> : <></>\r\n                                }\r\n\r\n                            </React.Fragment>\r\n                            )\r\n\r\n                        )}\r\n                    </div>\r\n\r\n                    : <ListItem dense> <h3 style={{ color: \"red\", fontWeight: \"normal\", margin: \"2% auto\" }}>NO RECORD !</h3></ListItem>\r\n            }\r\n            {/*Pagination */\r\n                props.data.length > 0 && (props.data.length > per_page) &&\r\n                <><Divider />\r\n                    <ListItem className=\"bg-silver\" >\r\n                        <Pagination page={page} count={Math.ceil(props.data.length / per_page)} onChange={handlePageChange}\r\n                            showFirstButton showLastButton color=\"primary\" style={{ margin: \"auto\" }} />\r\n                    </ListItem>\r\n                </>\r\n            }\r\n            {props.data.length > 0 &&\r\n                <><Divider />\r\n                    <ListItem>\r\n                        <ListItemAvatar>\r\n                            <span> Total {props.keyword} : {props.totalRecords}</span>\r\n                        </ListItemAvatar>\r\n                        <ListItemSecondaryAction>\r\n                            <span>Limit :</span> <Select\r\n                                value={per_page}\r\n                                onChange={(e) => { setPerPage(e.target.value); setPage(1); props.setActive({}); }}\r\n                                autoWidth\r\n                                className={classes.selectEmpty}>\r\n                                <MenuItem value={5}>5</MenuItem>\r\n                                <MenuItem value={10}>10</MenuItem>\r\n                                <MenuItem value={20}>20</MenuItem>\r\n                            </Select>\r\n                        </ListItemSecondaryAction>\r\n\r\n                    </ListItem>\r\n                </>\r\n            }\r\n        </List>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport { Grid, Hidden } from \"@material-ui/core\";\r\nimport { IconButton, AppBar, Toolbar } from \"@material-ui/core\";\r\nimport { ClearAllRounded } from \"@material-ui/icons\";\r\n\r\nimport clsx from \"clsx\";\r\nimport Heading from \"./Heading\";\r\nimport ActionBar from \"./ActionBar\";\r\nimport ContactList from \"./ContactList\";\r\nimport DetailCard from './DetailCard';\r\n\r\nconst MainContent = ({ classes, handleDrawerOpen, open, heading, localData, data, setData, setLocalData, objRule = {}, error = {} }) => {\r\n\r\n    console.log(\"Rendered MainContent with LocalData:\", localData);\r\n    const [editable, setEditable] = React.useState(false);\r\n    const [activeContact, setActiveContact] = React.useState({});\r\n    const [search, setSearch] = React.useState(\"\");\r\n    const [wannaCreateNew, setWannaCreateNew] = React.useState(false);\r\n    let titleField = {}, uniqueField = {}, imgField = {}, descriptionField = {};\r\n    Object.entries(objRule).map((keyvalue) => {\r\n        const { type, fieldname } = keyvalue[1];\r\n        if (type === \"image\") { imgField = keyvalue[1] }\r\n        if (type === \"title\") { titleField = keyvalue[1] }\r\n        if (type === \"description\") { descriptionField = keyvalue[1] }\r\n        if (keyvalue[1].unique) { uniqueField = keyvalue[1] }\r\n    });\r\n    // let someSelected = false;\r\n   // someSelected={someSelected}\r\n    const setActive = (contact) => setActiveContact(contact);\r\n\r\n    const handleEdit = (editable = true) => setEditable(editable);\r\n\r\n    const handleCheckedChange = (changedContact) => {\r\n        let temp = data;\r\n        temp.forEach(item => {\r\n            item.checked = (item.id === changedContact.id) ? !changedContact.checked : item.checked;\r\n        });\r\n        // someSelected = data.some(item => item.checked);\r\n        setData([...temp]);\r\n     \r\n    }\r\n\r\n    const handleSelectAll = (selectAll) => {\r\n        let temp = data;\r\n        temp.forEach(contact => {\r\n            contact.checked = selectAll\r\n        })\r\n        setData([...temp]);\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        localData = localData.filter(item => !item.checked);\r\n        setLocalData([...localData]);\r\n        setData([...localData]);\r\n        if (activeContact.checked) { setActiveContact({}) }\r\n        setSearch(\"\");\r\n    }\r\n\r\n    const handleAdd = (status = true) => {\r\n        setActiveContact({});\r\n        handleSelectAll(false);\r\n        setSearch(\"\");\r\n        filterData(\"\");\r\n        handleEdit(false);\r\n        setWannaCreateNew(status);\r\n    }\r\n\r\n    const addNewContact = (contact) => {\r\n        localData.push(contact);\r\n        setLocalData([...localData]);\r\n        setData([...localData]);\r\n        setWannaCreateNew(false);\r\n        setActiveContact(contact);\r\n    }\r\n\r\n    const handleContactClick = (clickedContact) => {\r\n        setActiveContact(clickedContact);\r\n        setEditable((editable) ? clickedContact.id === activeContact.id : false);\r\n    }\r\n\r\n\r\n    const handleUpdate = (updatedContact) => {\r\n        localData.forEach((item, index) => {\r\n            if (item.id === updatedContact.id) {\r\n                localData[index] = updatedContact;\r\n            }\r\n        });\r\n        setLocalData([...localData]);\r\n        setData([...localData]);\r\n        setActiveContact(updatedContact);\r\n\r\n    };\r\n    /*SEARCH FUNCTION*/\r\n\r\n    const searchFilter = (search) => item => item[titleField.fieldname].toLowerCase().includes(search.toLowerCase());\r\n    const filterData = (value) => { setData([...localData.filter(searchFilter(value))]); }\r\n    const [searchError, setSearchError] = React.useState(\"\");\r\n    let timeoutId = searchError;\r\n    const onChange = (e) => {\r\n        setActiveContact({});\r\n        filterData(e.target.value);\r\n        setSearch(e.target.value);\r\n\r\n        if (e.target.value.length > titleField.max) {\r\n            if (timeoutId) clearTimeout(timeoutId);\r\n            setSearchError(\"You can Enter Max \" + titleField.max + \" Character\");\r\n            timeoutId = setTimeout(() => {\r\n                setSearchError(\"\");\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <AppBar className={clsx(classes.appBar, { [classes.appBarShift]: open })}>\r\n                <Toolbar>\r\n                    <IconButton onClick={handleDrawerOpen} edge=\"start\"\r\n                        className={clsx( { [classes.invisible]: open, })} >\r\n                        <ClearAllRounded fontSize=\"large\" />\r\n                    </IconButton>\r\n                    <Heading heading={heading} headerStyle={classes.heading} />\r\n                </Toolbar>\r\n            </AppBar>\r\n            <main className={clsx(classes.content, { [classes.absoluteAtSmall]: open })}>\r\n                <div className={classes.toolbar} />\r\n                <Grid container spacing={5}>\r\n\r\n                    {error.name ? <Grid item xs={12} style={{ color: \"red\", background: \"lightgrey\", margin: \"20px auto\", fontSize: \"200%\", border: '1px solid red' }}>{error.name + \" : \" + error.message}</Grid>\r\n                        :\r\n                        <Grid container item xs={12} justify=\"center\">\r\n                            {/* MAIN CONTENT SEARCHBAR AND LIST STARTS HERE */}\r\n                            <Grid container item xs={12} spacing={6} className={classes.innerContent} >\r\n\r\n                                {/* ActioBar : SearchBar and Buttons*/}\r\n                                <ActionBar data={data} search={search} error={searchError} onChange={onChange} setActive={setActive} filterData={filterData} handleDelete={handleDelete} handleAdd={handleAdd}\r\n                                     wannaCreateNew={wannaCreateNew} keyword={heading.keyword} />\r\n                                {/* ActionBar Ends ; Wrapper for List starts here*/}\r\n\r\n                                <Grid container item xs={12} className={clsx(classes.removePadding)}>\r\n                                    <Grid item xs={12} lg >\r\n                                        <ContactList data={data} totalRecords={localData.length} objRule={objRule} activeContact={activeContact} editable={editable} setActive={setActive}\r\n                                            handleContactClick={handleContactClick} handleCheckedChange={handleCheckedChange}\r\n                                            titleField={titleField} imgField={imgField} uniqueField={uniqueField} descriptionField={descriptionField}\r\n                                            handleSelectAll={handleSelectAll} handleAdd={handleAdd} handleEdit={handleEdit} handleUpdate={handleUpdate}\r\n                                            wannaCreateNew={wannaCreateNew} addNewContact={addNewContact} keyword={heading.keyword}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Hidden mdDown>\r\n                                        <Grid container item xs={12} lg style={{ height: \"fit-content\" }}>\r\n                                            <DetailCard contact={activeContact} objRule={objRule}\r\n                                                titleField={titleField} imgField={imgField} uniqueField={uniqueField} descriptionField={descriptionField}\r\n                                                setActive={setActive} editable={editable} handleEdit={handleEdit} handleUpdate={handleUpdate} keyword={heading.keyword}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Hidden>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>}\r\n\r\n                </Grid>\r\n            </main>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MainContent;\r\n","import React from 'react';\r\nimport MainContent from \"./MainContent\";\r\nimport LocalData from \"../data/LocalData\";\r\n\r\nlet localData = LocalData();\r\n\r\nconst MyContacts = ({ classes, handleDrawerOpen, open }) => {\r\n    console.log(\"Rendered MyContacts.\");\r\n    const setLocalData = (records) => localData = [...records];\r\n    const [data, setData] = React.useState(localData);\r\n    const changeData = (records) => setData([...records]);\r\n\r\n    const heading = {\r\n        keyword: \"Contact\",\r\n        title: \"Contacts\",\r\n        subtitle: \"Welcome to InstaConnect\",\r\n        icon: \"fa fa-address-book fa-flip-horizontal fa-3x icon-gradient\"\r\n    };\r\n\r\n    //Mentioning Rules Editable Fields to be displayed\r\n    let objRule = {\r\n        fullname: { fieldname: \"fullname\", label: \"Full Name\", required: true, min: 1, max: 32, type: \"title\", error: \"\", placeholder: \"Bruce Wayne\" },\r\n        email: { fieldname: \"email\", label: \"Email\", required: true, min: 6, max: 100, type: \"email\", error: \"\", placeholder: \"abc@xyz.com\", unique: true },\r\n        phone: { fieldname: \"phone\", label: \"Phone\", required: true, min: 10, max: 14, type: \"phone\", error: \"\", placeholder: \"+91 1234567890\" },\r\n        company: { fieldname: \"company\", label: \"Company\", required: false, min: 2, max: 32, type: \"text\", error: \"\", placeholder: \"Zuru pvt ltd\" },\r\n        about: { fieldname: \"about\", label: \"About\", required: false, min: 2, max: 100, type: \"description\", error: \"\", placeholder: \"Something relevant\" },\r\n        address: { fieldname: \"address\", label: \"Address\", required: false, min: 4, max: 50, type: \"text\", error: \"\", placeholder: \"Someplace\" },\r\n        image: { fieldname: \"image2\", label: \"Image\", required: false, min: 0, max: 1, type: \"image\", error: \"\" },\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <MainContent\r\n                classes={classes}\r\n                localData={localData}\r\n                setLocalData={setLocalData}\r\n                data={data}\r\n                setData={changeData}\r\n                objRule={objRule}\r\n                open={open}\r\n                handleDrawerOpen={handleDrawerOpen}\r\n                heading={heading} />\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MyContacts;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst LocalData = () => {\r\n    let data = [\r\n        {\r\n            // id: uuidv4(),\r\n            // checked: false,\r\n            // fullname: \"ZAjflkasdjflksdjfkl dfjdfkjddksj\",\r\n            // about: \"adkghdkjfghafkjldghkljfdghkjdfaghlkjdaghkjadgafgkljhakjdfghlkjhafldgjhaldkfgjhaj@kdjfghadgkjdfhg.com\",\r\n            // image: \"\",\r\n            // email: \"adkghdkjfghafkjldghkljfdghkjdfaghlkjdaghkjadgafgkljhakjdfghlkjhafldgjhaldkfgjhaj@kdjfghadgkjdfhg.com\",\r\n            // phone: \"+91 8511918322\",\r\n            // company: \"ZURUTEXH INDIA PVT LTD sdfjhfkjd\",\r\n            // address: \"KJDSFAHDSKLFJAHDSFKJDSHF DSK JHSDKFJHDSKJFHKJHFKfd\",\r\n            id: uuidv4(),\r\n            checked: false,\r\n            fullname: \"Admin User\",\r\n            about: \"I am Admin Of the App\",\r\n            image: \"\",\r\n            email: \"admin@gmail.com\",\r\n            phone: \"1231234567\",\r\n            company: \"Work at Work\",\r\n            address: \"Gotham City\",\r\n        }, {\r\n            id: uuidv4(),\r\n            checked: false,\r\n            fullname: \"Karan Parmar\",\r\n            about: \"Intern At Zuru Tech India pvt ltd\",\r\n            image: \"brokenLink.png\",\r\n            email: \"k123parmar@gmail.com\",\r\n            phone: \"+91 8511918322\",\r\n            company: \"ZURU Tech India\",\r\n            address: \"Jivrajpark, Ahmedabad, Gujarat\",\r\n        }, {\r\n            id: uuidv4(),\r\n            checked: false,\r\n            fullname: \"Elon Musk\",\r\n            about: \"I build cool stuff\",\r\n            image: \"https://shareville-media.s3.amazonaws.com/cache/17/28/17280a8830b41b2d4b8b7d97c1f9a265.jpg\",\r\n            email: \"musk@tesla.com\",\r\n            phone: \"124 421 8055\",\r\n            company: \"Tesla Inc\",\r\n            address: \"Mars nearby Earth\",\r\n        }, {\r\n            id: uuidv4(),\r\n            checked: false,\r\n            fullname: \"Jeff Bezos\",\r\n            about: \"I am that rich guy\",\r\n            image: \"https://pbs.twimg.com/profile_images/669103856106668033/UF3cgUk4_400x400.jpg\",\r\n            email: \"bezos@amazon.com\",\r\n            phone: \"\",\r\n            company: \"Amazon Inc\",\r\n            address: \"Washington\",\r\n        }, {\r\n            id: uuidv4(),\r\n            checked: false,\r\n            fullname: \"Vrajpal Jhala\",\r\n            about: \"Intern At ZURU Tech India pvt ltd\",\r\n            image: \"\",\r\n            email: \"vrajpaljhala@gmail.com\",\r\n            phone: \"+91 1234512345\",\r\n            company: \"ZURU Tech India\",\r\n            address: \"Navrangpura, Ahmedabad, Gujarat\",\r\n        },\r\n    ];\r\n    return (\r\n        data\r\n    )\r\n}\r\n\r\nexport default LocalData;","import React from \"react\";\r\nimport ContentLoader from \"react-content-loader\";\r\nimport { Grid, Hidden } from \"@material-ui/core\";\r\n\r\nconst MyLoader = () => (\r\n  <Grid container  style={{margin:\"16px\"}}>\r\n    <Grid item sm={11} md={12}>\r\n      <ContentLoader\r\n        speed={0.7}\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        viewBox=\"0 0 400 300\"\r\n        backgroundColor=\"#cecece\"\r\n        foregroundColor=\"#ecebeb\"\r\n      >\r\n        <circle cx=\"10\" cy=\"20\" r=\"8\" />\r\n        <rect x=\"25\" y=\"15\" rx=\"5\" ry=\"5\" width=\"90%\" height=\"10\" />\r\n        <circle cx=\"10\" cy=\"50\" r=\"8\" />\r\n        <rect x=\"25\" y=\"45\" rx=\"5\" ry=\"5\" width=\"90%\" height=\"10\" />\r\n        <circle cx=\"10\" cy=\"80\" r=\"8\" />\r\n        <rect x=\"25\" y=\"75\" rx=\"5\" ry=\"5\" width=\"90%\" height=\"10\" />\r\n        <circle cx=\"10\" cy=\"110\" r=\"8\" />\r\n        <rect x=\"25\" y=\"105\" rx=\"5\" ry=\"5\" width=\"90%\" height=\"10\" />\r\n        <circle cx=\"11\" cy=\"140\" r=\"8\" />\r\n        <rect x=\"25\" y=\"135\" rx=\"5\" ry=\"5\" width=\"90%\" height=\"10\" />\r\n        <circle cx=\"11\" cy=\"170\" r=\"8\" />\r\n        <rect x=\"25\" y=\"165\" rx=\"5\" ry=\"5\" width=\"90%\" height=\"10\" />\r\n        <circle cx=\"11\" cy=\"200\" r=\"8\" />\r\n        <rect x=\"25\" y=\"195\" rx=\"5\" ry=\"5\" width=\"90%\" height=\"10\" />\r\n        <circle cx=\"11\" cy=\"230\" r=\"8\" />\r\n        <rect x=\"25\" y=\"225\" rx=\"5\" ry=\"5\" width=\"90%\" height=\"10\" />\r\n        <circle cx=\"11\" cy=\"260\" r=\"8\" />\r\n        <rect x=\"25\" y=\"255\" rx=\"5\" ry=\"5\" width=\"90%\" height=\"10\" />\r\n        <circle cx=\"11\" cy=\"290\" r=\"8\" />\r\n        <rect x=\"25\" y=\"285\" rx=\"5\" ry=\"5\" width=\"90%\" height=\"10\" />\r\n      </ContentLoader>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default MyLoader;","import React from 'react';\r\nimport MainContent from \"./MainContent\";\r\n\r\nconst MainContentWrapper = ({ localData, objRule, setLocalData, classes, open, handleDrawerOpen, heading, error }) => {\r\n\r\n    const [data, setData] = React.useState(localData);\r\n    const changeData = (records) => setData([...records]);\r\n\r\n    return (\r\n        <MainContent\r\n            localData={localData}\r\n            setLocalData={setLocalData}\r\n            data={data}\r\n            setData={changeData}\r\n            objRule={objRule}\r\n            classes={classes}\r\n            open={open}\r\n            heading={heading}\r\n            handleDrawerOpen={handleDrawerOpen}\r\n            error={error} />);\r\n};\r\n\r\nexport default MainContentWrapper;\r\n","import React from 'react';\r\nimport MainContentWrapper from \"./MainContentWrapper\"\r\n\r\n\r\nconst MyApiWrapper = ({ apiData, objRule, classes, heading, open, handleDrawerOpen, error }) => {\r\n  const [localData, setLocalData] = React.useState(apiData);\r\n  const changeData = (records) => setLocalData([...records]);\r\n\r\n  return (\r\n    <MainContentWrapper\r\n      localData={localData}\r\n      objRule={objRule}\r\n      setLocalData={changeData}\r\n      classes={classes}\r\n      open={open}\r\n      handleDrawerOpen={handleDrawerOpen}\r\n      heading={heading}\r\n      error={error} />);\r\n}\r\n\r\nexport default MyApiWrapper;","import React from \"react\";\r\nimport MyLoader from \"./MyLoader\";\r\nimport MyApiWrapper from './MyApiWrapper';\r\nimport { createApolloFetch } from \"apollo-fetch\";\r\n\r\n// const query = `{\r\n//   jobes {\r\n//     id\r\n//     mission_name\r\n//     rocket {\r\n//       rocket_name\r\n//     }\r\n//     job_success \r\n//     job_year\r\n//     job_site {\r\n//       site_name\r\n//     }\r\n//     links {\r\n//       flickr_images\r\n//     }\r\n//   }\r\n// }`;\r\n\r\n// const uri = \"https://api.spacex.land/graphql/\";\r\n\r\nconst query = `{\r\n    jobs {\r\n      id\r\n      title\r\n      userEmail\r\n      postedAt\r\n      locationNames\r\n      isFeatured\r\n      applyUrl\r\n      company{\r\n        name\r\n        logoUrl\r\n      }\r\n    }\r\n}`;\r\nconst uri = \"https://api.graphql.jobs/\";\r\n\r\nlet localData = {};\r\nlet error = {}\r\n\r\nconst Jobs = ({ classes, handleDrawerOpen, open }) => {\r\n  console.log(\"rendered Jobs\");\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  const heading = {\r\n    keyword: \"Job\",\r\n    title: \"graphQLjobs\",\r\n    subtitle: \"Explore Jobs\",\r\n    icon: \"fa fa-suitcase fa-3x icon-gradient\"\r\n  };\r\n\r\n  //Mentioning Rules Editable Fields to be displayed\r\n  let objRule = {\r\n    title: { fieldname: \"title\", label: \"Job Title\", required: true, min: 1, max: 32, type: \"title\", error: \"\", placeholder: \"Job Title\" },\r\n    userEmail: { fieldname: \"userEmail\", label: \"Email\", required: true, min: 6, max: 100, type: \"email\", error: \"\", placeholder: \"mail@xyz.com\", unique: true },\r\n    locationNames: { fieldname: \"locationNames\", label: \"Location\", required: false, min: 2, max: 32, type: \"text\", error: \"\", placeholder: \"Some Place\" },\r\n    isFeatured: { fieldname: \"isFeatured\", label: \"is Featured\", required: false, min: 2, max: 5, type: \"boolean\", error: \"\", placeholder: \"True/False\" },\r\n    applyUrl: { fieldname: \"applyUrl\", label: \"ApplyLink\", required: false, min: 4, max: 5, type: \"description\", error: \"\", placeholder: \"https://www.joburl.com\" },\r\n    company: { fieldname: \"company\", label: \"Company\", required: false, min: 2, max: 32, type: \"text\", error: \"\", placeholder: \"ZURU Tech pvt\" },\r\n    logoUrl: { fieldname: \"logoUrl\", label: \"Image\", required: false, min: 2, max: 32, type: \"image\", error: \"\", placeholder: \"Set Image\" }\r\n  };\r\n\r\n\r\n  //Mentioning Rules Editable Fields to be displayed\r\n  // let objRule = {\r\n  //   mission_name: { fieldname: \"mission_name\", label: \"Mission Name\", required: true, min: 1, max: 32, type: \"title\", error: \"\", placeholder: \"Mission Name\" },\r\n  //   id: { fieldname: \"id\", label: \"job id\", required: true, min: 6, max: 36, type: \"text\", error: \"\", placeholder: \"XXX-XXX\" },\r\n  //   rocket: { fieldname: \"rocket\", label: \"Rocket\", required: false, min: 4, max: 20, type: \"text\", error: \"\", placeholder: \"Rocket Name\" },\r\n  //   job_success: { fieldname: \"job_success\", label: \"Success Status\", required: false, min: 3, max: 5, type: \"text\", error: \"\", placeholder: \"true\" },\r\n  //   job_year: { fieldname: \"job_year\", label: \"job Year\", required: false, min: 4, max: 4, type: \"text\", error: \"\", placeholder: \"2020\" },\r\n  //   job_site: { fieldname: \"job_site\", label: \"job Site\", required: false, min: 3, max: 50, type: \"text\", error: \"\", placeholder: \"Someplace\" },\r\n  //   links: { fieldname: \"links\", label: \"Image\", required: false, min: 0, max: 1, type: \"image\", error: \"\" },\r\n  // };\r\n\r\n\r\n  async function fetchApiData(uri) {\r\n    try {\r\n      let data = [];\r\n      const apolloFetch = createApolloFetch({ uri });\r\n      const res = await apolloFetch({ query })\r\n      if (res && res.data) {\r\n        data = res.data.jobs;\r\n        data.forEach(job => {\r\n          job.checked = false;\r\n          job.company = job.company.name;\r\n          job.logoUrl = job.company.logoUrl || \"\";\r\n        });\r\n      }\r\n      return data;\r\n    } catch (e) { console.error(\"Err occured :\", e); error = e; }\r\n  }\r\n\r\n  (async function () {\r\n    try {\r\n      const fetchData = await fetchApiData(uri);\r\n      localData = fetchData;\r\n      console.log(\"localData After Fetch:\");\r\n      console.log(localData);\r\n      setLoading(false);\r\n    } catch (e) { console.error(\"Err occured :\", e); error = e; }\r\n  })()\r\n\r\n  return (loading) ? (<div style={{ transform: \"scale(1.7) translateX(22%) translateY(22%)\" }}><br /><br /><br /><MyLoader /></div>)\r\n    : <MyApiWrapper apiData={localData} objRule={objRule} classes={classes} open={open} handleDrawerOpen={handleDrawerOpen} heading={heading} error={error} />;\r\n};\r\n\r\nexport default Jobs;\r\n","import React from 'react';\r\nimport axios from \"axios\";\r\nimport MyLoader from \"./MyLoader\";\r\nimport MyApiWrapper from './MyApiWrapper';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n// const uri = \"https://api.github.com/search/users?q=a&per_page=100\";\r\nconst uri = \"https://api.covid19api.com/summary\";\r\nlet localData = {};\r\nlet error = {}\r\n\r\nconst Covid = ({ classes, handleDrawerOpen, open }) => {\r\n\r\n    console.log(\"rendered Covid\");\r\n    const [loading, setLoading] = React.useState(true);\r\n    const heading = {\r\n        keyword: \"Country\",\r\n        title: \"Covid19Global\",\r\n        subtitle: \"Covid19 Global stats\",\r\n        icon: \"fa fa-bug fa-3x icon-gradient\"\r\n    };\r\n\r\n    //Mentioning Rules Editable Fields to be displayed\r\n    let objRule = {\r\n        Country: { fieldname: \"Country\", label: \"Country\", required: true, min: 3, max: 32, type: \"title\", error: \"\", placeholder: \"New York\" },\r\n        CountryCode: { fieldname: \"CountryCode\", label: \"Country Code\", required: true, min: 2, max: 3, type: \"text\", error: \"\", placeholder: \"XY\", unique: true },\r\n        NewConfirmed: { fieldname: \"NewConfirmed\", label: \"New Confirmed\", required: false, min: 1, max: 9, type: \"number\", error: \"\", placeholder: \"99\" },\r\n        TotalConfirmed: { fieldname: \"TotalConfirmed\", label: \"Total Confirmed\", required: false, min: 1, max: 9, type: \"number\", error: \"\", placeholder: \"99\" },\r\n        TotalDeaths: { fieldname: \"TotalDeaths\", label: \"Total Deaths\", required: false, min: 1, max: 9, type: \"number\", error: \"\", placeholder: \"99\" },\r\n        TotalRecovered: { fieldname: \"TotalRecovered\", label: \"Total Recovered\", required: false, min: 1, max: 9, type: \"number\", error: \"\", placeholder: \"99\" },\r\n        Date: { fieldname: \"Date\", label: \"Last Update\", required: false, min: 4, max: 50, type: \"description\", error: \"\", placeholder: \"Date - Time\" },\r\n        // login: { fieldname: \"login\", label: \"UserName\", required: true, min: 6, max: 32, type: \"title\", error: \"\", placeholder: \"ABC-123\" },\r\n        // id: { fieldname: \"id\", label: \"User ID\", required: true, min: 6, max: 36, type: \"text\", error: \"\", placeholder: \"12345\" },\r\n        // html_url: { fieldname: \"html_url\", label: \"Profile\", required: false, min: 4, max: 50, type: \"text\", error: \"\", placeholder: \"Someplace\" },\r\n        // avatar_url: { fieldname: \"avatar_url\", label: \"Image\", required: false, min: 0, max: 1, type: \"image\", error: \"\" },\r\n    };\r\n\r\n    async function fetchApiData(uri) {\r\n        try {\r\n            let data = [];\r\n            const res = await axios.get(uri).then((response) => {\r\n                return response;\r\n            }).catch((e) => { console.log(\"Err occured :\", e); error = e; });\r\n\r\n            if (res && res.data) {\r\n                data = res.data.Countries;\r\n                data.forEach(country => {\r\n                    country.checked = false;\r\n                    if (!country.id) { country.id = uuidv4(); }\r\n                });\r\n            }\r\n            return data;\r\n        } catch (e) { console.log(\"Err occured :\", e); error = e; }\r\n    }\r\n\r\n    (async function () {\r\n        try {\r\n            const fetchData = await fetchApiData(uri);\r\n            localData = fetchData;\r\n            console.log(\"localData After Fetch:\");\r\n            console.log(localData);\r\n            setLoading(false);\r\n        } catch (e) { console.log(\"Err occured :\", e); error = e; }\r\n    })()\r\n\r\n    return (loading) ? (<div style={{ transform: \"scale(1.7) translateX(22%) translateY(22%)\" }}><br /><br /><br /><MyLoader /></div>)\r\n        : <MyApiWrapper apiData={localData} objRule={objRule} classes={classes} heading={heading} open={open} handleDrawerOpen={handleDrawerOpen} error={error} />;\r\n};\r\n\r\nexport default Covid;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport CommonStyle from \"./CommonStyle\";\r\nimport { IconButton, AppBar, Toolbar } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport { ClearAllRounded } from \"@material-ui/icons\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport MyContacts from \"./MyContacts\";\r\nimport GraphqlData from \"../data/GraphqlData\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport Jobs from \"./Jobs\";\r\nimport Covid from \"./Covid\";\r\n\r\n// const client = new ApolloClient({\r\n//     uri: \"https://api.spacex.land/graphql/\"\r\n// });\r\n\r\nconst Wrapper = () => {\r\n\r\n    const theme = useTheme();\r\n    const classes = CommonStyle(theme);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => setOpen(true);\r\n\r\n    const handleDrawerClose = () => setOpen(false);\r\n\r\n    const handleDrawerToggle = () => setOpen(!open);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Router>\r\n                {/* <CssBaseline /> */}\r\n                <SideDrawer open={open} handleDrawerOpen={handleDrawerOpen} handleDrawerClose={handleDrawerClose} />\r\n                <Switch>\r\n\r\n                    <Route exact path={[\"/\", \"/contact-app\"]} >\r\n                        <MyContacts classes={classes} open={open} handleDrawerOpen={handleDrawerToggle} />\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/contact-app/jobs\" >\r\n                        {/* <ApolloProvider client={client}>\r\n                            <GraphqlData classes={classes} open={open} limit={10}/>\r\n                        </ApolloProvider> */}\r\n                        <Jobs classes={classes} open={open} handleDrawerOpen={handleDrawerToggle} />\r\n                    </Route>\r\n                    <Route exact path=\"/contact-app/covid19\" >\r\n                        <Covid classes={classes} open={open} handleDrawerOpen={handleDrawerToggle} />\r\n                    </Route>\r\n                </Switch>\r\n\r\n\r\n\r\n\r\n            </Router>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Wrapper;\r\n","import React from 'react';\nimport Wrapper from './components/Wrapper';\nimport './App.css';\n\nfunction App() {\n  return (\n\n    <div className=\"App\" style={{ fontFamily: `\"Lucida Sans Unicode\", \"Lucida Grande\", \"sans-serif\"` }}>\n      <Wrapper />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}