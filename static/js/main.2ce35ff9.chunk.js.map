{"version":3,"sources":["data/LocalData.js","components/CommonStyle.js","components/DetailCard.js","components/ContactList.js","components/SearchBar.js","components/SideDrawer.js","components/Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["LocalData","id","checked","fullname","about","image","email","phone","company","address","CommonStyle","theme","styles","root","display","large","width","spacing","height","marginRight","breakpoints","down","larger","margin","backdrop","zIndex","drawer","color","active","boxShadow","background","button","minWidth","maxWidth","textTransform","fontSize","whiteSpace","minHeight","borderRadius","Checkbox","btnEdit","position","border","right","basicInfo","flex","overflow","overflowWrap","contactField","top","padding","detailCard","textAlign","up","marginLeft","searchbar","input","textWhite","bgSilver","bgGradient","fontWeight","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","flexShrink","drawerOpen","overflowX","drawerClose","toolbar","alignItems","justifyContent","paddingLeft","mixins","mainContent","removePadding","innerContent","content","flexGrow","makeStyles","useStyles","stringToColor","string","hash","i","length","charCodeAt","toString","substr","DetailCard","contact","editable","handleEdit","handleSave","useTheme","classes","React","useState","state","setState","handleChangeInput","e","console","log","target","name","value","useEffect","undefined","Grid","container","item","xs","justify","className","style","Fab","size","onClick","Edit","Avatar","src","split","map","n","lineHeight","Input","disableUnderline","type","onChange","disabled","data","variant","Save","ContactList","props","selectAll","setSelectAll","newContactName","setNewContactName","every","List","disablePadding","ListItem","IconButton","edge","wannaCreateNew","handleSelectAll","IndeterminateCheckBox","AddBox","ListItemText","primary","Hidden","smDown","ListItemAvatar","addNewContact","reduce","max","next","Math","trim","DoneOutline","TextField","required","label","InputProps","startAdornment","InputAdornment","AccountCircle","onKeyDown","keyCode","placeholder","autoFocus","ListItemSecondaryAction","handleAdd","Close","index","Fragment","key","selected","activeContact","handleContactClick","dense","ListItemIcon","disableRipple","handleCheckedChange","stopPropagation","alt","secondary","mdUp","lgUp","SearchBar","lg","clsx","InputBase","search","aria-label","Search","Button","fullWidth","Add","handleDelete","some","Delete","SideDrawer","open","Drawer","paper","handleDrawerClose","ChevronLeft","handleDrawerOpen","ClearAllRounded","PersonOutline","Twitter","GitHub","localData","Wrapper","setOpen","setEditable","setActiveContact","setData","setSearch","setWannaCreateNew","temp","forEach","status","filterData","filter","toLowerCase","includes","searchFilter","dir","AppBar","Toolbar","smUp","Backdrop","sm","md","Typography","component","xsDown","clickedContact","changedContact","push","mdDown","App","fontFamily","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"0WA4DeA,EA3DG,WAsDd,MArDW,CACP,CACIC,GAAI,EACJC,SAAS,EACTC,SAAU,aACVC,MAAO,wBACPC,MAAO,GACPC,MAAO,kBACPC,MAAO,aACPC,QAAS,eACTC,QAAS,eACV,CACCR,GAAI,EACJC,SAAS,EACTC,SAAU,eACVC,MAAO,oCACPC,MAAO,iBACPC,MAAO,mBACPC,MAAO,iBACPC,QAAS,kBACTC,QAAS,kCACV,CACCR,GAAI,EACJC,SAAS,EACTC,SAAU,YACVC,MAAO,qBACPC,MAAO,oGACPC,MAAO,iBACPC,MAAO,eACPC,QAAS,YACTC,QAAS,qBACV,CACCR,GAAI,EACJC,SAAS,EACTC,SAAU,aACVC,MAAO,qBACPC,MAAO,6JACPC,MAAO,mBACPC,MAAO,GACPC,QAAS,aACTC,QAAS,cACV,CACCR,GAAI,EACJC,SAAS,EACTC,SAAU,gBACVC,MAAO,oCACPC,MAAO,GACPC,MAAO,yBACPC,MAAO,iBACPC,QAAS,kBACTC,QAAS,qC,8DC4JNC,EA9MK,SAACC,GAAW,IAAD,EAIrBC,EACN,CACIC,KAAM,CACFC,QAAS,QAEbC,MAAM,aACFC,MAAOL,EAAMM,QAAQ,GACrBC,OAAQP,EAAMM,QAAQ,GACtBE,YAAaR,EAAMM,QAAQ,IAC1BN,EAAMS,YAAYC,KAAK,MAAQ,CAC5BF,YAAa,IAGrBG,OAAQ,CACJN,MAAOL,EAAMM,QAAQ,IACrBC,OAAQP,EAAMM,QAAQ,IACtBM,OAAQZ,EAAMM,QAAQ,IAE1BO,SAAS,eACJb,EAAMS,YAAYC,KAAK,MAAQ,CAC5BI,OAAQd,EAAMc,OAAOC,OAAS,EAC9BC,MAAO,UAGfC,OAAQ,CACJC,UAAW,wBACXC,WAAY,wBACZH,MAAO,uBAEXI,OAAO,aACHC,SAAU,OACVC,SAAU,QACVC,cAAe,OACfC,SAAU,OACVC,WAAY,SACZC,UAAW,QACV1B,EAAMS,YAAYC,KAAK,MAAQ,CAC5BW,SAAU,OACVC,SAAU,OACVI,UAAW,OACXC,aAAc,QAGtBC,SAAS,eACJ5B,EAAMS,YAAYC,KAAK,MAAQ,CAC5BW,SAAU,SAGlBQ,QAAS,CACLb,MAAO,QACPc,SAAU,WACVC,OAAQ,kBACRC,MAAO,MAEXC,UAAU,aACNC,KAAM,YAKLlC,EAAMS,YAAYC,KAAK,KAAM,CAC1ByB,SAAS,SACTb,SAAS,QACTc,aAAa,aAGrBC,aAAc,CACVlB,WAAY,cACZW,SAAU,WACVQ,IAAK,OACLtB,MAAO,mBACPuB,QAAS,UACTf,SAAU,UAEdgB,WAAW,aACPC,UAAW,OACXF,QAAS,QACRvC,EAAMS,YAAYiC,GAAG,MAAQ,CAC1BC,WAAY,SAGpBC,UAAW,CACPzB,WAAY,qBACZhB,QAAS,OACTwB,aAAc,GACdY,QAAS,WACTlB,SAAU,SAEdwB,MAAO,CACHF,WAAY3C,EAAMM,QAAQ,GAC1B4B,KAAM,GAGVY,UAAW,CACP9B,MAAO,yBAEX+B,SAAU,CACN5B,WAAY,qBACZH,MAAO,sBAEXgC,WAAY,CACR7B,WAAY,mDACZH,MAAO,QACPiC,WAAY,QAGhBC,OAAQ,CACJC,WAAYnD,EAAMoD,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQtD,EAAMoD,YAAYE,OAAOC,MACjCC,SAAUxD,EAAMoD,YAAYI,SAASC,gBAEzCtC,WAAY,SAGhBuC,YAAa,CACTf,WArHY,IAsHZtC,MAAM,eAAD,OAtHO,IAsHP,OACL8C,WAAYnD,EAAMoD,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQtD,EAAMoD,YAAYE,OAAOC,MACjCC,SAAUxD,EAAMoD,YAAYI,SAASG,kBAG7CC,WAAY,CACRpD,YAAa,IAEjBqD,KAAM,CACF1D,QAAS,QAEbY,OAAQ,CACJV,MAnIY,IAoIZyD,WAAY,EACZrC,WAAY,SACZN,WAAY,oDAGhB4C,WAAY,CACR1D,MA1IY,IA2IZ8C,WAAYnD,EAAMoD,YAAYC,OAAO,QAAS,CAC1CC,OAAQtD,EAAMoD,YAAYE,OAAOC,MACjCC,SAAUxD,EAAMoD,YAAYI,SAASG,iBAEzCK,UAAW,UAEfC,YAAY,aACRd,WAAYnD,EAAMoD,YAAYC,OAAO,QAAS,CAC1CC,OAAQtD,EAAMoD,YAAYE,OAAOC,MACjCC,SAAUxD,EAAMoD,YAAYI,SAASC,gBAEzCO,UAAW,SACX3D,MAAO,EACP0B,OAAQ,GACP/B,EAAMS,YAAYiC,GAAG,MAAQ,CAC1BrC,MAAOL,EAAMM,QAAQ,GAAK,IAIlC4D,QAAQ,aACJ/D,QAAS,OACTgE,WAAY,SACZC,eAAgB,WAChBC,YAAa,OACb9B,QAASvC,EAAMM,QAAQ,EAAG,IACvBN,EAAMsE,OAAOJ,SAEpBK,YAAY,eACPvE,EAAMS,YAAYC,KAAK,MAAQ,CAC5BoB,SAAU,aAGlB0C,cAAc,eACTxE,EAAMS,YAAYC,KAAK,MAAQ,CAC5B6B,QAAS,wBAGjBkC,cAAY,GACRlC,QAAS,YADD,cAEPvC,EAAMS,YAAYiC,GAAG,MAAQ,CAC1B2B,YAAa,SAHT,cAKPrE,EAAMS,YAAYC,KAAK,MAAQ,CAC5B6B,QAAS,kBANL,GASZmC,QAAQ,aACJC,SAAU,EACVpC,QAASvC,EAAMM,QAAQ,GACvBM,OAAQ,QACPZ,EAAMS,YAAYC,KAAK,MAAQ,CAC5BE,OAAQ,SAUpB,OAJkBgE,aAAW,SAAA5E,GAAK,OAAKC,IACvB4E,IChMpB,SAASC,EAAcC,GACnB,IAAIC,EAAO,EAAGC,EAAI,EAAGjE,EAAQ,IAC7B,IAAKiE,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,GAAK,EAChCD,EAAOD,EAAOI,WAAWF,KAAOD,GAAQ,GAAKA,GAEjD,IAAKC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAEvBjE,GAAS,aADMgE,GAAa,EAAJC,EAAU,KACdG,SAAS,KAAMC,QAAQ,GAE/C,OAAOrE,EAGX,IAyFesE,EAzFI,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAC3C1F,EAAQ2F,cACRC,EAAU7F,EAAYC,GAFsC,EAGxC6F,IAAMC,SAASP,GAHyB,mBAG3DQ,EAH2D,KAGpDC,EAHoD,KAK5DC,EAAoB,SAACC,GACvBC,QAAQC,IAAIL,GACZC,EAAS,eACFD,EADC,eAEHG,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,UAKlC,OAFAV,IAAMW,WAAU,WAAQL,QAAQC,IAAIb,EAAQ/F,kBAGzBiH,IAAflB,EAAQjG,IAAmC,OAAfiG,EAAQjG,GAChC,kBAACoH,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,GAAIC,QAAQ,SAASC,UAAS,UAAKnB,EAAQpD,WAAb,YAA2BoD,EAAQ7C,WAEpFyC,EAGY,qCAFV,kBAACkB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIG,MAAO,CAAEhG,MAAO,MAAOyB,UAAW,UACjD,kBAACwE,EAAA,EAAD,CAAKC,KAAK,SAASH,UAAWnB,EAAQ/D,QAASsF,QAAS,kBAAM1B,MAAc,kBAAC2B,EAAA,EAAD,QAGpF,kBAACV,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACtG,QAAS,GAC1B,kBAACoG,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,GAAIC,QAAQ,UACjC,kBAACJ,EAAA,EAAD,CAAME,MAAI,GACN,kBAACS,EAAA,EAAD,CAAQC,IAAK/B,EAAQ7F,MAAOqH,UAAWnB,EAAQjF,OAAQqG,MAAO,CAAE7F,WAAY2D,EAAcS,EAAQ/F,YAC7F+F,EAAQ/F,SAAS+H,MAAM,KAAKC,KAAI,SAACC,EAAGxC,GAAJ,OAAUA,EAAI,EAAIwC,EAAE,GAAK,QAGlE,kBAACf,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACI,MAAO,CAAEvE,UAAW,WACrC,kBAACiE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,wBAAIG,MAAO,CAACU,WAAY,EAAG1G,MAAO,QAASM,SAAS,OAAOc,aAAa,aACnEmD,EAAQ/F,WAGjB,kBAACkH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIG,MAAO,CAAEtF,UAAW,UAClC6D,EAAQ9F,SAIrB,kBAACiH,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,IACrB,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,aACA,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGE,UAAU,cAExB,kBAACY,EAAA,EAAD,CAAOC,kBAAmBpC,EAAUqC,KAAK,OAAOd,UAAWnB,EAAQvD,aAC/DkE,MAA6ChB,EAAQ/F,SAAU8G,KAAK,WAAWwB,SAAU7B,EACzF8B,UAAWvC,MAKvB,kBAACkB,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,IACrB,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACA,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGE,UAAU,cAExB,kBAACY,EAAA,EAAD,CAAOC,kBAAmBpC,EAAUqC,KAAK,OAAOd,UAAWnB,EAAQvD,aAC/DkE,MAAuChB,EAAQ5F,MAAO2G,KAAK,QAAQwB,SAAU7B,EAC7E8B,UAAWvC,MAKvB,kBAACkB,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,IACrB,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACA,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGE,UAAU,cAhFpD,SAAiBiB,GACb,QAAavB,IAATuB,EAAoB,OAAOA,EAAK9C,OAAS,EAAI8C,EAAO,0BA+EM7H,CAAQoF,EAAQ3F,SAE9D,kBAAC8G,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,IACrB,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,WACA,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGE,UAAU,cAAcxB,EAAQ1F,UAEtD,kBAAC6G,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,IACrB,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,WACA,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGE,UAAU,cAAcxB,EAAQzF,WAIzD0F,EAAW,kBAACkB,EAAA,EAAD,CAAME,MAAI,EAACI,MAAO,CAAEpG,OAAQ,kBACpC,kBAACqG,EAAA,EAAD,CAAKgB,QAAQ,WAAWf,KAAK,SAASlG,MAAM,UAAUmG,QAAS,kBAAMzB,EAAWK,KAAQ,kBAACmC,EAAA,EAAD,MAAxF,eACM,sCAIZ,sC,8HC7Fd,SAASpD,EAAcC,GACnB,IAAIC,EAAO,EAAGC,EAAI,EAAGjE,EAAQ,IAC7B,IAAKiE,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,GAAK,EAChCD,EAAOD,EAAOI,WAAWF,KAAOD,GAAQ,GAAKA,GAEjD,IAAKC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAEvBjE,GAAS,aADMgE,GAAa,EAAJC,EAAU,KACdG,SAAS,KAAMC,QAAQ,GAE/C,OAAOrE,EAEX,IA+GemH,EA/GK,SAACC,GACjB,IAAMpI,EAAQ2F,cACRC,EAAU7F,EAAYC,GAFD,EAGO6F,IAAMC,UAAS,GAHtB,mBAGpBuC,EAHoB,KAGTC,EAHS,OAIiBzC,IAAMC,SAAS,IAJhC,mBAIpByC,EAJoB,KAIJC,EAJI,KAiB3B,OADA3C,IAAMW,WAAU,WAAQ8B,EAAaF,EAAMJ,KAAKS,OAAM,SAAAlD,GAAO,OAAIA,EAAQhG,eAErE,kBAACmJ,EAAA,EAAD,CAAM1B,MAAO,CAAErC,SAAU,GAAKgE,gBAAgB,GAC1C,kBAACC,EAAA,EAAD,CAAU7B,UAAU,aAChB,kBAAC8B,EAAA,EAAD,CAAYC,KAAK,QAAQf,SAAUK,EAAMW,eAAgB5B,QAAS,WAAQiB,EAAMY,iBAAiBX,GAAYC,GAAcD,KACtHA,EAAY,kBAACY,EAAA,EAAD,MAA4B,kBAACC,EAAA,EAAD,OAE7C,kBAACC,EAAA,EAAD,CAAcC,QAAQ,aAAapC,MAAO,CAAErE,WAAY,UACxD,kBAAC0G,EAAA,EAAD,CAAQC,QAAM,GAAd,IAAgB,kBAACH,EAAA,EAAD,CAAcC,QAAQ,QAAQpC,MAAO,CAAE7G,QAAS,OAAQiE,eAAgB,YAAxF,MAGAgE,EAAMW,eACF,kBAACH,EAAA,EAAD,KACI,kBAACW,EAAA,EAAD,KACI,kBAACtC,EAAA,EAAD,CAAKjG,MAAM,UAAUkG,KAAK,SACtBC,QAAS,WACLiB,EAAMoB,cAAc,CAChBlK,GAAI8I,EAAMJ,KAAK9C,OAASkD,EAAMJ,KAAKyB,QAAO,SAACC,EAAKC,GAAN,OAAeC,KAAKF,IAAIA,EAAKC,EAAKrK,MAAK8I,EAAMJ,KAAK,GAAG1I,IAAM,EAAI8I,EAAMJ,KAAK9C,OACpH1F,SAAU+I,EACVhJ,SAAS,IAEbiJ,EAAkB,KAEtBT,UAAWQ,EAAesB,OAAO3E,QAEjC,kBAAC4E,EAAA,EAAD,QAIR,kBAACX,EAAA,EAAD,CAAcC,QACV,kBAACW,EAAA,EAAD,aAAWC,UAAQ,EAACzD,MAAOgC,EAAgB0B,MAAM,YAC7CC,WAAY,CACRC,eACI,kBAACC,EAAA,EAAD,CAAgBtI,SAAS,SACrB,kBAACuI,EAAA,EAAD,QAIZvC,SAjDL,SAAC5B,GAAQsC,EAAkBtC,EAAEG,OAAOE,QAkD/B+D,UAjDR,SAACpE,GACC,KAAdA,EAAEqE,SAAkBhC,EAAesB,OAAO3E,SAC1CkD,EAAMoB,cAAc,CAChBlK,GAAI8I,EAAMJ,KAAK9C,OAASkD,EAAMJ,KAAKyB,QAAO,SAACC,EAAKC,GAAN,OAAeC,KAAKF,IAAIA,EAAKC,EAAKrK,MAAK8I,EAAMJ,KAAK,GAAG1I,IAAM,EAAI8I,EAAMJ,KAAK9C,OACpH1F,SAAU+I,EACVhJ,SAAS,IAEbiJ,EAAkB,MA2CEgC,YAAY,eACZC,WAAS,GAXb,gBAaFzD,MAAO,CAAEpG,OAAQ,eACnB,kBAAC8J,EAAA,EAAD,KACI,kBAACzD,EAAA,EAAD,CAAKjG,MAAM,YAAYkG,KAAK,SAASC,QAAS,kBAAMiB,EAAMuC,WAAU,KAAQ,kBAACC,EAAA,EAAD,SAGlF,qCAGNxC,EAAMJ,KAAK9C,OACPkD,EAAMJ,KAAKR,KAAI,SAACjC,EAASsF,GAAV,OACX,kBAAC,IAAMC,SAAP,CAAgBC,IAAKF,GACjB,kBAACjC,EAAA,EAAD,CAAUoC,SAAU5C,EAAM6C,cAAc3L,KAAOiG,EAAQjG,GAAIyI,SAAUK,EAAMW,eACvE5B,QAAS,WAAQiB,EAAM8C,mBAAmB3F,IAAa4F,OAAK,EAAC/J,QAAM,EAAC2J,IAAKF,GACzE,kBAACO,EAAA,EAAD,CAAcrE,UAAWnB,EAAQhE,UAC7B,kBAACA,EAAA,EAAD,CACIkH,KAAK,QACLuC,eAAa,EACbrK,MAAM,UACNzB,QAASgG,EAAQhG,QACjB4H,QAAS,SAACjB,GAAQkC,EAAMkD,oBAAoB/F,GAAUW,EAAEqF,sBAGhE,kBAAChC,EAAA,EAAD,KACI,kBAAClC,EAAA,EAAD,CAAQC,IAAK/B,EAAQ7F,MAAO8L,IAAKjG,EAAQ/F,SAAUuH,UAAWnB,EAAQxF,MAAO4G,MAAO,CAAE7F,WAAY2D,EAAcS,EAAQ/F,YACnH+F,EAAQ/F,SAAS+H,MAAM,KAAKC,KAAI,SAACC,EAAGxC,GAAJ,OAAUA,EAAI,EAAIwC,EAAE,GAAK,QAGlE,kBAAC0B,EAAA,EAAD,CACIC,QAAS,wBAAIpC,MAAO,CAAEU,WAAY,IAAK9G,OAAQ,UAAUU,SAAS,OAAQc,aAAc,aAAgBmD,EAAQ/F,UAChHiM,UAAW,kBAACpC,EAAA,EAAD,CAAQqC,MAAI,GAAEnG,EAAQ5F,MAAQ,2BAAOqH,MAAO,CAAE/D,WAAY,QAAUsC,EAAQ5F,OAAiB,wCACxGoH,UAAWnB,EAAQ3D,YAEvB,kBAACoH,EAAA,EAAD,CAAQC,QAAM,GAAC,kBAACH,EAAA,EAAD,CAAcC,QAAS,4BAAK7D,EAAQ5F,SAAnD,MAIFyI,EAAM6C,cAAc3L,KAAOiG,EAAQjG,GACjC,kBAAC+J,EAAA,EAAD,CAAQsC,MAAI,GACR,kBAAC,EAAD,CAAYpG,QAAS6C,EAAM6C,cAAezF,SAAU4C,EAAM5C,SAAUC,WAAY2C,EAAM3C,WAAYC,WAAY0C,EAAM1C,cAC5G,yCAMtB,wBAAIsB,MAAO,CAAEhG,MAAO,QAApB,yB,4CCrEP4K,EAlDG,SAACxD,GACf,IAAMpI,EAAQ2F,cACRC,EAAU7F,EAAYC,GAE5B,OACI,kBAAC0G,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,GAAIgF,GAAI,EAAG9E,UAAW+E,YAAKlG,EAAQpB,gBACxD,kBAACkC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGgF,IAAE,GAChB,yBAAK9E,UAAWnB,EAAQhD,WAEpB,kBAACmJ,EAAA,EAAD,CACIhF,UAAWnB,EAAQ/C,MACnBgF,KAAK,SACLtB,MAAO6B,EAAM4D,OACbxB,YAAY,kBACZ1C,SAAUM,EAAMN,SAChBC,SAAUK,EAAMW,eAChB/B,MAAQoB,EAAMJ,KAAK9C,OAA4B,GAAnB,CAAElE,MAAO,SAEzC,kBAAC6H,EAAA,EAAD,CAAYhB,KAAK,SAASoE,aAAW,UACjC,kBAACC,EAAA,EAAD,SAIZ,kBAACxF,EAAA,EAAD,CAAMC,WAAS,EAACG,QAAQ,SAASF,MAAI,EAACC,GAAI,EAAGgF,IAAE,GAC3C,kBAACnF,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACT,kBAACsF,EAAA,EAAD,CACIlE,QAAQ,YACRlB,UAAW+E,YAAKlG,EAAQxE,OAAQwE,EAAQ5C,YACxCkE,KAAK,QACLkF,WAAS,EACTrE,SAAUK,EAAMW,eAChB5B,QAAS,kBAAMiB,EAAMuC,WAAU,KAClC,kBAAC0B,EAAA,EAAD,MAAO,kBAAChD,EAAA,EAAD,CAAQC,QAAM,GAAd,eAEZ,kBAAC5C,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACT,kBAACsF,EAAA,EAAD,CACIlE,QAAQ,YACRlB,UAAW+E,YAAKlG,EAAQxE,OAAQwE,EAAQ5C,YACxCkE,KAAK,QACLkF,WAAS,EACTjF,QAASiB,EAAMkE,aACfvE,UAAWK,EAAMJ,KAAKuE,MAAK,SAAA3F,GAAI,OAAIA,EAAKrH,YAAY6I,EAAMW,gBAN9D,IAOE,kBAACyD,EAAA,EAAD,MAAU,kBAACnD,EAAA,EAAD,CAAQC,QAAM,GAAd,0B,iDCsBjBmD,GA7DI,SAACrE,GAAW,IAAD,IACtBsE,EAAOtE,EAAMsE,KACX1M,EAAQ2F,cACRC,EAAU7F,EAAYC,GAC5B,OACI,kBAAC2M,EAAA,EAAD,CACI1E,QAAQ,YACRlB,UAAW+E,YAAKlG,EAAQ7E,QAAT,mBACV6E,EAAQ7B,WAAa2I,GADX,cAEV9G,EAAQ3B,aAAeyI,GAFb,IAIf9G,QAAS,CACLgH,MAAOd,YAAKlG,EAAQ7E,QAAT,mBACN6E,EAAQ7B,WAAa2I,GADf,cAEN9G,EAAQ3B,aAAeyI,GAFjB,MAMf,yBAAK3F,UAAWnB,EAAQ1B,SACpB,kBAAC2E,EAAA,EAAD,CAAY1B,QAASiB,EAAMyE,mBACvB,kBAACC,GAAA,EAAD,CAAatL,SAAS,WAE1B,kBAACqH,EAAA,EAAD,CACI7H,MAAM,UACNiL,aAAW,cACX9E,QAASiB,EAAM2E,iBACfjE,KAAK,QACL/B,UAAW+E,YAAKlG,EAAQhC,WAAYgC,EAAQ9C,UAA7B,eACV8C,EAAQ/B,KAAO6I,KAGpB,kBAACM,EAAA,EAAD,CAAiBxL,SAAS,YAIlC,kBAACkH,EAAA,EAAD,CAAM3B,UAAWnB,EAAQ9C,WACrB,kBAAC8F,EAAA,EAAD,CAAUxH,QAAM,EAAC2F,UAAWnB,EAAQ3E,QAChC,kBAACmK,EAAA,EAAD,CAAcrE,UAAWnB,EAAQ9C,WAC7B,kBAACmK,GAAA,EAAD,CAAezL,SAAS,WAE5B,kBAAC2H,EAAA,EAAD,CAAcC,QAAQ,WAE1B,kBAACR,EAAA,EAAD,CAAUxH,QAAM,GACZ,kBAACgK,EAAA,EAAD,CAAcrE,UAAWnB,EAAQ9C,WAC7B,kBAACoK,GAAA,EAAD,CAAS1L,SAAS,WAEtB,kBAAC2H,EAAA,EAAD,CAAcC,QAAQ,aAG1B,kBAACR,EAAA,EAAD,CAAUxH,QAAM,GACZ,kBAACgK,EAAA,EAAD,CAAcrE,UAAWnB,EAAQ9C,WAC7B,kBAACqK,GAAA,EAAD,CAAQ3L,SAAS,WAErB,kBAAC2H,EAAA,EAAD,CAAcC,QAAQ,eC/CtCgE,GAAY/N,IAED,SAASgO,KAEtB,IAAMrN,EAAQ2F,cACRC,EAAU7F,EAAYC,GAHI,EAKR6F,IAAMC,UAAS,GALP,mBAKzB4G,EALyB,KAKnBY,EALmB,OAMAzH,IAAMC,UAAS,GANf,mBAMzBN,EANyB,KAMf+H,EANe,OAOU1H,IAAMC,SAAS,IAPzB,mBAOzBmF,EAPyB,KAOVuC,EAPU,OAQR3H,IAAMC,SAASsH,IARP,mBAQzBpF,EARyB,KAQnByF,EARmB,OASJ5H,IAAMC,SAAS,IATX,mBASzBkG,EATyB,KASjB0B,EATiB,OAUY7H,IAAMC,UAAS,GAV3B,mBAUzBiD,EAVyB,KAUT4E,EAVS,KAY1BZ,EAAmB,WACvBO,GAAQ,IAeJtE,EAAkB,SAACX,GACvB,IAAIuF,EAAO5F,EACX4F,EAAKC,SAAQ,SAAAtI,GACXA,EAAQhG,QAAU8I,KAEpBoF,EAAQ,YAAIG,KAURjD,EAAY,WAAoB,IAAnBmD,IAAkB,yDACnCN,EAAiB,IACjBxE,GAAgB,GAChB0E,EAAU,IACVK,EAAW,IACXJ,EAAkBG,IAedC,EAAa,SAACxH,GAClBkH,EAAQ,YAAIL,GAAUY,OArDH,SAAAhC,GAAM,OAAI,SAAApF,GAAI,OAAIA,EAAKpH,SAASyO,cAAcC,SAASlC,EAAOiC,gBAqDpDE,CAAa5H,OAStCd,EAAa,WACjB8H,GAAY,IAGR7H,EAAa,SAACH,GAClBY,QAAQiI,IAAI7I,GACZgI,GAAY,IAOd,OAJA1H,IAAMW,WAAU,WACdL,QAAQC,IAAI,eAIZ,yBAAKW,UAAWnB,EAAQ1F,MAEtB,kBAAC,GAAD,CAAYwM,KAAMA,EAAMK,iBAAkBA,EAAkBF,kBAzEtC,WACxBS,GAAQ,MAsER,IAKE,kBAACe,EAAA,EAAD,CAAQtH,UAAW+E,YAAKlG,EAAQ1C,OAAT,eAAoB0C,EAAQlC,YAAcgJ,KAC/D,kBAAC4B,EAAA,EAAD,KACE,kBAACzF,EAAA,EAAD,CACEoD,aAAW,cACX9E,QAAS4F,EACTjE,KAAK,QACL/B,UAAW+E,YAAKlG,EAAQhC,WAAT,eACZgC,EAAQ/B,KAAO6I,KAGlB,kBAACM,EAAA,EAAD,CAAiBxL,SAAS,aAIhC,kBAAC6H,EAAA,EAAD,CAAQkF,MAAI,GACV,kBAACC,EAAA,EAAD,CAAUzH,UAAWnB,EAAQ/E,SAAU6L,KAAMA,EAAMvF,QAAS,kBAAMmG,GAAQ,OAG5E,0BAAMvG,UAAW+E,YAAK,eAAGlG,EAAQrB,YAAcmI,GAAQ9G,EAAQlB,UAC7D,yBAAKqC,UAAWnB,EAAQ1B,UACxB,kBAACwC,EAAA,EAAD,CAAMC,WAAS,EAACrG,QAAS,GAEvB,kBAACoG,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,GAAI1C,WAAW,UACtC,kBAACuC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG4H,GAAI,EAAGC,GAAI,EAAG1H,MAAO,CAAE1F,SAAU,OAAQd,YAAa,SACtE,uBAAGuG,UAAU,+DAEf,kBAACL,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG4H,GAAI,GAAIC,GAAI,GAAI3H,UAAU,aAC1C,kBAACL,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC8H,EAAA,EAAD,CAAY1G,QAAQ,KAAK2G,UAAU,QAAnC,cAGF,kBAACvF,EAAA,EAAD,CAAQwF,QAAM,GACZ,kBAACnI,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAAC8H,EAAA,EAAD,CAAY1G,QAAQ,YAAY2G,UAAU,OAAO7H,UAAU,eAA3D,gCAMR,kBAACL,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,GAAIC,QAAQ,UAEnC,kBAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,GAAIvG,QAAS,EAAGyG,UAAWnB,EAAQnB,cAG1D,kBAAC,EAAD,CAAWuD,KAAMA,EAAMgE,OAAQA,EAAQlE,SArElC,SAAC5B,GAChBsH,EAAiB,IACjBO,EAAW7H,EAAEG,OAAOE,OACpBmH,EAAUxH,EAAEG,OAAOE,QAkEkD+F,aApGlD,WACnBc,GAAYA,GAAUY,QAAO,SAAApH,GAAI,OAAKA,EAAKrH,WAC3CkO,EAAQ,YAAIL,KACRnC,EAAc1L,SAAWiO,EAAiB,IAC9CE,EAAU,KAgGuF/C,UAAWA,EAAW5B,eAAgBA,IAG7H,kBAACrC,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,GAAIE,UAAW+E,YAAKlG,EAAQpB,gBACnD,kBAACkC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIgF,IAAE,GAEnB,kBAAC,EAAD,CAAa7D,KAAMA,EAAMiD,cAAeA,EAAezF,SAAUA,EAC/D0F,mBArFS,SAAC4D,GAC1BtB,EAAiBsB,GACjBvB,IAAa/H,GAAYsJ,EAAexP,KAAO2L,EAAc3L,KAmFLgM,oBA3H9B,SAACyD,GAC3B,IAAInB,EAAO5F,EACX4F,EAAKC,SAAQ,SAAAjH,GACXA,EAAKrH,QAAWqH,EAAKtH,KAAOyP,EAAezP,IAAOyP,EAAexP,QAAUqH,EAAKrH,WAElFkO,EAAQ,YAAIG,KAuHI5E,gBAAiBA,EAAiB2B,UAAWA,EAAWlF,WAAYA,EAAYC,WAAYA,EAC5FqD,eAAgBA,EAAgBS,cA9F5B,SAACjE,GACrB6H,GAAU4B,KAAKzJ,GACfkI,EAAQ,YAAIL,KACZO,GAAkB,GAClBH,EAAiBjI,OA6FL,kBAAC8D,EAAA,EAAD,CAAQ4F,QAAM,GACZ,kBAACvI,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,GAAIgF,IAAE,GAE7B,kBAAC,EAAD,CAAYtG,QAAS0F,EAAezF,SAAUA,EAAUC,WAAYA,EAAYC,WAAYA,Y,MC7JjGwJ,OARf,WACE,OACE,yBAAKnI,UAAU,MAAMC,MAAO,CAACmI,WAAW,yDACtC,kBAAC9B,GAAD,QCKc+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjK,QAAQiK,MAAMA,EAAMC,c","file":"static/js/main.2ce35ff9.chunk.js","sourcesContent":["\nconst LocalData = () => {\n    let data = [\n        {\n            id: 0,\n            checked: false,\n            fullname: \"Admin User\",\n            about: \"I am Admin Of the App\",\n            image: \"\",\n            email: \"admin@gmail.com\",\n            phone: \"1231234567\",\n            company: \"Work at Work\",\n            address: \"Gotham City\",\n        }, {\n            id: 1,\n            checked: false,\n            fullname: \"Karan Parmar\",\n            about: \"Intern At Zuru Tech India pvt ltd\",\n            image: \"brokenLink.png\",\n            email: \"k123parmar@gmail\",\n            phone: \"+91 8511918322\",\n            company: \"ZURU Tech India\",\n            address: \"Jivrajpark, Ahmedabad, Gujarat\",\n        }, {\n            id: 2,\n            checked: false,\n            fullname: \"Elon Musk\",\n            about: \"I build cool stuff\",\n            image: \"https://i1.wp.com/smestreet.in/wp-content/uploads/2018/05/Elon-Musk-Tesla.gif?fit=300%2C225&ssl=1\",\n            email: \"musk@tesla.com\",\n            phone: \"124 421 8055\",\n            company: \"Tesla Inc\",\n            address: \"Mars nearby Earth\",\n        }, {\n            id: 3,\n            checked: false,\n            fullname: \"Jeff Bezos\",\n            about: \"I am that rich guy\",\n            image: \"https://images.ladbible.com/thumbnail?type=jpeg&url=http://beta.ems.ladbiblegroup.com/s3/content/dceff8665e34a7857ec00b211f98cd9f.png&quality=70&width=720\",\n            email: \"bezos@amazon.com\",\n            phone: \"\",\n            company: \"Amazon Inc\",\n            address: \"Washington\",\n        }, {\n            id: 4,\n            checked: false,\n            fullname: \"Vrajpal Jhala\",\n            about: \"Intern At ZURU Tech India pvt ltd\",\n            image: \"\",\n            email: \"vrajpaljhala@gmail.com\",\n            phone: \"+91 1234512345\",\n            company: \"ZURU Tech India\",\n            address: \"Navrangpura, Ahmedabad, Gujarat\",\n        },\n    ];\n    return (\n        data\n    )\n}\n\nexport default LocalData\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst CommonStyle = (theme) => {\n\n    const drawerWidth = 220;\n\n    const styles =\n    {\n        root: {\n            display: \"flex\",\n        },\n        large: {\n            width: theme.spacing(6),\n            height: theme.spacing(6),\n            marginRight: theme.spacing(2),\n            [theme.breakpoints.down(\"xs\")]: {\n                marginRight: 0,\n            }\n        },\n        larger: {\n            width: theme.spacing(10),\n            height: theme.spacing(10),\n            margin: theme.spacing(2)\n        },\n        backdrop: {\n            [theme.breakpoints.down(\"sm\")]: {\n                zIndex: theme.zIndex.drawer - 1,\n                color: \"black\"\n            }\n        },\n        active: {\n            boxShadow: \"inset 5px 0 0 0 white\",\n            background: \"rgba(240,240,240,0.1)\",\n            color: \"rgba(255,255,255,1)\"\n        },\n        button: {\n            minWidth: \"80px\",\n            maxWidth: \"120px\",\n            textTransform: \"none\",\n            fontSize: \"110%\",\n            whiteSpace: \"nowrap\",\n            minHeight: \"48px\",\n            [theme.breakpoints.down(\"sm\")]: {\n                minWidth: \"44px\",\n                maxWidth: \"44px\",\n                minHeight: \"44px\",\n                borderRadius: \"50%\"\n            }\n        },\n        Checkbox: {\n            [theme.breakpoints.down(\"xs\")]: {\n                minWidth: \"24px\"\n            }\n        },\n        btnEdit: {\n            color: \"black\",\n            position: \"absolute\",\n            border: \"3px solid white\",\n            right: \"8%\"\n        },\n        basicInfo:{\n            flex: \"1 0 auto\",\n            // [theme.breakpoints.only(\"sm\")]:{\n            //     overflow:\"scroll\",\n            //     maxWidth:\"300px\"\n            // },\n            [theme.breakpoints.down(320)]:{\n                overflow:\"scroll\",\n                maxWidth:\"130px\",\n                overflowWrap:\"anywhere\"\n            }\n        },\n        contactField: {\n            background: \"transparent\",\n            position: \"relative\",\n            top: \"-4px\",\n            color: \"black !important\",\n            padding: \"0px 3px\",\n            fontSize: \"larger\",\n        },\n        detailCard: {\n            textAlign: \"left\",\n            padding: \"32px\",\n            [theme.breakpoints.up(\"lg\")]: {\n                marginLeft: \"32px\"\n            }\n        },\n        searchbar: {\n            background: \"rgb(230, 230, 230)\",\n            display: \"flex\",\n            borderRadius: 25,\n            padding: \"0 12px 0\",\n            minWidth: \"120px\"\n        },\n        input: {\n            marginLeft: theme.spacing(1),\n            flex: 1\n        },\n\n        textWhite: {\n            color: \"rgba(255,255,255,0.9)\"\n        },\n        bgSilver: {\n            background: \"rgb(230, 230, 230)\",\n            color: \"rgb(128, 128, 128)\"\n        },\n        bgGradient: {\n            background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n            color: \"white\",\n            fontWeight: \"bold\",\n        },\n\n        appBar: {\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen\n            }),\n            background: \"white\",\n\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen\n            })\n        },\n        menuButton: {\n            marginRight: 29\n        },\n        hide: {\n            display: \"none\"\n        },\n        drawer: {\n            width: drawerWidth,\n            flexShrink: 0,\n            whiteSpace: \"nowrap\",\n            background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n        },\n\n        drawerOpen: {\n            width: drawerWidth,\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen\n            }),\n            overflowX: \"hidden\"\n        },\n        drawerClose: {\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen\n            }),\n            overflowX: \"hidden\",\n            width: 0,\n            border: 0,\n            [theme.breakpoints.up('sm')]: {\n                width: theme.spacing(8) + 1,\n            },\n\n        },\n        toolbar: {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            paddingLeft: \"90px\",\n            padding: theme.spacing(0, 1),\n            ...theme.mixins.toolbar\n        },\n        mainContent: {\n            [theme.breakpoints.down('xs')]: {\n                position: \"absolute\"\n            }\n        },\n        removePadding: {\n            [theme.breakpoints.down('xs')]: {\n                padding: \"20px 0px !important\",\n            }\n        },\n        innerContent: {\n            padding: \"auto 0px\",\n            [theme.breakpoints.up('sm')]: {\n                paddingLeft: \"32px\"\n            },\n            [theme.breakpoints.down('sm')]: {\n                padding: \"auto 0px auto\",\n            }\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n            margin: \"20px\",\n            [theme.breakpoints.down('xs')]: {\n                margin: \"0px\"\n            },\n        }\n    };\n\n\n    const useStyles = makeStyles(theme => (styles));\n    const classes = useStyles();\n\n\n    return (classes);\n};\n\n\nexport default CommonStyle;\n","import React from 'react';\nimport { Edit, Save } from \"@material-ui/icons\";\nimport { Grid, Avatar, Fab, Input } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport CommonStyle from \"./CommonStyle\";\n\nfunction display(data) {\n    if (data !== undefined) return data.length > 0 ? data : \"No Informarion Provided\";\n}\nfunction stringToColor(string) {\n    let hash = 0, i = 0, color = \"#\";\n    for (i = 0; i < string.length; i += 1) {\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    for (i = 0; i < 3; i += 1) {\n        const value = (hash >> (i * 8)) & 0xff;\n        color += `00${value.toString(16)}`.substr(-2);\n    }\n    return color;\n}\n\nconst DetailCard = ({ contact, editable, handleEdit, handleSave }) => {\n    const theme = useTheme();\n    const classes = CommonStyle(theme);\n    const [state, setState] = React.useState(contact);\n\n    const handleChangeInput = (e) => {\n        console.log(state);\n        setState({\n            ...state,\n            [e.target.name]: e.target.value\n        });\n    }\n    React.useEffect(() => { console.log(contact.fullname) }\n    );\n    return (\n        contact.id !== undefined && contact.id !== null ?\n            <Grid container item xs={12} justify=\"center\" className={`${classes.detailCard} ${classes.bgSilver}`} >\n\n                {!editable ?\n                    <Grid item xs={12} style={{ color: \"red\", textAlign: \"right\" }}>\n                        <Fab size=\"medium\" className={classes.btnEdit} onClick={() => handleEdit()}><Edit /></Fab>\n                    </Grid> : <></>\n                }\n                <Grid container item spacing={3}>\n                    <Grid container item xs={12} justify=\"center\">\n                        <Grid item>\n                            <Avatar src={contact.image} className={classes.larger} style={{ background: stringToColor(contact.fullname) }}>\n                                {contact.fullname.split(\" \").map((n, i) => i < 2 ? n[0] : \"\")}\n                            </Avatar>\n                        </Grid>\n                        <Grid container item style={{ textAlign: \"center\" }}>\n                            <Grid item xs={12}>\n                                <h1 style={{lineHeight: 1, color: \"black\", maxWidth:\"100%\",overflowWrap:\"anywhere\",}}>\n                                    {contact.fullname}\n                                </h1>\n                            </Grid>\n                            <Grid item xs={12} style={{ minHeight: \"100px\" }}>\n                                {contact.about}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid container item xs={12}>\n                        <Grid item xs={4}>Full Name</Grid>\n                        <Grid item xs={8} className=\"text-black\">\n\n                            <Input disableUnderline={!editable} type=\"text\" className={classes.contactField}\n                                value={/*state.fullname ? state.fullname :*/ contact.fullname} name=\"fullname\" onChange={handleChangeInput}\n                                disabled={!editable}\n                            />\n\n                        </Grid>\n                    </Grid>\n                    <Grid container item xs={12}>\n                        <Grid item xs={4}>Email</Grid>\n                        <Grid item xs={8} className=\"text-black\">\n\n                            <Input disableUnderline={!editable} type=\"text\" className={classes.contactField}\n                                value={/*state.email ? state.email :*/ contact.email} name=\"email\" onChange={handleChangeInput}\n                                disabled={!editable}\n                            />\n\n                        </Grid>\n                    </Grid>\n                    <Grid container item xs={12}>\n                        <Grid item xs={4}>Phone</Grid>\n                        <Grid item xs={8} className=\"text-black\">{display(contact.phone)}</Grid>\n                    </Grid>\n                    <Grid container item xs={12}>\n                        <Grid item xs={4}>Company</Grid>\n                        <Grid item xs={8} className=\"text-black\">{contact.company}</Grid>\n                    </Grid>\n                    <Grid container item xs={12}>\n                        <Grid item xs={4}>Address</Grid>\n                        <Grid item xs={8} className=\"text-black\">{contact.address}</Grid>\n                    </Grid>\n                </Grid>\n\n                {editable ? <Grid item style={{ margin: \"24px auto 0px\" }}>\n                    <Fab variant=\"extended\" size=\"medium\" color=\"primary\" onClick={() => handleSave(state)}><Save /> &nbsp;Save </Fab>\n                </Grid> : <></>}\n\n\n            </Grid>\n            : <></>\n        // : <Grid container item xs={12} justify=\"center\" className={`${classes.detailCard} ${classes.bgSilver}`} >\n        //     \"Contact Details will be displayed over here\"</Grid>\n    )\n}\n\nexport default DetailCard\n","import React from 'react';\nimport {\n    List, ListItem, ListItemIcon, ListItemText, ListItemAvatar, ListItemSecondaryAction,\n    Checkbox, TextField, InputAdornment, Hidden, IconButton, Fab, Avatar,\n} from '@material-ui/core';\n\nimport { AddBox, IndeterminateCheckBox, AccountCircle, DoneOutline, Close } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport CommonStyle from \"./CommonStyle\";\nimport DetailCard from \"./DetailCard\"\n\nfunction stringToColor(string) {\n    let hash = 0, i = 0, color = \"#\";\n    for (i = 0; i < string.length; i += 1) {\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    for (i = 0; i < 3; i += 1) {\n        const value = (hash >> (i * 8)) & 0xff;\n        color += `00${value.toString(16)}`.substr(-2);\n    }\n    return color;\n}\nconst ContactList = (props) => {\n    const theme = useTheme();\n    const classes = CommonStyle(theme);\n    const [selectAll, setSelectAll] = React.useState(false);\n    const [newContactName, setNewContactName] = React.useState(\"\");\n    const handleOnChange = (e) => { setNewContactName(e.target.value); }\n    const saveContact = (e) => {\n        if (e.keyCode === 13 && newContactName.trim().length) {\n            props.addNewContact({\n                id: props.data.length ? props.data.reduce((max, next) => Math.max(max, next.id), props.data[0].id) + 1 : props.data.length,\n                fullname: newContactName,\n                checked: false\n            });\n            setNewContactName(\"\");\n        }\n    }\n    React.useEffect(() => { setSelectAll(props.data.every(contact => contact.checked)); });\n    return (\n        <List style={{ flexGrow: 1 }} disablePadding={true}>\n            <ListItem className=\"bg-silver\">\n                <IconButton edge=\"start\" disabled={props.wannaCreateNew} onClick={() => { props.handleSelectAll(!selectAll); setSelectAll(!selectAll); }}>\n                    {selectAll ? <IndeterminateCheckBox /> : <AddBox />}\n                </IconButton>\n                <ListItemText primary=\"Basic Info\" style={{ marginLeft: \"32px\" }} />\n                <Hidden smDown> <ListItemText primary=\"Email\" style={{ display: 'flex', justifyContent: \"center\" }} /> </Hidden>\n            </ListItem>\n            {\n                props.wannaCreateNew ?\n                    <ListItem>\n                        <ListItemAvatar>\n                            <Fab color=\"primary\" size=\"medium\"\n                                onClick={() => {\n                                    props.addNewContact({\n                                        id: props.data.length ? props.data.reduce((max, next) => Math.max(max, next.id), props.data[0].id) + 1 : props.data.length,\n                                        fullname: newContactName,\n                                        checked: false\n                                    });\n                                    setNewContactName(\"\");\n                                }}\n                                disabled={!newContactName.trim().length}\n                            >\n                                <DoneOutline />\n                            </Fab>\n                        </ListItemAvatar>\n\n                        <ListItemText primary={\n                            <TextField required value={newContactName} label=\"Full Name\"\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            <AccountCircle />\n                                        </InputAdornment>\n                                    )\n                                }}\n                                onChange={handleOnChange}\n                                onKeyDown={saveContact}\n                                placeholder=\"Peter Parker\"\n                                autoFocus required\n                            />\n                        } style={{ margin: \"10px 20px\" }} />\n                        <ListItemSecondaryAction>\n                            <Fab color=\"secondary\" size=\"medium\" onClick={() => props.handleAdd(false)}><Close /></Fab>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                    : <></>\n            }\n            {\n                props.data.length ?\n                    props.data.map((contact, index) =>\n                        <React.Fragment key={index}>\n                            <ListItem selected={props.activeContact.id === contact.id} disabled={props.wannaCreateNew}\n                                onClick={() => { props.handleContactClick(contact); }} dense button key={index}>\n                                <ListItemIcon className={classes.Checkbox}>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        disableRipple\n                                        color=\"primary\"\n                                        checked={contact.checked}\n                                        onClick={(e) => { props.handleCheckedChange(contact); e.stopPropagation(); }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemAvatar>\n                                    <Avatar src={contact.image} alt={contact.fullname} className={classes.large} style={{ background: stringToColor(contact.fullname) }}>\n                                        {contact.fullname.split(\" \").map((n, i) => i < 2 ? n[0] : \"\")}\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={<h3 style={{ lineHeight: \"1\", margin: \"6px 0px\",maxWidth:\"10em\", overflowWrap: \"anywhere\", }}>{contact.fullname}</h3>}\n                                    secondary={<Hidden mdUp>{contact.email ? <small style={{ fontWeight: \"600\" }}>{contact.email}</small> : <small>&nbsp;</small>}</Hidden>}\n                                    className={classes.basicInfo}\n                                />\n                                <Hidden smDown><ListItemText primary={<h4>{contact.email}</h4>} /> </Hidden>\n\n                            </ListItem>\n\n                            {(props.activeContact.id === contact.id) ?\n                                <Hidden lgUp>\n                                    <DetailCard contact={props.activeContact} editable={props.editable} handleEdit={props.handleEdit} handleSave={props.handleSave} />\n                                </Hidden> : <></>\n                            }\n\n                        </React.Fragment>\n\n                    )\n                    : <h3 style={{ color: \"red\" }}>NO CONTACTS FOUND !</h3>\n            }\n\n        </List>\n    )\n}\n\nexport default ContactList\n","import React from 'react';\nimport clsx from \"clsx\";\nimport { Grid, InputBase, Button, IconButton, Hidden } from \"@material-ui/core\";\nimport { Add, Delete, Search } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport CommonStyle from \"./CommonStyle\";\n\nconst SearchBar = (props) => {\n    const theme = useTheme();\n    const classes = CommonStyle(theme);\n\n    return (\n        <Grid container item xs={12} lg={6} className={clsx(classes.removePadding)}>\n            <Grid item xs={8} lg>\n                <div className={classes.searchbar}>\n\n                    <InputBase\n                        className={classes.input}\n                        type=\"search\"\n                        value={props.search}\n                        placeholder=\"Search Contacts\"\n                        onChange={props.onChange}\n                        disabled={props.wannaCreateNew}\n                        style={!props.data.length ? { color: \"red\" } : {}}\n                    />\n                    <IconButton type=\"submit\" aria-label=\"search\">\n                        <Search />\n                    </IconButton>\n                </div>\n            </Grid>\n            <Grid container justify=\"center\" item xs={4} lg>\n                <Grid item xs>\n                    <Button\n                        variant=\"contained\"\n                        className={clsx(classes.button, classes.bgGradient)}\n                        size=\"large\"\n                        fullWidth\n                        disabled={props.wannaCreateNew}\n                        onClick={() => props.handleAdd(true)}\n                    ><Add /><Hidden smDown> &nbsp;Add </Hidden></Button>\n                </Grid>\n                <Grid item xs>\n                    <Button\n                        variant=\"contained\"\n                        className={clsx(classes.button, classes.bgGradient)}\n                        size=\"large\"\n                        fullWidth\n                        onClick={props.handleDelete}\n                        disabled={!props.data.some(item => item.checked) || props.wannaCreateNew}\n                    > <Delete /><Hidden smDown> &nbsp;Delete &nbsp; </Hidden></Button>\n                </Grid>\n            </Grid>\n        </Grid >\n\n    )\n}\n\nexport default SearchBar\n","import React from 'react';\nimport clsx from \"clsx\";\nimport {\n    List, ListItem, ListItemIcon, ListItemText, IconButton, Drawer,\n} from '@material-ui/core';\n\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { Twitter, GitHub, PersonOutline, ClearAllRounded, ChevronLeft } from \"@material-ui/icons\";\nimport CommonStyle from \"./CommonStyle\";\n\nconst SideDrawer = (props) => {\n    let open = props.open;\n    const theme = useTheme();\n    const classes = CommonStyle(theme);\n    return (\n        <Drawer\n            variant=\"permanent\"\n            className={clsx(classes.drawer, {\n                [classes.drawerOpen]: open,\n                [classes.drawerClose]: !open\n            })}\n            classes={{\n                paper: clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open\n                })\n            }}\n        >\n            <div className={classes.toolbar}>\n                <IconButton onClick={props.handleDrawerClose}>\n                    <ChevronLeft fontSize=\"large\" />\n                </IconButton>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    onClick={props.handleDrawerOpen}\n                    edge=\"start\"\n                    className={clsx(classes.menuButton, classes.textWhite, {\n                        [classes.hide]: open\n                    })}\n                >\n                    <ClearAllRounded fontSize=\"large\" />\n                </IconButton>\n            </div>\n\n            <List className={classes.textWhite}>\n                <ListItem button className={classes.active} >\n                    <ListItemIcon className={classes.textWhite}>\n                        <PersonOutline fontSize=\"large\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Local\" />\n                </ListItem>\n                <ListItem button >\n                    <ListItemIcon className={classes.textWhite}>\n                        <Twitter fontSize=\"large\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Twitter\" />\n                </ListItem>\n\n                <ListItem button>\n                    <ListItemIcon className={classes.textWhite}>\n                        <GitHub fontSize=\"large\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"GitHub\" />\n                </ListItem>\n            </List>\n        </Drawer>\n\n    )\n}\n\nexport default SideDrawer\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport \"font-awesome/css/font-awesome.min.css\"\nimport { useTheme } from \"@material-ui/core/styles\";\nimport {\n  Backdrop, IconButton, Grid, Hidden, AppBar, Toolbar, Typography\n} from \"@material-ui/core\";\n\nimport { ClearAllRounded } from \"@material-ui/icons\";\nimport LocalData from \"../data/LocalData\";\nimport DetailCard from \"./DetailCard\";\nimport ContactList from \"./ContactList\";\nimport SearchBar from \"./SearchBar\";\nimport SideDrawer from \"./SideDrawer\";\nimport CommonStyle from \"./CommonStyle\";\n\nlet localData = LocalData();\n\nexport default function Wrapper() {\n\n  const theme = useTheme();\n  const classes = CommonStyle(theme);\n\n  const [open, setOpen] = React.useState(false);\n  const [editable, setEditable] = React.useState(false);\n  const [activeContact, setActiveContact] = React.useState({});\n  const [data, setData] = React.useState(localData);\n  const [search, setSearch] = React.useState(\"\");\n  const [wannaCreateNew, setWannaCreateNew] = React.useState(false);\n  const searchFilter = search => item => item.fullname.toLowerCase().includes(search.toLowerCase())\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleCheckedChange = (changedContact) => {\n    let temp = data;\n    temp.forEach(item => {\n      item.checked = (item.id === changedContact.id) ? !changedContact.checked : item.checked;\n    });\n    setData([...temp]);\n  }\n\n  const handleSelectAll = (selectAll) => {\n    let temp = data;\n    temp.forEach(contact => {\n      contact.checked = selectAll\n    })\n    setData([...temp]);\n  };\n\n  const handleDelete = () => {\n    localData = localData.filter(item => !item.checked);\n    setData([...localData]);\n    if (activeContact.checked) { setActiveContact({}) }\n    setSearch(\"\");\n  }\n\n  const handleAdd = (status = true) => {\n    setActiveContact({});\n    handleSelectAll(false);\n    setSearch(\"\");\n    filterData(\"\");\n    setWannaCreateNew(status);\n  }\n\n  const addNewContact = (contact) => {\n    localData.push(contact);\n    setData([...localData]);\n    setWannaCreateNew(false);\n    setActiveContact(contact)\n  }\n\n  const handleContactClick = (clickedContact) => {\n    setActiveContact(clickedContact);\n    setEditable((editable) ? clickedContact.id === activeContact.id : false);\n  }\n\n  const filterData = (value) => {\n    setData([...localData.filter(searchFilter(value))]);\n  }\n\n  const onChange = (e) => {\n    setActiveContact({});\n    filterData(e.target.value);\n    setSearch(e.target.value);\n  }\n\n  const handleEdit = () => {\n    setEditable(true);\n  }\n\n  const handleSave = (contact) => {\n    console.dir(contact);\n    setEditable(false);\n  }\n\n  React.useEffect(() => {\n    console.log(\"Rendered\");\n  });\n\n  return (\n    <div className={classes.root}>\n      {/* <CssBaseline /> */}\n      <SideDrawer open={open} handleDrawerOpen={handleDrawerOpen} handleDrawerClose={handleDrawerClose} />\n      }\n\n      <AppBar className={clsx(classes.appBar, { [classes.appBarShift]: open })}>\n        <Toolbar>\n          <IconButton\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <ClearAllRounded fontSize=\"large\" />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Hidden smUp>\n        <Backdrop className={classes.backdrop} open={open} onClick={() => setOpen(false)} />\n      </Hidden>\n\n      <main className={clsx({ [classes.mainContent]: open }, classes.content)}>\n        <div className={classes.toolbar} />\n        <Grid container spacing={5} >\n          {/* Heading-Contact starts here */}\n          <Grid container item xs={12} alignItems=\"center\" >\n            <Grid item xs={3} sm={2} md={1} style={{ maxWidth: \"48px\", marginRight: \"16px\" }}>\n              <i className=\"fa fa-address-book fa-flip-horizontal fa-3x icon-gradient\" ></i>\n            </Grid>\n            <Grid item xs={9} sm={10} md={11} className=\"text-left\" >\n              <Grid item xs={12}>\n                <Typography variant=\"h4\" component=\"span\">\n                  Contacts </Typography>\n              </Grid>\n              <Hidden xsDown>\n                <Grid item xs={12}>\n                  <Typography variant=\"subtitle1\" component=\"span\" className=\"text-silver\"> Welcome to InstaConnect</Typography>\n                </Grid>\n              </Hidden>\n            </Grid>\n          </Grid>\n          {/* Heading-Contact Ends here */}\n          <Grid container item xs={12} justify=\"center\">\n            {/* MAIN CONTENT SEARCHBAR AND LIST STARTS HERE */}\n            <Grid container item xs={12} spacing={6} className={classes.innerContent} >\n\n              {/* SearchBar */}\n              <SearchBar data={data} search={search} onChange={onChange} handleDelete={handleDelete} handleAdd={handleAdd} wannaCreateNew={wannaCreateNew} />\n              {/* SearchBar Ends ; Wrapper for List starts here*/}\n\n              <Grid container item xs={12} className={clsx(classes.removePadding)}>\n                <Grid item xs={12} lg >\n\n                  <ContactList data={data} activeContact={activeContact} editable={editable}\n                    handleContactClick={handleContactClick} handleCheckedChange={handleCheckedChange}\n                    handleSelectAll={handleSelectAll} handleAdd={handleAdd} handleEdit={handleEdit} handleSave={handleSave}\n                    wannaCreateNew={wannaCreateNew} addNewContact={addNewContact}\n                  />\n                </Grid>\n                <Hidden mdDown>\n                  <Grid container item xs={12} lg>\n\n                    <DetailCard contact={activeContact} editable={editable} handleEdit={handleEdit} handleSave={handleSave}\n                    />\n                  </Grid>\n                </Hidden>\n              </Grid>\n            </Grid>\n          </Grid>\n\n        </Grid>\n      </main>\n    </div >\n  );\n}\n","import React from 'react';\nimport Wrapper from './components/Wrapper'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{fontFamily:`\"Lucida Sans Unicode\", \"Lucida Grande\", \"sans-serif\"`}}>\n      <Wrapper />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}