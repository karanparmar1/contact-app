{"version":3,"sources":["data/LocalData.js","components/CommonStyle.js","components/DetailCard.js","components/ContactList.js","components/SearchBar.js","components/SideDrawer.js","components/Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["LocalData","id","checked","fullname","about","image","email","phone","company","address","CommonStyle","theme","styles","root","display","large","width","spacing","height","marginRight","breakpoints","down","larger","margin","backdrop","zIndex","drawer","color","active","boxShadow","background","button","minWidth","maxWidth","textTransform","fontSize","whiteSpace","minHeight","borderRadius","transform","Checkbox","btnEdit","fontWeight","basicInfo","flex","overflow","overflowWrap","contactField","position","top","padding","detailCard","textAlign","up","marginLeft","newContactField","marginTop","searchbar","input","transition","heading","paddingRight","textWhite","bgSilver","bgGradient","appBar","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","flexShrink","drawerOpen","overflowX","drawerClose","border","toolbar","alignItems","justifyContent","paddingLeft","mixins","mainContent","removePadding","innerContent","content","flexGrow","makeStyles","useStyles","stringToColor","string","hash","i","length","charCodeAt","toString","substr","DetailCard","contact","editable","handleEdit","handleSave","setActive","useTheme","classes","React","useState","state","setState","handleChangeInput","e","console","log","target","name","value","useEffect","undefined","Grid","container","item","xs","justify","className","style","Tooltip","title","IconButton","variant","onClick","ArrowBack","Fab","size","Edit","Avatar","src","split","map","n","lineHeight","Input","disableUnderline","type","onChange","disabled","data","Save","ContactList","props","selectAll","setSelectAll","newContactName","setNewContactName","newContactEmail","setNewContactEmail","emailError","setEmailError","nameError","setNameError","handleOnChange","found","find","obj","toLowerCase","trim","test","some","List","disablePadding","ListItem","arrow","edge","wannaCreateNew","handleSelectAll","IndeterminateCheckBox","AddBox","ListItemText","primary","Hidden","smDown","ListItemAvatar","addNewContact","reduce","max","next","Math","DoneOutline","TextField","required","autoFocus","multiline","label","InputProps","startAdornment","InputAdornment","AccountBox","error","helperText","onKeyDown","keyCode","placeholder","Email","handleAdd","Close","index","Fragment","key","dense","selected","activeContact","handleContactClick","ListItemIcon","disableRipple","handleCheckedChange","stopPropagation","alt","secondary","mdUp","lgUp","SearchBar","lg","clsx","InputBase","search","aria-label","Search","TransitionComponent","Zoom","Button","fullWidth","Add","handleDelete","Delete","SideDrawer","open","Drawer","paper","handleDrawerClose","ChevronLeft","handleDrawerOpen","ClearAllRounded","PersonOutline","Twitter","GitHub","localData","Wrapper","setOpen","setEditable","setActiveContact","setData","setSearch","setWannaCreateNew","temp","forEach","status","filterData","filter","includes","searchFilter","dir","AppBar","Toolbar","smUp","Backdrop","sm","md","Typography","component","xsDown","clickedContact","changedContact","push","mdDown","App","fontFamily","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6f72eada.chunk.js","sourcesContent":["\nconst LocalData = () => {\n    let data = [\n        {\n            id: 0,\n            checked: false,\n            fullname: \"Admin User\",\n            about: \"I am Admin Of the App\",\n            image: \"\",\n            email: \"admin@gmail.com\",\n            phone: \"1231234567\",\n            company: \"Work at Work\",\n            address: \"Gotham City\",\n        }, {\n            id: 1,\n            checked: false,\n            fullname: \"Karan Parmar\",\n            about: \"Intern At Zuru Tech India pvt ltd\",\n            image: \"brokenLink.png\",\n            email: \"k123parmar@gmail.com\",\n            phone: \"+91 8511918322\",\n            company: \"ZURU Tech India\",\n            address: \"Jivrajpark, Ahmedabad, Gujarat\",\n        }, {\n            id: 2,\n            checked: false,\n            fullname: \"Elon Musk\",\n            about: \"I build cool stuff\",\n            image: \"https://i1.wp.com/smestreet.in/wp-content/uploads/2018/05/Elon-Musk-Tesla.gif?fit=300%2C225&ssl=1\",\n            email: \"musk@tesla.com\",\n            phone: \"124 421 8055\",\n            company: \"Tesla Inc\",\n            address: \"Mars nearby Earth\",\n        }, {\n            id: 3,\n            checked: false,\n            fullname: \"Jeff Bezos\",\n            about: \"I am that rich guy\",\n            image: \"https://images.ladbible.com/thumbnail?type=jpeg&url=http://beta.ems.ladbiblegroup.com/s3/content/dceff8665e34a7857ec00b211f98cd9f.png&quality=70&width=720\",\n            email: \"bezos@amazon.com\",\n            phone: \"\",\n            company: \"Amazon Inc\",\n            address: \"Washington\",\n        }, {\n            id: 4,\n            checked: false,\n            fullname: \"Vrajpal Jhala\",\n            about: \"Intern At ZURU Tech India pvt ltd\",\n            image: \"\",\n            email: \"vrajpaljhala@gmail.com\",\n            phone: \"+91 1234512345\",\n            company: \"ZURU Tech India\",\n            address: \"Navrangpura, Ahmedabad, Gujarat\",\n        },\n    ];\n    return (\n        data\n    )\n}\n\nexport default LocalData\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst CommonStyle = (theme) => {\n\n    const drawerWidth = 220;\n\n    const styles =\n    {\n        root: {\n            display: \"flex\",\n        },\n        large: {\n            width: theme.spacing(6),\n            height: theme.spacing(6),\n            marginRight: theme.spacing(2),\n            [theme.breakpoints.down(\"xs\")]: {\n                marginRight: 0,\n            }\n        },\n        larger: {\n            width: theme.spacing(10),\n            height: theme.spacing(10),\n            margin: theme.spacing(2)\n        },\n        backdrop: {\n            [theme.breakpoints.down(\"sm\")]: {\n                zIndex: theme.zIndex.drawer - 1,\n                color: \"black\"\n            }\n        },\n        active: {\n            boxShadow: \"inset 5px 0 0 0 white\",\n            background: \"rgba(240,240,240,0.1)\",\n            color: \"rgba(255,255,255,1)\"\n        },\n        button: {\n            minWidth: \"80px\",\n            maxWidth: \"120px\",\n            textTransform: \"none\",\n            fontSize: \"110%\",\n            whiteSpace: \"nowrap\",\n            minHeight: \"48px\",\n            [theme.breakpoints.down(\"sm\")]: {\n                minWidth: \"44px\",\n                maxWidth: \"44px\",\n                minHeight: \"44px\",\n                borderRadius: \"50%\"\n            },\n            [theme.breakpoints.down(321)]: {\n                \"&:parent\": {\n                    background: \"red !important\"\n                },\n                minWidth: \"44px\",\n                maxWidth: \"44px\",\n                transform: \"scale(0.8)\",\n            }\n        },\n        Checkbox: {\n            [theme.breakpoints.down(\"xs\")]: {\n                minWidth: \"24px\"\n            }\n        },\n        btnEdit: {\n            color: \"black\",\n            background: \"white\",\n            \"& :hover\": {\n                fontWeight: \"600\"\n            }\n        },\n        basicInfo: {\n            flex: \"1 0 auto\",\n            // [theme.breakpoints.only(\"sm\")]:{\n            //     overflow:\"scroll\",\n            //     maxWidth:\"300px\"\n            // },\n            [theme.breakpoints.down(320)]: {\n                overflow: \"scroll\",\n                maxWidth: \"130px\",\n                overflowWrap: \"anywhere\"\n            }\n        },\n        contactField: {\n            background: \"transparent\",\n            position: \"relative\",\n            top: \"-4px\",\n            color: \"black !important\",\n            padding: \"0px 3px\",\n            fontSize: \"larger\",\n        },\n        detailCard: {\n            textAlign: \"left\",\n            padding: \"32px\",\n            [theme.breakpoints.up(\"lg\")]: {\n                marginLeft: \"32px\"\n            }\n        },\n        newContactField: {\n            marginTop: \"10px\",\n            width:\"46%\",\n            minWidth: \"45%\",\n            marginLeft:\"2.4%\",\n            [theme.breakpoints.down(\"xs\")]: {\n                minWidth: \"94%\",\n            }\n        },\n        searchbar: {\n            background: \"rgb(230, 230, 230)\",\n            display: \"flex\",\n            borderRadius: 25,\n            padding: \"0 12px 0\",\n            minWidth: \"120px\",\n\n            [theme.breakpoints.down(321)]: {\n                transform: \"scale(0.9)\"\n            }\n        },\n        input: {\n            background: \"transparent\",\n            marginLeft: theme.spacing(1),\n            flex: 1,\n            transition: \"all 0.5s linear\",\n            \"& :focus\": {\n                fontWeight: \"600\"\n            }\n\n        },\n        heading: {\n            [theme.breakpoints.down(321)]: {\n                paddingRight: \"0px\",\n                transform: \"scale(0.8)\"\n            }\n        },\n        textWhite: {\n            color: \"rgba(255,255,255,0.9)\"\n        },\n        bgSilver: {\n            background: \"rgb(230, 230, 230)\",\n            color: \"rgb(128, 128, 128)\"\n        },\n        bgGradient: {\n            background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n            color: \"white\",\n            fontWeight: \"bold\",\n        },\n\n        appBar: {\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen\n            }),\n            background: \"white\",\n\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen\n            })\n        },\n        menuButton: {\n            marginRight: 29\n        },\n        hide: {\n            display: \"none\"\n        },\n        drawer: {\n            width: drawerWidth,\n            flexShrink: 0,\n            whiteSpace: \"nowrap\",\n            background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n        },\n\n        drawerOpen: {\n            width: drawerWidth,\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen\n            }),\n            overflowX: \"hidden\"\n        },\n        drawerClose: {\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen\n            }),\n            overflowX: \"hidden\",\n            width: 0,\n            border: 0,\n            [theme.breakpoints.up('sm')]: {\n                width: theme.spacing(8) + 1,\n            },\n\n        },\n        toolbar: {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            paddingLeft: \"90px\",\n            padding: theme.spacing(0, 1),\n            ...theme.mixins.toolbar\n        },\n        mainContent: {\n            [theme.breakpoints.down('xs')]: {\n                position: \"absolute\"\n            }\n        },\n        removePadding: {\n            [theme.breakpoints.down('xs')]: {\n                padding: \"20px 0px !important\",\n            }\n        },\n        innerContent: {\n            padding: \"auto 0px\",\n            [theme.breakpoints.up('sm')]: {\n                paddingLeft: \"32px\"\n            },\n            [theme.breakpoints.down('sm')]: {\n                padding: \"auto 0px auto\",\n            }\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n            margin: \"20px\",\n            [theme.breakpoints.down('xs')]: {\n                margin: \"0px\"\n            },\n        }\n    };\n\n\n    const useStyles = makeStyles(theme => (styles));\n    const classes = useStyles();\n\n\n    return (classes);\n};\n\n\nexport default CommonStyle;\n","import React from 'react';\nimport { Edit, Save, ArrowBack } from \"@material-ui/icons\";\nimport { Grid, Avatar, Fab, Input, IconButton, Tooltip } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport CommonStyle from \"./CommonStyle\";\n\nfunction display(data) {\n    if (data !== undefined) return data.length > 0 ? data : \"No Informarion Provided\";\n}\nfunction stringToColor(string) {\n    let hash = 0, i = 0, color = \"#\";\n    for (i = 0; i < string.length; i += 1) {\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    for (i = 0; i < 3; i += 1) {\n        const value = (hash >> (i * 8)) & 0xff;\n        color += `00${value.toString(16)}`.substr(-2);\n    }\n    return color;\n}\n\nconst DetailCard = ({ contact, editable, handleEdit, handleSave, setActive }) => {\n    const theme = useTheme();\n    const classes = CommonStyle(theme);\n    const [state, setState] = React.useState(contact);\n\n    const handleChangeInput = (e) => {\n        console.log(state);\n        setState({\n            ...state,\n            [e.target.name]: e.target.value\n        });\n    }\n    React.useEffect(() => { console.log(contact.fullname) }\n    );\n    return (\n        contact.id !== undefined && contact.id !== null ?\n            <Grid container item xs={12} justify=\"center\" className={`${classes.detailCard} ${classes.bgSilver}`} >\n\n                <Grid container item xs={12} justify=\"space-between\">\n                    <Grid item xs style={{ textAlign: \"left\" }}>\n                        <Tooltip title=\"Back\">\n                            <IconButton variant=\"extended\" color=\"secondary\" style={{ padding: \"8px 0px\" }} onClick={() => setActive({})}><ArrowBack/>  </IconButton>\n                        </Tooltip>\n                    </Grid>\n                    <Grid item xs style={{ textAlign: \"right\" }}>  {!editable ?\n                        <Tooltip title=\"Edit\">\n                            <Fab size=\"medium\" variant=\"extended\" className={classes.btnEdit} onClick={() => handleEdit()}><Edit fontSize=\"small\" /> &nbsp;EDIT </Fab>\n                        </Tooltip> : <></>}\n                    </Grid>\n                </Grid>\n\n                <Grid container item spacing={3}>\n                    <Grid container item xs={12} justify=\"center\">\n                        <Grid item>\n                            <Avatar src={contact.image} className={classes.larger} style={{ background: stringToColor(contact.id+contact.fullname) }}>\n                                {contact.fullname.split(\" \").map((n, i) => i < 2 ? n[0] : \"\")}\n                            </Avatar>\n                        </Grid>\n                        <Grid container item style={{ textAlign: \"center\" }}>\n                            <Grid item xs={12}>\n                                <h1 style={{ lineHeight: 1, color: \"black\", maxWidth: \"100%\", overflowWrap: \"anywhere\", }}>\n                                    {contact.fullname}\n                                </h1>\n                            </Grid>\n                            <Grid item xs={12} style={{ minHeight: \"100px\" }}>\n                                {contact.about}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid container item xs={12}>\n                        <Grid item xs={4}>Full Name</Grid>\n                        <Grid item xs={8} className=\"text-black\">\n\n                            <Input disableUnderline={!editable} type=\"text\" className={classes.contactField}\n                                value={/*state.fullname ? state.fullname :*/ contact.fullname} name=\"fullname\" onChange={handleChangeInput}\n                                disabled={!editable}\n                            />\n\n                        </Grid>\n                    </Grid>\n                    <Grid container item xs={12}>\n                        <Grid item xs={4}>Email</Grid>\n                        <Grid item xs={8} className=\"text-black\">\n\n                            <Input disableUnderline={!editable} type=\"text\" className={classes.contactField}\n                                value={/*state.email ? state.email :*/ contact.email} name=\"email\" onChange={handleChangeInput}\n                                disabled={!editable}\n                            />\n\n                        </Grid>\n                    </Grid>\n                    <Grid container item xs={12}>\n                        <Grid item xs={4}>Phone</Grid>\n                        <Grid item xs={8} className=\"text-black\">{display(contact.phone)}</Grid>\n                    </Grid>\n                    <Grid container item xs={12}>\n                        <Grid item xs={4}>Company</Grid>\n                        <Grid item xs={8} className=\"text-black\">{contact.company}</Grid>\n                    </Grid>\n                    <Grid container item xs={12}>\n                        <Grid item xs={4}>Address</Grid>\n                        <Grid item xs={8} className=\"text-black\">{contact.address}</Grid>\n                    </Grid>\n                </Grid>\n\n                {editable ? <Grid item style={{ margin: \"24px auto 0px\" }}>\n                    <Fab variant=\"extended\" size=\"medium\" color=\"primary\" onClick={() => handleSave(state)}><Save /> &nbsp;Save </Fab>\n                </Grid> : <></>}\n\n\n            </Grid>\n            : <></>\n        // : <Grid container item xs={12} justify=\"center\" className={`${classes.detailCard} ${classes.bgSilver}`} >\n        //     \"Contact Details will be displayed over here\"</Grid>\n    )\n}\n\nexport default DetailCard\n","import React from 'react';\nimport {\n    List, ListItem, ListItemIcon, ListItemText, ListItemAvatar, ListItemSecondaryAction,\n    Checkbox, TextField, InputAdornment, Hidden, IconButton, Fab, Avatar, Tooltip\n} from '@material-ui/core';\n\nimport { AddBox, IndeterminateCheckBox, AccountBox, DoneOutline, Close, Email } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport CommonStyle from \"./CommonStyle\";\nimport DetailCard from \"./DetailCard\"\n\nfunction stringToColor(string) {\n    let hash = 0, i = 0, color = \"#\";\n    for (i = 0; i < string.length; i += 1) {\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    for (i = 0; i < 3; i += 1) {\n        const value = (hash >> (i * 8)) & 0xff;\n        color += `00${value.toString(16)}`.substr(-2);\n    }\n    return color;\n}\nconst ContactList = (props) => {\n    const theme = useTheme();\n    const classes = CommonStyle(theme);\n    const [selectAll, setSelectAll] = React.useState(false);\n    const [newContactName, setNewContactName] = React.useState(\"\");\n    const [newContactEmail, setNewContactEmail] = React.useState(\"\");\n    const [emailError, setEmailError] = React.useState(\"\");\n    const [nameError, setNameError] = React.useState(\"\");\n    const handleOnChange = e => {\n        let value = e.target.value;\n        if (e.target.name === \"fullname\") {\n            if (value.length > 32) {\n                setNameError(\"max 32 chars\");\n            }\n            else {\n                setNewContactName(value);\n                setNameError(\"\");\n            }\n        }\n        if (e.target.name === \"email\") {\n            let found = props.data.find(obj => obj.email.toLowerCase() === value.toLowerCase()) || null;\n            setNewContactEmail(value.trim());\n            if (value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n                setEmailError(\"Invalid email address\");\n            }\n            \n            else if(found!==null) {\n                setEmailError(\"Email already exists\");\n            }\n            else {\n                setEmailError(\"\");\n            }\n        }\n    }\n    const saveContact = (e) => {\n        if (e.keyCode === 13 && newContactName.trim().length) {\n            props.addNewContact({\n                id: props.data.length ? props.data.reduce((max, next) => Math.max(max, next.id), props.data[0].id) + 1 : 0,\n                fullname: newContactName,\n                email: newContactEmail,\n                checked: false\n            });\n            setNewContactName(\"\");\n            setNewContactEmail(\"\");\n        }\n    }\n    React.useEffect(() => { setSelectAll(props.data.some(contact => contact.checked)); });\n    return (\n        <List style={{ flexGrow: 1 }} disablePadding={true}>\n            <ListItem className=\"bg-silver\" style={{ padding: \"1px 12px\" }}>\n                <Tooltip title={selectAll ? \"DeSelectAll\" : \"SelectAll\"} arrow><span>\n                    <IconButton edge=\"start\" disabled={props.wannaCreateNew || props.data.length < 1} onClick={() => { props.handleSelectAll(!selectAll); setSelectAll(!selectAll); }}>\n                        {selectAll ? <IndeterminateCheckBox /> : <AddBox />}\n                    </IconButton></span>\n                </Tooltip>\n                <ListItemText primary=\"Basic Info\" style={{ marginLeft: \"32px\" }} />\n                <Hidden smDown> <ListItemText primary=\"Email\" style={{ display: 'flex', justifyContent: \"center\" }} /> </Hidden>\n            </ListItem>\n            {\n                props.wannaCreateNew ?\n                    <ListItem>\n                        <ListItemAvatar>\n                            <Fab color=\"primary\" size=\"medium\"\n                                onClick={() => {\n                                    props.addNewContact({\n                                        id: props.data.length ? props.data.reduce((max, next) => Math.max(max, next.id), props.data[0].id) + 1 : 0,\n                                        fullname: newContactName,\n                                        email: newContactEmail,\n                                        checked: false\n                                    });\n                                    setNewContactName(\"\");\n                                    setNewContactEmail(\"\");\n                                }}\n                                disabled={!newContactName.trim().length > 0 || emailError.length > 0 || nameError.length > 0}\n                            >\n                                <DoneOutline />\n                            </Fab>\n                        </ListItemAvatar>\n\n                        <ListItemText primary={\n                            <form>\n                                <TextField required autoFocus multiline\n                                    value={newContactName}\n                                    label=\" FullName\" name=\"fullname\"\n                                    InputProps={{\n                                        startAdornment: (<InputAdornment position=\"start\">\n                                            <AccountBox /> </InputAdornment>\n                                        )\n                                    }}\n                                    error={nameError.length > 0}\n                                    helperText={nameError}\n                                    onChange={handleOnChange}\n                                    onKeyDown={saveContact}\n                                    placeholder=\"Peter Parker\"\n                                    className={classes.newContactField}\n                                />\n                                <TextField multiline value={newContactEmail}\n                                    placeholder=\"person@mail.com\"\n                                    label=\"Email\" name=\"email\"\n                                    InputProps={{\n                                        startAdornment: (<InputAdornment position=\"start\">\n                                            <Email /> </InputAdornment>\n                                        )\n                                    }}\n                                    error={emailError.length > 0}\n                                    helperText={emailError}\n                                    onChange={handleOnChange}\n                                    className={classes.newContactField}\n                                />\n                            </form>\n                        } />\n                        <ListItemText\n                            primary={<Fab color=\"secondary\" size=\"medium\" onClick={() => {\n                                props.handleAdd(false); setNewContactName(\"\"); setNewContactEmail(\"\"); setEmailError(\"\");\n                            }}><Close /></Fab>\n                            }\n                            style={{ maxWidth: \"48px\" }}\n                        />\n                    </ListItem>\n                    : <></>\n            }\n            {\n                props.data.length ?\n                    props.data.map((contact, index) =>\n                        <React.Fragment key={index}>\n                            <ListItem dense selected={props.activeContact.id === contact.id} disabled={props.wannaCreateNew}\n                                button onClick={() => { props.handleContactClick(contact); }} key={index}\n                                style={{ padding: \"6px 16px\" }}>\n                                <ListItemIcon className={classes.Checkbox}>\n                                    <Checkbox\n                                        edge=\"start\"\n                                        disableRipple\n                                        color=\"primary\"\n                                        checked={contact.checked}\n                                        onClick={(e) => { props.handleCheckedChange(contact); e.stopPropagation(); }}\n                                    />\n                                </ListItemIcon>\n                                <ListItemAvatar>\n                                    <Avatar src={contact.image} alt={contact.fullname} className={classes.large} style={{ background: stringToColor(contact.id+contact.fullname) }}>\n                                        {contact.fullname.split(\" \").map((n, i) => i < 2 ? n[0] : \"\")}\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={<h3 style={{ lineHeight: \"1\", margin: \"6px 0px 4px\", maxWidth: \"10em\", overflowWrap: \"anywhere\", }}>{contact.fullname}</h3>}\n                                    secondary={<Hidden mdUp>{contact.email ? <small style={{ fontWeight: \"600\" }}>{contact.email}</small> : <small>&nbsp;</small>}</Hidden>}\n                                    className={classes.basicInfo}\n                                />\n                                <Hidden smDown><ListItemText primary={contact.email ? <h4>{contact.email}</h4> : <h4>&nbsp;</h4>} /> </Hidden>\n\n                            </ListItem>\n\n                            {(props.activeContact.id === contact.id) ?\n                                <Hidden lgUp>\n                                    <DetailCard contact={props.activeContact} editable={props.editable} setActive={props.setActive} handleEdit={props.handleEdit} handleSave={props.handleSave} />\n                                </Hidden> : <></>\n                            }\n\n                        </React.Fragment>\n\n                    )\n                    : <h3 style={{ color: \"red\" }}>NO CONTACTS FOUND !</h3>\n            }\n\n        </List>\n    )\n}\n\nexport default ContactList\n","import React from 'react';\nimport clsx from \"clsx\";\nimport { Grid, InputBase, Button, IconButton, Hidden, Tooltip,Zoom } from \"@material-ui/core\";\nimport { Add, Delete, Search } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport CommonStyle from \"./CommonStyle\";\n\nconst SearchBar = (props) => {\n    const theme = useTheme();\n    const classes = CommonStyle(theme);\n\n    return (\n        <Grid container item xs={12} lg={6} className={clsx(classes.removePadding)}>\n            <Grid item xs={8} lg>\n                <div className={classes.searchbar}>\n                    <InputBase\n                        className={classes.input}\n                        type=\"search\"\n                        value={props.search}\n                        placeholder=\"Search Contacts\"\n                        onChange={props.onChange}\n                        disabled={props.wannaCreateNew}\n                        style={!props.data.length ? { color: \"red\" } : {}}\n                       \n                    />\n                    <IconButton type=\"submit\" disabled aria-label=\"search\">\n                        <Search />\n                    </IconButton>\n                </div>\n            </Grid>\n            <Grid container justify=\"center\" item xs={4} lg>\n                <Grid item xs={6}> <Tooltip title=\"Add Contact\" arrow TransitionComponent={Zoom}> \n                    <Button\n                        variant=\"contained\"\n                        className={clsx(classes.button, classes.bgGradient)}\n                        size=\"large\"\n                        fullWidth\n                        disabled={props.wannaCreateNew}\n                        onClick={() => props.handleAdd(true)}\n                    ><Add /><Hidden smDown> &nbsp;Add </Hidden></Button></Tooltip>\n                </Grid>\n                <Grid item xs={6}>\n                    <Tooltip title=\"Delete Selected\" arrow TransitionComponent={Zoom}>\n                        <span><Button\n                            variant=\"contained\"\n                            className={clsx(classes.button, classes.bgGradient)}\n                            size=\"large\"\n                            fullWidth\n                            onClick={props.handleDelete}\n                            disabled={!props.data.some(item => item.checked) || props.wannaCreateNew}\n                        > <Delete /><Hidden smDown> &nbsp;Delete &nbsp; </Hidden>\n                        </Button>\n                        </span>\n                    </Tooltip>\n                </Grid>\n            </Grid>\n        </Grid >\n\n    )\n}\n\nexport default SearchBar\n","import React from 'react';\nimport clsx from \"clsx\";\nimport {\n    List, ListItem, ListItemIcon, ListItemText, IconButton, Drawer,\n} from '@material-ui/core';\n\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { Twitter, GitHub, PersonOutline, ClearAllRounded, ChevronLeft } from \"@material-ui/icons\";\nimport CommonStyle from \"./CommonStyle\";\n\nconst SideDrawer = (props) => {\n    let open = props.open;\n    const theme = useTheme();\n    const classes = CommonStyle(theme);\n    return (\n        <Drawer\n            variant=\"permanent\"\n            className={clsx(classes.drawer, {\n                [classes.drawerOpen]: open,\n                [classes.drawerClose]: !open\n            })}\n            classes={{\n                paper: clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open\n                })\n            }}\n        >\n            <div className={classes.toolbar}>\n                <IconButton onClick={props.handleDrawerClose}>\n                    <ChevronLeft fontSize=\"large\" />\n                </IconButton>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    onClick={props.handleDrawerOpen}\n                    edge=\"start\"\n                    className={clsx(classes.menuButton, classes.textWhite, {\n                        [classes.hide]: open\n                    })}\n                >\n                    <ClearAllRounded fontSize=\"large\" />\n                </IconButton>\n            </div>\n\n            <List className={classes.textWhite}>\n                <ListItem button className={classes.active} >\n                    <ListItemIcon className={classes.textWhite}>\n                        <PersonOutline fontSize=\"large\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Local\" />\n                </ListItem>\n                <ListItem button >\n                    <ListItemIcon className={classes.textWhite}>\n                        <Twitter fontSize=\"large\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Twitter\" />\n                </ListItem>\n\n                <ListItem button>\n                    <ListItemIcon className={classes.textWhite}>\n                        <GitHub fontSize=\"large\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"GitHub\" />\n                </ListItem>\n            </List>\n        </Drawer>\n\n    )\n}\n\nexport default SideDrawer\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport \"font-awesome/css/font-awesome.min.css\"\nimport { useTheme } from \"@material-ui/core/styles\";\nimport {\n  Backdrop, IconButton, Grid, Hidden, AppBar, Toolbar, Typography\n} from \"@material-ui/core\";\n\nimport { ClearAllRounded } from \"@material-ui/icons\";\nimport LocalData from \"../data/LocalData\";\nimport DetailCard from \"./DetailCard\";\nimport ContactList from \"./ContactList\";\nimport SearchBar from \"./SearchBar\";\nimport SideDrawer from \"./SideDrawer\";\nimport CommonStyle from \"./CommonStyle\";\n\nlet localData = LocalData();\n\nexport default function Wrapper() {\n\n  const theme = useTheme();\n  const classes = CommonStyle(theme);\n\n  const [open, setOpen] = React.useState(false);\n  const [editable, setEditable] = React.useState(false);\n  const [activeContact, setActiveContact] = React.useState({});\n  const [data, setData] = React.useState(localData);\n  const [search, setSearch] = React.useState(\"\");\n  const [wannaCreateNew, setWannaCreateNew] = React.useState(false);\n  const searchFilter = search => item => item.fullname.toLowerCase().includes(search.toLowerCase())\n\n  const handleDrawerOpen = () => setOpen(true);\n\n  const handleDrawerClose = () => setOpen(false);\n\n  const setActive = (contact) => setActiveContact(contact);\n\n  const handleCheckedChange = (changedContact) => {\n    let temp = data;\n    temp.forEach(item => {\n      item.checked = (item.id === changedContact.id) ? !changedContact.checked : item.checked;\n    });\n    setData([...temp]);\n  }\n\n  const handleSelectAll = (selectAll) => {\n    let temp = data;\n    temp.forEach(contact => {\n      contact.checked = selectAll\n    })\n    setData([...temp]);\n  };\n\n  const handleDelete = () => {\n    localData = localData.filter(item => !item.checked);\n    setData([...localData]);\n    if (activeContact.checked) { setActiveContact({}) }\n    setSearch(\"\");\n  }\n\n  const handleAdd = (status = true) => {\n    setActiveContact({});\n    handleSelectAll(false);\n    setSearch(\"\");\n    filterData(\"\");\n    setWannaCreateNew(status);\n  }\n\n  const addNewContact = (contact) => {\n    localData.push(contact);\n    setData([...localData]);\n    setWannaCreateNew(false);\n    setActiveContact(contact);\n  }\n\n  const handleContactClick = (clickedContact) => {\n    setActiveContact(clickedContact);\n    setEditable((editable) ? clickedContact.id === activeContact.id : false);\n  }\n\n  const filterData = (value) => {\n    setData([...localData.filter(searchFilter(value))]);\n  }\n\n  const onChange = (e) => {\n    setActiveContact({});\n    filterData(e.target.value);\n    setSearch(e.target.value);\n  }\n\n  const handleEdit = () => {\n    setEditable(true);\n  }\n\n  const handleSave = (contact) => {\n    console.dir(contact);\n    setEditable(false);\n  }\n\n  React.useEffect(() => {\n    console.log(\"Rendered\");\n  });\n\n  return (\n    <div className={classes.root}>\n      {/* <CssBaseline /> */}\n      <SideDrawer open={open} handleDrawerOpen={handleDrawerOpen} handleDrawerClose={handleDrawerClose} />\n      }\n\n      <AppBar className={clsx(classes.appBar, { [classes.appBarShift]: open })}>\n        <Toolbar>\n          <IconButton\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <ClearAllRounded fontSize=\"large\" />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Hidden smUp>\n        <Backdrop className={classes.backdrop} open={open} onClick={() => setOpen(false)} />\n      </Hidden>\n\n      <main className={clsx({ [classes.mainContent]: open }, classes.content)}>\n        <div className={classes.toolbar} />\n        <Grid container spacing={5} >\n          {/* Heading-Contact starts here */}\n          <Grid container item xs={12} alignItems=\"center\" className={classes.heading} >\n            <Grid item xs={3} sm={2} md={1} style={{ maxWidth: \"48px\", marginRight: \"16px\" }}>\n              <i className=\"fa fa-address-book fa-flip-horizontal fa-3x icon-gradient\" ></i>\n            </Grid>\n            <Grid item xs={9} sm={10} md={11} className=\"text-left\" >\n              <Grid item xs={12}>\n                <Typography variant=\"h4\" component=\"span\">\n                  Contacts </Typography>\n              </Grid>\n              <Hidden xsDown>\n                <Grid item xs={12}>\n                  <Typography variant=\"subtitle1\" component=\"span\" className=\"text-silver\"> Welcome to InstaConnect</Typography>\n                </Grid>\n              </Hidden>\n            </Grid>\n          </Grid>\n          {/* Heading-Contact Ends here */}\n          <Grid container item xs={12} justify=\"center\">\n            {/* MAIN CONTENT SEARCHBAR AND LIST STARTS HERE */}\n            <Grid container item xs={12} spacing={6} className={classes.innerContent} >\n\n              {/* SearchBar */}\n              <SearchBar data={data} search={search} onChange={onChange} handleDelete={handleDelete} handleAdd={handleAdd} wannaCreateNew={wannaCreateNew} />\n              {/* SearchBar Ends ; Wrapper for List starts here*/}\n\n              <Grid container item xs={12} className={clsx(classes.removePadding)}>\n                <Grid item xs={12} lg >\n\n                  <ContactList data={data} activeContact={activeContact} editable={editable} setActive={setActive}\n                    handleContactClick={handleContactClick} handleCheckedChange={handleCheckedChange}\n                    handleSelectAll={handleSelectAll} handleAdd={handleAdd} handleEdit={handleEdit} handleSave={handleSave}\n                    wannaCreateNew={wannaCreateNew} addNewContact={addNewContact}\n                  />\n                </Grid>\n                <Hidden mdDown>\n                  <Grid container item xs={12} lg>\n\n                    <DetailCard contact={activeContact} setActive={setActive} editable={editable} handleEdit={handleEdit} handleSave={handleSave}\n                    />\n                  </Grid>\n                </Hidden>\n              </Grid>\n            </Grid>\n          </Grid>\n\n        </Grid>\n      </main>\n    </div >\n  );\n}\n","import React from 'react';\nimport Wrapper from './components/Wrapper'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{fontFamily:`\"Lucida Sans Unicode\", \"Lucida Grande\", \"sans-serif\"`}}>\n      <Wrapper />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}